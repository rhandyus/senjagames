declare const AutoPaymentsCreate: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly secret_answer: {
                    readonly title: "Secret Answer";
                    readonly type: "string";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Secret answer.";
                };
                readonly username_receiver: {
                    readonly title: "Username Receiver";
                    readonly type: "string";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Username of the payment receiver.";
                };
                readonly day: {
                    readonly title: "Day";
                    readonly type: "integer";
                    readonly enum: readonly [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Day of the month for the payment.";
                };
                readonly amount: {
                    readonly title: "Amount";
                    readonly type: "number";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Amount to be transferred.";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency for the payment.";
                };
                readonly description: {
                    readonly title: "Description";
                    readonly type: "string";
                    readonly maxLength: 255;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Payment description.";
                };
            };
            readonly required: readonly ["username_receiver", "day", "amount"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["status", "message", "auto_payment_id", "system_info"];
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly auto_payment_id: {
                    readonly title: "Auto";
                    readonly type: "integer";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly required: readonly ["errors", "system_info"];
            readonly properties: {
                readonly errors: {
                    readonly title: "Errors";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const AutoPaymentsDelete: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly auto_payment_id: {
                    readonly title: "Auto Payment Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Auto payment ID.";
                };
            };
            readonly required: readonly ["auto_payment_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "NotFoundError";
            readonly type: "object";
            readonly properties: {
                readonly error: {
                    readonly title: "Error";
                    readonly type: "string";
                    readonly default: "Auto payment not found";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const AutoPaymentsList: {
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["payments", "marketVisitor", "system_info"];
            readonly properties: {
                readonly payments: {
                    readonly title: "Payments";
                    readonly type: "object";
                    readonly properties: {
                        readonly "1234567890": {
                            readonly title: "";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly receiver_id: {
                                    readonly title: "Receiver";
                                    readonly type: "integer";
                                };
                                readonly amount: {
                                    readonly title: "Amount";
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly title: "Description";
                                    readonly type: "string";
                                };
                                readonly next_payment: {
                                    readonly title: "Next";
                                    readonly type: "integer";
                                };
                                readonly next_alert_date: {
                                    readonly title: "Next";
                                    readonly type: "integer";
                                };
                                readonly auto_payment_id: {
                                    readonly title: "Auto";
                                    readonly type: "integer";
                                };
                                readonly day: {
                                    readonly title: "Day";
                                    readonly type: "string";
                                };
                                readonly receiver: {
                                    readonly title: "Receiver";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly user_id: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly username: {
                                            readonly title: "Username";
                                            readonly type: "string";
                                        };
                                        readonly username_html: {
                                            readonly title: "Username";
                                            readonly type: "string";
                                        };
                                        readonly user_message_count: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_register_date: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_like_count: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_like2_count: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly contest_count: {
                                            readonly title: "Contest";
                                            readonly type: "integer";
                                        };
                                        readonly trophy_count: {
                                            readonly title: "Trophy";
                                            readonly type: "integer";
                                        };
                                        readonly custom_title: {
                                            readonly title: "Custom";
                                            readonly type: "string";
                                        };
                                        readonly is_banned: {
                                            readonly title: "Is";
                                            readonly type: "integer";
                                        };
                                        readonly user_title: {
                                            readonly title: "User";
                                            readonly type: "string";
                                        };
                                        readonly user_is_valid: {
                                            readonly title: "User";
                                            readonly type: "boolean";
                                        };
                                        readonly user_is_verified: {
                                            readonly title: "User";
                                            readonly type: "boolean";
                                        };
                                        readonly user_is_followed: {
                                            readonly title: "User";
                                            readonly type: "boolean";
                                        };
                                        readonly user_last_seen_date: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_following_count: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_followers_count: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly links: {
                                            readonly title: "Links";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly permalink: {
                                                    readonly title: "Permalink";
                                                    readonly type: "string";
                                                };
                                                readonly detail: {
                                                    readonly title: "Detail";
                                                    readonly type: "string";
                                                };
                                                readonly avatar: {
                                                    readonly title: "Avatar";
                                                    readonly type: "string";
                                                };
                                                readonly avatar_big: {
                                                    readonly title: "Avatar";
                                                    readonly type: "string";
                                                };
                                                readonly avatar_small: {
                                                    readonly title: "Avatar";
                                                    readonly type: "string";
                                                };
                                                readonly followers: {
                                                    readonly title: "Followers";
                                                    readonly type: "string";
                                                };
                                                readonly followings: {
                                                    readonly title: "Followings";
                                                    readonly type: "string";
                                                };
                                                readonly ignore: {
                                                    readonly title: "Ignore";
                                                    readonly type: "string";
                                                };
                                                readonly timeline: {
                                                    readonly title: "Timeline";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["permalink", "detail", "avatar", "avatar_big", "avatar_small", "followers", "followings", "ignore", "timeline"];
                                        };
                                        readonly permissions: {
                                            readonly title: "Permissions";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly edit: {
                                                    readonly title: "Edit";
                                                    readonly type: "boolean";
                                                };
                                                readonly follow: {
                                                    readonly title: "Follow";
                                                    readonly type: "boolean";
                                                };
                                                readonly ignore: {
                                                    readonly title: "Ignore";
                                                    readonly type: "boolean";
                                                };
                                                readonly profile_post: {
                                                    readonly title: "Profile";
                                                    readonly type: "boolean";
                                                };
                                            };
                                            readonly required: readonly ["edit", "follow", "ignore", "profile_post"];
                                        };
                                        readonly user_is_ignored: {
                                            readonly title: "User";
                                            readonly type: "boolean";
                                        };
                                        readonly user_is_visitor: {
                                            readonly title: "User";
                                            readonly type: "boolean";
                                        };
                                        readonly user_group_id: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly fields: {
                                            readonly title: "Fields";
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly title: "Id";
                                                        readonly type: "string";
                                                    };
                                                    readonly title: {
                                                        readonly title: "Title";
                                                        readonly type: "string";
                                                    };
                                                    readonly description: {
                                                        readonly title: "Description";
                                                        readonly type: "string";
                                                    };
                                                    readonly position: {
                                                        readonly title: "Position";
                                                        readonly type: "string";
                                                    };
                                                    readonly is_required: {
                                                        readonly title: "Is";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly value: {
                                                        readonly title: "Value";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "title", "description", "position", "is_required", "value"];
                                            };
                                        };
                                    };
                                    readonly required: readonly ["user_id", "username", "username_html", "user_message_count", "user_register_date", "user_like_count", "user_like2_count", "contest_count", "trophy_count", "custom_title", "is_banned", "user_title", "user_is_valid", "user_is_verified", "user_is_followed", "user_last_seen_date", "user_following_count", "user_followers_count", "links", "permissions", "user_is_ignored", "user_is_visitor", "user_group_id", "fields"];
                                };
                            };
                            readonly required: readonly ["user_id", "receiver_id", "amount", "description", "next_payment", "next_alert_date", "auto_payment_id", "day", "receiver"];
                        };
                    };
                    readonly required: readonly ["1234567890"];
                };
                readonly marketVisitor: {
                    readonly title: "Market Visitor";
                    readonly type: "object";
                    readonly properties: {};
                    readonly required: readonly [];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const Batch: {
    readonly body: {
        readonly title: "BatchModel";
        readonly type: "array";
        readonly maxItems: 10;
        readonly items: {
            readonly title: "Batch Job";
            readonly required: readonly ["uri"];
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly title: "Id";
                    readonly type: "string";
                    readonly description: "identifier for the job, will be use in output as key of a result set. If this parameter is not set, the URI will be used.";
                };
                readonly uri: {
                    readonly title: "Uri";
                    readonly type: "string";
                    readonly description: "URI of the API request to execute.";
                };
                readonly method: {
                    readonly title: "Method";
                    readonly type: "string";
                    readonly description: "HTTP method of the API request to execute. If this parameter is not set, GET HTTP method will be used.";
                    readonly enum: readonly ["GET", "POST", "PUT", "DELETE"];
                };
                readonly params: {
                    readonly title: "Params";
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                    readonly description: "parameters of the API request to execute.";
                };
            };
        };
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly title: "JobsModel";
            readonly required: readonly ["jobs"];
            readonly type: "object";
            readonly properties: {
                readonly jobs: {
                    readonly title: "Jobs";
                    readonly required: readonly ["job_id"];
                    readonly type: "object";
                    readonly properties: {
                        readonly job_id: {
                            readonly title: "JobId";
                            readonly type: "object";
                            readonly properties: {
                                readonly _job_result: {
                                    readonly type: "string";
                                };
                                readonly _job_error: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "400": {
            readonly title: "Invalid Batch";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "/batch requires valid JSON for jobs input.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CartAdd: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "item_id";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["success", "system_info"];
            readonly properties: {
                readonly success: {
                    readonly title: "Success";
                    readonly type: "boolean";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Market Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "default";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CartDelete: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "item_id";
                    readonly type: "integer";
                    readonly description: "Item id.\nDon't set this parameter to delete all items from your cart.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["success", "system_info"];
            readonly properties: {
                readonly success: {
                    readonly title: "Success";
                    readonly type: "boolean";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Market Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "default";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryAll: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Item List Model";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "perPage", "page", "cacheTTL", "lastModified", "searchUrl", "stickyItems", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly item_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_state: {
                                readonly type: "string";
                                readonly default: "active";
                            };
                            readonly category_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly published_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly default: "Title";
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly default: "Description";
                            };
                            readonly price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly update_stat_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly refreshed_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly view_count: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly is_sticky: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly extended_guarantee: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly nsb: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly allow_ask_discount: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title_en: {
                                readonly type: "string";
                                readonly default: "Title EN";
                            };
                            readonly description_en: {
                                readonly type: "string";
                                readonly default: "Description EN";
                            };
                            readonly item_domain: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly resale_item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly isIgnored: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly guarantee: {
                                readonly type: "boolean";
                                readonly default: any;
                            };
                            readonly canViewLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUpdateItemStats: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewEmailLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly showGetEmailCodeButton: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canOpenItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canCloseItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canEditItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canDeleteItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canStickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUnstickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly bumpSettings: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                    readonly errorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                };
                            };
                            readonly canBumpItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canBuyItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly rub_price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly price_currency: {
                                readonly type: "string";
                                readonly default: "rub";
                            };
                            readonly canValidateAccount: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewAccountLink: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly itemOriginPhrase: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly note_text: {
                                readonly type: "string";
                                readonly default: any;
                            };
                            readonly description_html: {
                                readonly type: "string";
                                readonly default: "Description HTML";
                            };
                            readonly description_html_en: {
                                readonly type: "string";
                                readonly default: "Description HTML EN";
                            };
                            readonly seller: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly sold_items_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly active_item_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_data: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly is_banned: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly display_style_group_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_percents: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly totalItems: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly totalItemsPrice: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly perPage: {
                    readonly type: "integer";
                    readonly default: 40;
                };
                readonly page: {
                    readonly type: "integer";
                    readonly default: 1;
                };
                readonly cacheTTL: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly lastModified: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly searchUrl: {
                    readonly type: "string";
                    readonly default: "/";
                };
                readonly stickyItems: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryBattleNet: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly eg: {
                    readonly title: "Extended Guarantee";
                    readonly type: "integer";
                    readonly "x-enumDescriptions": {
                        readonly "0": "24 hours";
                        readonly "1": "3 days";
                    };
                    readonly enum: readonly [0, 1];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Guarantee type.";
                };
                readonly "game[]": {
                    readonly title: "Game";
                    readonly type: "array";
                    readonly description: "List of games.";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly edit_btag: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Edit Btag";
                    readonly description: "Can edit BattleTag.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly changeable_fn: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Changeable Fn";
                    readonly description: "Can edit full name.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly real_id: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Real Id";
                    readonly description: "Real id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly parent_control: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Parent Control";
                    readonly description: "Has disabled parent control.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly no_bans: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has no bans.";
                    readonly title: "No Bans";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly balance_min: {
                    readonly title: "Balance Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly balance_max: {
                    readonly title: "Balance Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly battlenet_item_id: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly battlenet_balance: {
                                readonly title: "Battlenet";
                                readonly type: "string";
                            };
                            readonly battlenet_country: {
                                readonly title: "Battlenet";
                                readonly type: "string";
                            };
                            readonly battlenet_last_activity: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly battlenet_mobile: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly battlenet_bans: {
                                readonly title: "Battlenet";
                                readonly type: "string";
                            };
                            readonly battlenet_can_change_tag: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly battlenet_real_id_enabled: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly battlenet_change_full_name: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly battlenet_parent_control: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly battlenet_converted_balance: {
                                readonly title: "Battlenet";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                                readonly type: "object";
                                readonly properties: {
                                    readonly duration: {
                                        readonly title: "Duration";
                                        readonly type: "integer";
                                    };
                                    readonly class: {
                                        readonly title: "Class";
                                        readonly type: "string";
                                    };
                                    readonly durationPhrase: {
                                        readonly title: "Duration Phrase";
                                        readonly type: "string";
                                    };
                                    readonly endDate: {
                                        readonly title: "End Date";
                                    };
                                    readonly active: {
                                        readonly title: "Active";
                                    };
                                    readonly cancelled: {
                                        readonly title: "Cancelled";
                                    };
                                    readonly remainingTime: {
                                        readonly title: "Remaining Time";
                                    };
                                };
                                readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime"];
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly battlenetBans: {
                                readonly title: "Battlenet Bans";
                                readonly type: "string";
                            };
                            readonly battlenetGames: {
                                readonly title: "Battlenet Games";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "17459": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly internal_game_id: {
                                                readonly title: "Internal";
                                                readonly type: "integer";
                                            };
                                            readonly app_id: {
                                                readonly title: "App";
                                                readonly type: "string";
                                            };
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly abbr: {
                                                readonly title: "Abbr";
                                                readonly type: "string";
                                            };
                                            readonly category_id: {
                                                readonly title: "Category";
                                                readonly type: "integer";
                                            };
                                            readonly img: {
                                                readonly title: "Img";
                                                readonly type: "string";
                                            };
                                            readonly url: {
                                                readonly title: "Url";
                                                readonly type: "string";
                                            };
                                            readonly ru: {
                                                readonly title: "Ru";
                                            };
                                        };
                                        readonly required: readonly ["internal_game_id", "app_id", "title", "abbr", "category_id", "img", "url", "ru"];
                                    };
                                };
                                readonly required: readonly ["17459"];
                            };
                            readonly hasOverwatch: {
                                readonly title: "Has Overwatch";
                                readonly type: "boolean";
                            };
                            readonly battlenetTransactions: {
                                readonly title: "Battlenet Transactions";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly date: {
                                            readonly title: "Date";
                                            readonly type: "integer";
                                        };
                                        readonly productTitle: {
                                            readonly title: "Product Title";
                                            readonly type: "string";
                                        };
                                        readonly formattedTotal: {
                                            readonly title: "Formatted Total";
                                            readonly type: "string";
                                        };
                                        readonly total: {
                                            readonly title: "Total";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["date", "productTitle", "formattedTotal", "total"];
                                };
                            };
                            readonly displayConvertedBalance: {
                                readonly title: "Display Converted Balance";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "battlenet_item_id", "battlenet_balance", "battlenet_country", "battlenet_last_activity", "battlenet_mobile", "battlenet_bans", "battlenet_can_change_tag", "battlenet_real_id_enabled", "battlenet_change_full_name", "battlenet_parent_control", "battlenet_converted_balance", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "battlenetBans", "battlenetGames", "hasOverwatch", "battlenetTransactions", "displayConvertedBalance", "canViewAccountLink", "accountLinks", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryChatGpt: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "subscription[]": {
                    readonly description: "List of allowed subscriptions.";
                    readonly title: "Subscription";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["chatgptplusplan", "chatgptpro", "chatgptenterpriseplan", "chatgptteamplan", "chatgpteduplan", "chatgptquorumplan"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_length: {
                    readonly title: "Subscription Length";
                    readonly type: "integer";
                    readonly description: "Length of subscription.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_period: {
                    readonly title: "Subscription Period";
                    readonly description: "In what notation is time measured.";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly autorenewal: {
                    readonly description: "Is auto renewal enabled.";
                    readonly title: "Autorenewal";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly transactions: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has transactions.";
                    readonly title: "Transactions";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "openai_tier[]": {
                    readonly description: "List of allowed tiers.";
                    readonly title: "OpenAI Tier";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["tier1", "tier2", "tier3", "tier4", "tier5"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly openai_balance_min: {
                    readonly description: "Minimum OpenAI credit balance.";
                    readonly title: "Openai Balance Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly openai_balance_max: {
                    readonly description: "Maximum OpenAI credit balance.";
                    readonly title: "Openai Balance Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly chatgpt_item_id: {
                                readonly title: "Chatgpt";
                                readonly type: "integer";
                            };
                            readonly chatgpt_country: {
                                readonly title: "Chatgpt";
                                readonly type: "string";
                            };
                            readonly chatgpt_register_date: {
                                readonly title: "Chatgpt";
                                readonly type: "integer";
                            };
                            readonly chatgpt_phone: {
                                readonly title: "Chatgpt";
                                readonly type: "integer";
                            };
                            readonly chatgpt_subscription: {
                                readonly title: "Chatgpt";
                                readonly type: "string";
                            };
                            readonly chatgpt_subscription_ends: {
                                readonly title: "Chatgpt";
                                readonly type: "integer";
                            };
                            readonly chatgpt_subscription_auto_renew: {
                                readonly title: "Chatgpt";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "number";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewItemViews: {
                                readonly title: "Can View Item Views";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly copyFormatData: {
                                readonly title: "Copy Format Data";
                                readonly type: "object";
                                readonly properties: {
                                    readonly title_link: {
                                        readonly title: "Title";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["title_link"];
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly isPersonalAccount: {
                                readonly title: "Is Personal Account";
                                readonly type: "boolean";
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly priceWithSellerFeeLabel: {
                                readonly title: "Price With Seller Fee Label";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly gptSubType: {
                                readonly title: "Gpt Sub Type";
                                readonly type: "string";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly canChangeEmailPassword: {
                                readonly title: "Can Change Email Password";
                                readonly type: "boolean";
                            };
                            readonly uniqueKeyExists: {
                                readonly title: "Unique Key Exists";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "chatgpt_item_id", "chatgpt_country", "chatgpt_register_date", "chatgpt_phone", "chatgpt_subscription", "chatgpt_subscription_ends", "chatgpt_subscription_auto_renew", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "isPersonalAccount", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "gptSubType", "canViewAccountLink", "emailLoginUrl", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryDiscord: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nitro: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has nitro.";
                    readonly title: "Nitro";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "nitro_type[]": {
                    readonly title: "Nitro Type";
                    readonly type: "array";
                    readonly description: "Nitro type.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["basic", "classic", "full", "none", "trial"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nitro_length: {
                    readonly type: "integer";
                    readonly description: "Length of nitro.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nitro_period: {
                    readonly type: "string";
                    readonly description: "In what notation is time measured.";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly boosts_min: {
                    readonly type: "integer";
                    readonly description: "Minimum number of boosts.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly boosts_max: {
                    readonly type: "integer";
                    readonly description: "Maximum number of boosts.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly billing: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Billing";
                    readonly description: "Has billing.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gifts: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Gifts";
                    readonly description: "Has gifts.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly transactions: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has transactions.";
                    readonly title: "Transactions";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "badge[]": {
                    readonly title: "Condition";
                    readonly type: "array";
                    readonly description: "List of badges.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["bug_hunter", "bug_hunter_level_2", "certificated_moderator", "early_supporter", "hypesquad", "partner", "staff", "verified_developer"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "condition[]": {
                    readonly title: "Condition";
                    readonly type: "array";
                    readonly description: "List of account conditions.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["cleaned", "empty", "nospam", "spam"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly chat_min: {
                    readonly title: "Chat Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of chats.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly chat_max: {
                    readonly title: "Chat Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of chats.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_admin_members: {
                    readonly title: "Min Admin Members";
                    readonly type: "integer";
                    readonly description: "Minimum number of subscribers in server, where account is administrator/owner.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_admin_members: {
                    readonly title: "Max Admin Members";
                    readonly type: "integer";
                    readonly description: "Maximum number of subscribers in server, where account is administrator/owner.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_admin: {
                    readonly title: "Min Admin";
                    readonly type: "integer";
                    readonly description: "Minimum number of servers, where account is administrator/owner.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_admin: {
                    readonly title: "Max Admin";
                    readonly type: "integer";
                    readonly description: "Maximum number of servers, where account is administrator/owner.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "language[]": {
                    readonly title: "Locale";
                    readonly type: "array";
                    readonly description: "List of languages.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_language[]": {
                    readonly title: "Not Locale";
                    readonly type: "array";
                    readonly description: "List of languages that won't be included.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clans: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has clans.";
                    readonly title: "Clans";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_admin_clans: {
                    readonly description: "Minimum number of clans, where account is administrator.";
                    readonly title: "Min Admin Clans";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_admin_clans: {
                    readonly description: "Maximum number of clans, where account is administrator.";
                    readonly title: "Max Admin Clans";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_owner_clans: {
                    readonly description: "Minimum number of clans, where account is owner.";
                    readonly title: "Min Owner Clans";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_owner_clans: {
                    readonly description: "Maximum number of clans, where account is owner.";
                    readonly title: "Max Owner Clans";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly description: "List of allowed countries.";
                    readonly title: "Country";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly description: "List of disallowed countries.";
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_servers: {
                    readonly description: "Minimum count of servers.";
                    readonly title: "Min Servers";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_servers: {
                    readonly description: "Maximum count of servers.";
                    readonly title: "Max Servers";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "2fa": {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has two-factor authentication.";
                    readonly title: "2fa";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_full_credits: {
                    readonly description: "Minimum number of Nitro full credits.";
                    readonly title: "Min Full Credits";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_full_credits: {
                    readonly description: "Maximum number of Nitro full credits.";
                    readonly title: "Max Full Credits";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_basic_credits: {
                    readonly description: "Minimum number of Nitro basic credits.";
                    readonly title: "Min Basic Credits";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_basic_credits: {
                    readonly description: "Maximum number of Nitro basic credits.";
                    readonly title: "Max Basic Credits";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly discord_item_id: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_chat_count: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_verified: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_condition: {
                                readonly title: "Discord";
                                readonly type: "string";
                            };
                            readonly discord_gifts: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_billing: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_register_date: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_locale: {
                                readonly title: "Discord";
                                readonly type: "string";
                            };
                            readonly discord_nitro_end_date: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_available_boosts: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_nitro_type: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_admin_members_count: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_admin_servers_count: {
                                readonly title: "Discord";
                                readonly type: "integer";
                            };
                            readonly discord_admin_servers: {
                                readonly title: "Discord";
                                readonly type: "string";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly discordAccountConditionLabel: {
                                readonly title: "Discord Account Condition Label";
                                readonly type: "string";
                            };
                            readonly discordLocaleTitle: {
                                readonly title: "Discord Locale Title";
                                readonly type: "string";
                            };
                            readonly discordNitroType: {
                                readonly title: "Discord Nitro Type";
                                readonly type: "string";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "discord_item_id", "discord_chat_count", "discord_verified", "discord_condition", "discord_gifts", "discord_billing", "discord_register_date", "discord_locale", "discord_nitro_end_date", "discord_available_boosts", "discord_nitro_type", "discord_admin_members_count", "discord_admin_servers_count", "discord_admin_servers", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "discordAccountConditionLabel", "discordLocaleTitle", "discordNitroType", "canViewAccountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryEa: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "game[]": {
                    readonly title: "Game";
                    readonly type: "array";
                    readonly description: "List of games.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmin: {
                    readonly title: "Gmin";
                    readonly type: "integer";
                    readonly description: "Minimum count of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmax: {
                    readonly title: "Gmax";
                    readonly type: "integer";
                    readonly description: "Maximum count of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly al_rank_min: {
                    readonly title: "Al Rank Min";
                    readonly type: "integer";
                    readonly description: "Minimum rank points in Apex Legends.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly al_rank_max: {
                    readonly title: "Al Rank Max";
                    readonly type: "integer";
                    readonly description: "Maximum rank points in Apex Legends.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly al_level_min: {
                    readonly title: "Al Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level in Apex Legends.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly al_level_max: {
                    readonly title: "Al Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level in Apex Legends.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly has_ban: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has a ban in any game.";
                };
                readonly xbox_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Xbox Connected";
                    readonly description: "Xbox connected to account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly steam_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Steam Connected";
                    readonly description: "Steam connected to account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly psn_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "PSN Connected";
                    readonly description: "PSN connected to account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription: {
                    readonly title: "Subscription";
                    readonly type: "string";
                    readonly description: "Name of subscription.";
                    readonly enum: readonly ["EA Play", "EA Play Pro"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_length: {
                    readonly title: "Subscription Length";
                    readonly type: "integer";
                    readonly description: "Length of subscription.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_period: {
                    readonly title: "Subscription Period";
                    readonly description: "In what notation is time measured.";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hours_played: {
                    readonly title: "Hours Played";
                    readonly type: "object";
                    readonly description: "List of minimum hours played by game.";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - game name\nValue - minimum hours played";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hours_played_max: {
                    readonly title: "Hours Played Max";
                    readonly type: "object";
                    readonly description: "List of maximum hours played by game.";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - game name\nValue - maximum hours played";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly transactions: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has transactions.";
                    readonly title: "Transactions";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly ea_item_id: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_id: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_country: {
                                readonly title: "Ea";
                                readonly type: "string";
                            };
                            readonly ea_games: {
                                readonly title: "Ea";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "apex-legends": {
                                        readonly title: "Apex";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly game_id: {
                                                readonly title: "Game";
                                                readonly type: "string";
                                            };
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly last_activity: {
                                                readonly title: "Last";
                                                readonly type: "integer";
                                            };
                                            readonly total_played: {
                                                readonly title: "Total";
                                                readonly type: "integer";
                                            };
                                            readonly img: {
                                                readonly title: "Img";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["game_id", "title", "last_activity", "total_played", "img"];
                                    };
                                };
                                readonly required: readonly ["apex-legends"];
                            };
                            readonly ea_game_count: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_last_activity: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_al_level: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_al_rank_score: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_subscription: {
                                readonly title: "Ea";
                                readonly type: "string";
                            };
                            readonly ea_subscription_end_date: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_username: {
                                readonly title: "Ea";
                                readonly type: "string";
                            };
                            readonly ea_xbox_connected: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_steam_connected: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_psn_connected: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly ea_bans: {
                                readonly title: "Ea";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly ea_has_ban: {
                                readonly title: "Ea";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "ea_item_id", "ea_id", "ea_country", "ea_games", "ea_game_count", "ea_last_activity", "ea_al_level", "ea_al_rank_score", "ea_subscription", "ea_subscription_end_date", "ea_username", "ea_xbox_connected", "ea_steam_connected", "ea_psn_connected", "ea_bans", "ea_has_ban", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryEpicGames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["market", "autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly eg: {
                    readonly title: "Extended Guarantee";
                    readonly type: "integer";
                    readonly description: "Guarantee type.";
                    readonly "x-enumDescriptions": {
                        readonly "0": "24 hours";
                        readonly "1": "3 days";
                        readonly "2": "Guarantee at the time of purchase";
                        readonly "-1": "12 hours";
                    };
                    readonly enum: readonly [-1, 0, 1, 2];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "game[]": {
                    readonly title: "Game";
                    readonly type: "array";
                    readonly description: "List of games.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly change_email: {
                    readonly title: "Change Email";
                    readonly description: "Can change email.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rl_purchases: {
                    readonly title: "RL Purchases";
                    readonly type: "boolean";
                    readonly description: "Has Rocket League purchases.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly balance_min: {
                    readonly title: "Balance Min";
                    readonly type: "number";
                    readonly description: "Minimum epic wallet balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly balance_max: {
                    readonly title: "Balance Max";
                    readonly type: "number";
                    readonly description: "Maximum epic wallet balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rewards_balance_min: {
                    readonly type: "number";
                    readonly description: "Minimum rewards balance.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rewards_balance_max: {
                    readonly type: "number";
                    readonly description: "Maximum rewards balance.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmin: {
                    readonly title: "Gmin";
                    readonly type: "integer";
                    readonly description: "Minimum number of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmax: {
                    readonly title: "Gmax";
                    readonly type: "integer";
                    readonly description: "Maximum number of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hours_played: {
                    readonly title: "Hours Played";
                    readonly type: "object";
                    readonly description: "List of minimum hours played by game.";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - game id\nValue - minimum hours played";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hours_played_max: {
                    readonly title: "Hours Played Max";
                    readonly type: "object";
                    readonly description: "List of maximum hours played by game.";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - game id\nValue - maximum hours played";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly eg_item_id: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_country: {
                                readonly title: "Eg";
                                readonly type: "string";
                            };
                            readonly eg_code_redemption_history: {
                                readonly title: "Eg";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly eg_coupons: {
                                readonly title: "Eg";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly eg_games: {
                                readonly title: "Eg";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "0": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly internal_game_id: {
                                                readonly title: "Internal";
                                                readonly type: "integer";
                                            };
                                            readonly app_id: {
                                                readonly title: "App";
                                                readonly type: "string";
                                            };
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly abbr: {
                                                readonly title: "Abbr";
                                                readonly type: "string";
                                            };
                                            readonly category_id: {
                                                readonly title: "Category";
                                                readonly type: "integer";
                                            };
                                            readonly img: {
                                                readonly title: "Img";
                                                readonly type: "string";
                                            };
                                            readonly url: {
                                                readonly title: "Url";
                                                readonly type: "string";
                                            };
                                            readonly ru: {
                                                readonly title: "Ru";
                                            };
                                            readonly hits_count: {
                                                readonly title: "Hits";
                                                readonly type: "integer";
                                            };
                                            readonly link: {
                                                readonly title: "Link";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["internal_game_id", "app_id", "title", "abbr", "category_id", "img", "url", "ru", "hits_count", "link"];
                                    };
                                };
                                readonly required: readonly ["0"];
                            };
                            readonly eg_change_email: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_can_update_display_name: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_last_activity: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_payment_methods: {
                                readonly title: "Eg";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly eg_rl_purchases: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_username: {
                                readonly title: "Eg";
                                readonly type: "string";
                            };
                            readonly eg_rewards_balance: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_rewards_expiration_date: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_next_change_email_date: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_game_count: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly eg_balance: {
                                readonly title: "Eg";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly egBalance: {
                                readonly title: "Eg Balance";
                                readonly type: "string";
                            };
                            readonly egGameCount: {
                                readonly title: "Eg Game Count";
                                readonly type: "integer";
                            };
                            readonly egTransactions: {
                                readonly title: "Eg Transactions";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly date: {
                                            readonly title: "Date";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly presentmentTotal: {
                                            readonly title: "Presentment Total";
                                            readonly type: "string";
                                        };
                                        readonly orderType: {
                                            readonly title: "Order Type";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["date", "title", "presentmentTotal", "orderType"];
                                };
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "eg_item_id", "eg_country", "eg_code_redemption_history", "eg_coupons", "eg_games", "eg_change_email", "eg_can_update_display_name", "eg_last_activity", "eg_payment_methods", "eg_rl_purchases", "eg_username", "eg_rewards_balance", "eg_rewards_expiration_date", "eg_next_change_email_date", "eg_game_count", "eg_balance", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "egBalance", "egGameCount", "egTransactions", "canViewAccountLink", "accountLinks", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryEscapeFromTarkov: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly region: {
                    readonly title: "Region";
                    readonly type: "string";
                    readonly description: "Region.";
                    readonly enum: readonly ["af", "as", "cis", "eu", "me", "oc", "us"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "version[]": {
                    readonly title: "Version";
                    readonly type: "array";
                    readonly description: "List of versions.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["edge_of_darkness", "left_behind", "prepare_for_escape", "standard", "unheard_edition"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lmin: {
                    readonly title: "Lmin";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lmax: {
                    readonly title: "Lmax";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pve: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Access to pve.";
                    readonly title: "Pve";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly side: {
                    readonly description: "Side in current wipe.";
                    readonly title: "Side";
                    readonly type: "string";
                    readonly enum: readonly ["Bear", "Savage"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly tarkov_item_id: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_game_version: {
                                readonly title: "Tarkov";
                                readonly type: "string";
                            };
                            readonly tarkov_register_date: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_level: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_exp: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_last_activity: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_side: {
                                readonly title: "Tarkov";
                                readonly type: "string";
                            };
                            readonly tarkov_rubles: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_secured_container: {
                                readonly title: "Tarkov";
                                readonly type: "string";
                            };
                            readonly tarkov_euros: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_dollars: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_kd: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_deaths: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_kills: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_sessions: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_region: {
                                readonly title: "Tarkov";
                                readonly type: "string";
                            };
                            readonly tarkov_total_in_game: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_mail_forwarding: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly tarkov_username: {
                                readonly title: "Tarkov";
                                readonly type: "string";
                            };
                            readonly tarkov_purchase_date: {
                                readonly title: "Tarkov";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly tarkovRegionPhrase: {
                                readonly title: "Tarkov Region Phrase";
                                readonly type: "string";
                            };
                            readonly tarkovGameVersionPhrase: {
                                readonly title: "Tarkov Game Version Phrase";
                                readonly type: "string";
                            };
                            readonly tarkovSecuredContainer: {
                                readonly title: "Tarkov Secured Container";
                                readonly type: "string";
                            };
                            readonly tarkovKd: {
                                readonly title: "Tarkov Kd";
                                readonly type: "integer";
                            };
                            readonly accountDomain: {
                                readonly title: "Account Domain";
                                readonly type: "string";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "tarkov_item_id", "tarkov_game_version", "tarkov_register_date", "tarkov_level", "tarkov_exp", "tarkov_last_activity", "tarkov_side", "tarkov_rubles", "tarkov_secured_container", "tarkov_euros", "tarkov_dollars", "tarkov_kd", "tarkov_deaths", "tarkov_kills", "tarkov_sessions", "tarkov_region", "tarkov_total_in_game", "tarkov_mail_forwarding", "tarkov_username", "tarkov_purchase_date", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "tarkovRegionPhrase", "tarkovGameVersionPhrase", "tarkovSecuredContainer", "tarkovKd", "accountDomain", "canViewAccountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryFortnite: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["market", "autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly temp_email: {
                    readonly title: "Temp Email";
                    readonly description: "Access to market temp mail.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly eg: {
                    readonly title: "Extended Guarantee";
                    readonly type: "integer";
                    readonly description: "Guarantee type.";
                    readonly "x-enumDescriptions": {
                        readonly "0": "24 hours";
                        readonly "1": "3 days";
                        readonly "2": "Guarantee at the time of purchase";
                        readonly "-1": "12 hours";
                    };
                    readonly enum: readonly [-1, 0, 1, 2];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly smin: {
                    readonly title: "Smin";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly smax: {
                    readonly title: "Smax";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly vbmin: {
                    readonly title: "Vbmin";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of V-Bucks.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly vbmax: {
                    readonly title: "Vbmax";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of V-Bucks.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "skin[]": {
                    readonly title: "Skin";
                    readonly type: "array";
                    readonly description: "Skins.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["001_athena_commando_f_default", "001_mole_m_defaulta", "002_athena_commando_f_default", "003_athena_commando_f_default", "004_athena_commando_f_default", "005_athena_commando_m_default", "006_athena_commando_m_default", "007_athena_commando_m_default", "008_athena_commando_m_default", "009_athena_commando_m", "010_athena_commando_m", "011_athena_commando_m", "012_athena_commando_m", "013_athena_commando_f", "014_athena_commando_f", "015_athena_commando_f", "016_athena_commando_f", "017_athena_commando_m", "017_athena_commando_m_og", "018_athena_commando_m", "019_athena_commando_m", "020_athena_commando_m", "021_athena_commando_f", "022_athena_commando_f", "023_athena_commando_f", "024_athena_commando_f", "025_athena_commando_m", "026_athena_commando_m", "027_athena_commando_f", "028_athena_commando_f", "028_athena_commando_f_og", "029_athena_commando_f_halloween", "029_athena_commando_f_halloween_og", "030_athena_commando_m_halloween", "030_athena_commando_m_halloween_og", "031_athena_commando_m_retro", "032_athena_commando_m_medieval", "033_athena_commando_f_medieval", "034_athena_commando_f_medieval", "035_athena_commando_m_medieval", "036_athena_commando_m_wintercamo", "037_athena_commando_f_wintercamo", "038_athena_commando_m_disco", "039_athena_commando_f_disco", "040_athena_commando_m_district", "041_athena_commando_f_district", "042_athena_commando_m_cyberpunk", "043_athena_commando_f_stealth", "044_athena_commando_f_scipop", "045_athena_commando_m_holidaysweater", "046_athena_commando_f_holidaysweater", "047_athena_commando_f_holidayreindeer", "048_athena_commando_f_holidaygingerbread", "049_athena_commando_m_holidaygingerbread", "050_athena_commando_m_holidaynutcracker", "051_athena_commando_m_holidayelf", "052_athena_commando_f_psblue", "053_athena_commando_m_skidude", "054_athena_commando_m_skidude_usa", "055_athena_commando_m_skidude_can", "056_athena_commando_m_skidude_gbr", "057_athena_commando_m_skidude_fra", "058_athena_commando_m_skidude_ger", "059_athena_commando_m_skidude_chn", "060_athena_commando_m_skidude_kor", "061_athena_commando_f_skigirl", "062_athena_commando_f_skigirl_usa", "063_athena_commando_f_skigirl_can", "064_athena_commando_f_skigirl_gbr", "065_athena_commando_f_skigirl_fra", "066_athena_commando_f_skigirl_ger", "067_athena_commando_f_skigirl_chn", "068_athena_commando_f_skigirl_kor", "069_athena_commando_f_pinkbear", "070_athena_commando_m_cupid", "071_athena_commando_m_wukong", "072_athena_commando_m_scout", "073_athena_commando_f_scuba", "074_athena_commando_f_stripe", "075_athena_commando_f_stripe", "076_athena_commando_f_sup", "077_athena_commando_m_sup", "078_athena_commando_m_camo", "079_athena_commando_f_camo", "080_athena_commando_m_space", "081_athena_commando_f_space", "082_athena_commando_m_scavenger", "083_athena_commando_f_tactical", "084_athena_commando_m_assassin", "085_athena_commando_m_twitch", "086_athena_commando_m_redsilk", "087_athena_commando_f_redsilk", "088_athena_commando_m_spaceblack", "089_athena_commando_m_retrogrey", "090_athena_commando_m_tactical", "091_athena_commando_m_redshirt", "092_athena_commando_f_redshirt", "093_athena_commando_m_dinosaur", "094_athena_commando_m_rider", "095_athena_commando_m_founder", "096_athena_commando_f_founder", "097_athena_commando_f_rockerpunk", "098_athena_commando_f_stpatty", "099_athena_commando_f_scathach", "100_athena_commando_m_cuchulainn", "101_athena_commando_m_stealth", "102_athena_commando_m_raven", "103_athena_commando_m_bunny", "104_athena_commando_f_bunny", "105_athena_commando_f_spaceblack", "106_athena_commando_f_taxi", "107_athena_commando_f_pajamaparty", "108_athena_commando_m_fishhead", "109_athena_commando_m_pizza", "110_athena_commando_f_circuitbreaker", "111_athena_commando_f_robo", "112_athena_commando_m_brite", "113_athena_commando_m_blueace", "114_athena_commando_f_tacticalwoodland", "115_athena_commando_m_carbideblue", "116_athena_commando_m_carbideblack", "117_athena_commando_m_tacticaljungle", "118_athena_commando_f_valor", "119_athena_commando_f_candy", "120_athena_commando_f_graffiti", "121_athena_commando_m_graffiti", "122_athena_commando_m_metal", "123_athena_commando_f_metal", "124_athena_commando_f_auroraglow", "125_athena_commando_m_tacticalwoodland", "126_athena_commando_m_auroraglow", "127_athena_commando_m_hazmat", "128_athena_commando_f_hazmat", "129_athena_commando_m_deco", "130_athena_commando_m_merman", "131_athena_commando_m_warpaint", "132_athena_commando_m_venus", "133_athena_commando_f_deco", "134_athena_commando_m_jailbird", "135_athena_commando_f_jailbird", "136_athena_commando_m_streetbasketball", "137_athena_commando_f_streetbasketball", "138_athena_commando_m_psburnout", "139_athena_commando_m_fighterpilot", "140_athena_commando_m_visitor", "141_athena_commando_m_darkeagle", "142_athena_commando_m_wwiipilot", "143_athena_commando_f_darkninja", "144_athena_commando_m_soccerdudea", "145_athena_commando_m_soccerdudeb", "146_athena_commando_m_soccerdudec", "147_athena_commando_m_soccerduded", "148_athena_commando_f_soccergirla", "149_athena_commando_f_soccergirlb", "150_athena_commando_f_soccergirlc", "151_athena_commando_f_soccergirld", "152_athena_commando_f_carbideorange", "153_athena_commando_f_carbideblack", "154_athena_commando_m_gumshoe", "155_athena_commando_f_gumshoe", "156_athena_commando_f_fuzzybearind", "157_athena_commando_m_starsandstripes", "158_athena_commando_f_starsandstripes", "159_athena_commando_m_gumshoedark", "160_athena_commando_m_speedyred", "161_athena_commando_m_drift", "162_athena_commando_f_streetracer", "163_athena_commando_f_viking", "164_athena_commando_m_viking", "165_athena_commando_m_darkviking", "166_athena_commando_f_lifeguard", "167_athena_commando_m_tacticalbadass", "168_athena_commando_m_shark", "169_athena_commando_m_luchador", "170_athena_commando_f_luchador", "171_athena_commando_m_sharpdresser", "172_athena_commando_f_sharpdresser", "173_athena_commando_f_starfishuniform", "174_athena_commando_f_carbidewhite", "175_athena_commando_m_celestial", "176_athena_commando_m_lifeguard", "177_athena_commando_m_streetracercobra", "178_athena_commando_f_streetracercobra", "179_athena_commando_f_scuba", "180_athena_commando_m_scuba", "182_athena_commando_m_modernmilitary", "183_athena_commando_m_modernmilitaryred", "184_athena_commando_m_durrburgerworker", "185_athena_commando_m_durrburgerhero", "186_athena_commando_m_exercise", "187_athena_commando_f_fuzzybearpanda", "188_athena_commando_f_streetracerwhite", "189_athena_commando_f_exercise", "190_athena_commando_m_streetracerwhite", "191_athena_commando_m_sushichef", "192_athena_commando_m_hippie", "193_athena_commando_f_hippie", "194_athena_commando_f_ravenquill", "195_athena_commando_f_bling", "196_athena_commando_m_biker", "197_athena_commando_f_biker", "198_athena_commando_m_bluesamurai", "199_athena_commando_f_bluesamurai", "200_athena_commando_m_darkpaintballer", "201_athena_commando_m_desertops", "202_athena_commando_f_desertops", "203_athena_commando_m_cloakedstar", "204_athena_commando_m_garageband", "205_athena_commando_f_garageband", "206_athena_commando_m_bling", "207_athena_commando_m_footballdudea", "208_athena_commando_m_footballdudeb", "209_athena_commando_m_footballdudec", "210_athena_commando_f_footballgirla", "211_athena_commando_f_footballgirlb", "212_athena_commando_f_footballgirlc", "214_athena_commando_f_footballreferee", "215_athena_commando_m_footballreferee", "216_athena_commando_f_medic", "217_athena_commando_m_medic", "218_athena_commando_m_greenberet", "219_athena_commando_m_hacivat", "220_athena_commando_f_clown", "221_athena_commando_m_clown", "222_athena_commando_f_darkviking", "223_athena_commando_m_dieselpunk", "224_athena_commando_f_dieselpunk", "225_athena_commando_m_octoberfest", "226_athena_commando_f_octoberfest", "227_athena_commando_f_vampire", "228_athena_commando_m_vampire", "229_athena_commando_f_darkbomber", "230_athena_commando_m_werewolf", "231_athena_commando_f_redriding", "232_athena_commando_f_halloweentomato", "233_athena_commando_m_fortnitedj", "234_athena_commando_m_llamarider", "235_athena_commando_m_scarecrow", "236_athena_commando_f_scarecrow", "237_athena_commando_f_cowgirl", "238_athena_commando_f_footballgirld", "239_athena_commando_m_footballduded", "240_athena_commando_f_plague", "241_athena_commando_m_plague", "242_athena_commando_f_bullseye", "243_athena_commando_m_pumpkinslice", "244_athena_commando_m_pumpkinsuit", "245_athena_commando_f_durrburgerpjs", "246_athena_commando_f_grave", "247_athena_commando_m_guanyu", "248_athena_commando_m_blackwidow", "249_athena_commando_f_blackwidow", "250_athena_commando_m_evilcowboy", "251_athena_commando_f_muertos", "252_athena_commando_m_muertos", "253_athena_commando_m_militaryfashion2", "254_athena_commando_m_zombie", "255_athena_commando_f_halloweenbunny", "256_athena_commando_m_pumpkin", "257_athena_commando_m_samuraiultra", "258_athena_commando_f_fuzzybearhalloween", "259_athena_commando_m_streetops", "260_athena_commando_f_streetops", "261_athena_commando_m_raptorarcticcamo", "262_athena_commando_m_madcommander", "263_athena_commando_f_madcommander", "264_athena_commando_m_animaljackets", "265_athena_commando_f_animaljackets", "266_athena_commando_f_llamarider", "267_athena_commando_m_robotred", "268_athena_commando_m_rockerpunk", "269_athena_commando_m_wizard", "270_athena_commando_f_witch", "271_athena_commando_f_sushichef", "272_athena_commando_m_hornedmask", "273_athena_commando_f_hornedmask", "274_athena_commando_m_feathers", "275_athena_commando_m_sniperhood", "276_athena_commando_f_sniperhood", "277_athena_commando_m_moth", "278_athena_commando_m_yeti", "279_athena_commando_m_tacticalsanta", "280_athena_commando_m_snowman", "281_athena_commando_f_snowboard", "286_athena_commando_f_neoncat", "287_athena_commando_m_arcticsniper", "288_athena_commando_m_iceking", "290_athena_commando_f_bluebadass", "291_athena_commando_m_dieselpunk02", "292_athena_commando_f_dieselpunk02", "293_athena_commando_m_ravenwinter", "294_athena_commando_f_redknightwinter", "295_athena_commando_m_cupidwinter", "296_athena_commando_m_math", "297_athena_commando_f_math", "298_athena_commando_f_icemaiden", "299_athena_commando_m_snowninja", "300_athena_commando_f_angel", "300_athena_commando_f_angel_db", "301_athena_commando_m_rhino", "302_athena_commando_f_nutcracker", "303_athena_commando_f_snowfairy", "304_athena_commando_m_gnome", "308_athena_commando_f_fortnitedj", "309_athena_commando_m_streetgoth", "310_athena_commando_f_streetgoth", "311_athena_commando_m_reindeer", "312_athena_commando_f_funkops", "313_athena_commando_m_kpopfashion", "314_athena_commando_m_krampus", "315_athena_commando_m_teriyakifish", "316_athena_commando_f_winterholiday", "317_athena_commando_m_winterghoul", "318_athena_commando_m_demon", "319_athena_commando_f_nautilus", "320_athena_commando_m_nautilus", "321_athena_commando_m_militaryfashion1", "322_athena_commando_m_techops", "323_athena_commando_m_barbarian", "324_athena_commando_f_barbarian", "325_athena_commando_m_wavyman", "326_athena_commando_f_wavyman", "327_athena_commando_m_bluemystery", "328_athena_commando_f_tennis", "329_athena_commando_f_snowninja", "330_athena_commando_f_icequeen", "331_athena_commando_m_taxi", "332_athena_commando_m_prisoner", "333_athena_commando_m_squishy", "334_athena_commando_m_scrapyard", "335_athena_commando_f_scrapyard", "336_athena_commando_m_dragonmask", "337_athena_commando_f_celestial", "338_athena_commando_m_dumplingman", "339_athena_commando_m_robottrouble", "340_athena_commando_f_robottrouble", "341_athena_commando_f_skullbrite", "342_athena_commando_m_streetracermetallic", "343_athena_commando_m_cupiddark", "344_athena_commando_m_icecream", "345_athena_commando_m_lovellama", "346_athena_commando_m_dragonninja", "347_athena_commando_m_pirateprogressive", "348_athena_commando_f_medusa", "349_athena_commando_m_banana", "349_mole_commando_m_banana", "350_athena_commando_m_masterkey", "351_athena_commando_f_fireelf", "352_athena_commando_f_shiny", "353_athena_commando_f_bandolier", "354_athena_commando_m_munitionsexpert", "355_athena_commando_m_farmer", "356_athena_commando_f_farmer", "357_athena_commando_m_orangecamo", "358_athena_commando_m_aztec", "359_athena_commando_f_aztec", "360_athena_commando_m_techopsblue", "361_athena_commando_m_bandageninja", "362_athena_commando_f_bandageninja", "363_athena_commando_m_sciops", "364_athena_commando_f_sciops", "365_athena_commando_m_luckyrider", "366_athena_commando_m_tropical", "367_athena_commando_f_tropical", "369_athena_commando_f_devilrock", "370_athena_commando_m_evilsuit", "371_athena_commando_m_speedymidnight", "372_athena_commando_f_pirate01", "373_athena_commando_m_pirate01", "376_athena_commando_m_darkshaman", "377_athena_commando_f_darkshaman", "378_athena_commando_m_furnaceface", "379_athena_commando_m_battlehoundfire", "380_athena_commando_f_darkviking_fire", "381_athena_commando_f_baseballkitbash", "382_athena_commando_m_baseballkitbash", "383_athena_commando_f_cacti", "384_athena_commando_m_streetassassin", "385_athena_commando_m_pilotskull", "386_athena_commando_m_streetopsstealth", "387_athena_commando_f_golf", "388_athena_commando_m_thebomb", "389_athena_commando_f_spacebunny", "390_athena_commando_m_evilbunny", "391_athena_commando_m_hoppityheist", "392_athena_commando_f_bountybunny", "393_athena_commando_m_shiny", "394_athena_commando_m_moonlightassassin", "395_athena_commando_f_shatterfly", "396_athena_commando_f_swashbuckler", "397_athena_commando_f_treasurehunterfashion", "398_athena_commando_m_treasurehunterfashion", "399_athena_commando_f_ashtonboardwalk", "400_athena_commando_m_ashtonsaltlake", "401_athena_commando_m_miner", "403_athena_commando_m_rooster", "404_athena_commando_f_bountyhunter", "405_athena_commando_f_masako", "406_athena_commando_m_stormtracker", "407_athena_commando_m_battlesuit", "408_athena_commando_f_strawberrypilot", "409_athena_commando_m_bunkerman", "410_athena_commando_m_cyberscavenger", "411_athena_commando_f_cyberscavenger", "412_athena_commando_f_raptor", "413_athena_commando_m_streetdemon", "414_athena_commando_f_militaryfashion", "415_athena_commando_f_assassinsuit", "416_athena_commando_m_assassinsuit", "418_athena_commando_f_geisha", "419_athena_commando_m_pug", "420_athena_commando_f_whitetiger", "421_athena_commando_m_maskedwarrior", "422_athena_commando_f_maskedwarrior", "423_athena_commando_f_painter", "424_athena_commando_m_vigilante", "425_athena_commando_f_cyberrunner", "426_athena_commando_f_demonhunter", "427_athena_commando_m_demonhunter", "428_athena_commando_m_urbanscavenger", "429_athena_commando_f_neonlines", "430_athena_commando_m_stormsoldier", "431_athena_commando_f_stormpilot", "432_athena_commando_m_balloonhead", "433_athena_commando_f_tacticaldesert", "434_athena_commando_f_stealthhonor", "435_athena_commando_m_munitionsexpertgreenplastic", "436_athena_commando_m_reconspecialist", "437_athena_commando_f_aztececlipse", "438_athena_commando_m_winterghouleclipse", "439_athena_commando_f_skullbriteeclipse", "440_athena_commando_f_bullseyegreenplastic", "441_athena_commando_f_cyberscavengerblue", "442_athena_commando_f_bannera", "443_athena_commando_f_bannerb", "444_athena_commando_f_bannerc", "445_athena_commando_f_bannerd", "446_athena_commando_m_bannera", "447_athena_commando_m_bannerb", "448_athena_commando_m_bannerc", "449_athena_commando_m_bannerd", "450_athena_commando_f_butterfly", "451_athena_commando_m_caterpillar", "452_athena_commando_f_cyberfu", "453_athena_commando_f_glowbro", "454_athena_commando_m_glowbro", "455_athena_commando_f_jellyfish", "456_athena_commando_f_sarong", "457_athena_commando_f_spacegirl", "458_athena_commando_m_techmage", "459_athena_commando_f_zodiac", "460_athena_commando_f_britebombersummer", "461_athena_commando_m_driftsummer", "462_athena_commando_m_heistsummer", "463_athena_commando_m_hairy", "464_athena_commando_m_flamingo", "465_athena_commando_m_puffyvest", "466_athena_commando_m_weirdobjectscreature", "467_athena_commando_m_weirdobjectspolice", "468_athena_commando_f_tenniswhite", "469_athena_commando_f_battlesuit", "470_athena_commando_m_anarchy", "471_athena_commando_f_bani", "472_athena_commando_f_cyberkarate", "473_athena_commando_m_cyberkarate", "474_athena_commando_m_lasagna", "475_athena_commando_m_multibot", "476_athena_commando_f_futurebiker", "477_athena_commando_f_spacesuit", "478_athena_commando_f_worldcup", "479_athena_commando_f_davinci", "480_athena_commando_f_bubblegum", "481_athena_commando_f_geode", "482_athena_commando_f_pizzapit", "483_athena_commando_f_graffitiremix", "484_athena_commando_m_knightremix", "485_athena_commando_f_sparkleremix", "486_athena_commando_f_streetracerdrift", "487_athena_commando_m_djremix", "488_athena_commando_m_rustremix", "489_athena_commando_m_voyagerremix", "490_athena_commando_m_bluebadass", "491_athena_commando_m_bonewasp", "492_athena_commando_m_bronto", "493_athena_commando_f_jurassicarchaeology", "494_athena_commando_m_mechpilotshark", "495_athena_commando_f_mechpilotshark", "496_athena_commando_m_survivalspecialist", "497_athena_commando_f_wildwest", "498_athena_commando_m_wildwest", "499_athena_commando_f_astronautevil", "501_athena_commando_m_frostmystery", "502_athena_commando_f_reverb", "503_athena_commando_f_tacticalwoodlandfuture", "504_athena_commando_m_lopex", "505_athena_commando_m_militiamascotburger", "506_athena_commando_m_militiamascottomato", "507_athena_commando_m_starwalker", "508_athena_commando_m_syko", "509_athena_commando_m_wisemaster", "510_athena_commando_f_angeleclipse", "511_athena_commando_m_cubepaintwildcard", "512_athena_commando_f_cubepaintredknight", "513_athena_commando_m_cubepaintjonesy", "514_athena_commando_f_toxickitty", "515_athena_commando_m_barbequelarry", "516_athena_commando_m_blackwidowrogue", "517_athena_commando_m_darkeaglefire", "518_athena_commando_m_wwii_pilotscifi", "519_athena_commando_m_raptorblackops", "520_athena_commando_m_paddedarmor", "521_athena_commando_m_tacticalbiker", "522_athena_commando_m_bullseye", "523_athena_commando_f_cupid", "524_athena_commando_f_futurebikerwhite", "525_athena_commando_f_lemonlime", "526_athena_commando_f_desertopsswamp", "527_athena_commando_f_streetfashionred", "528_athena_commando_m_blackmondayhouston_7dgbt", "529_athena_commando_m_blackmondaykansas_hwd90", "530_athena_commando_f_blackmonday_1bv6j", "531_athena_commando_m_sleepytime", "532_athena_commando_f_punchy", "533_athena_commando_m_streeturchin", "534_athena_commando_m_peelymech", "535_athena_commando_m_traveler", "536_athena_commando_f_durrburgerworker", "537_athena_commando_m_jumpstart", "538_athena_commando_m_taco", "539_athena_commando_f_streetgothcandy", "540_athena_commando_m_meteormanremix", "541_athena_commando_m_graffitigold", "542_athena_commando_f_carbidefrostmystery", "543_athena_commando_m_llamahero", "544_athena_commando_m_kurohomura", "545_athena_commando_f_sushininja", "546_athena_commando_f_tacticalred", "547_athena_commando_f_meteorwoman", "548_athena_commando_m_yellowcamoa", "549_athena_commando_m_yellowcamob", "550_athena_commando_m_yellowcamoc", "551_athena_commando_m_yellowcamod", "552_athena_commando_f_taxiupgrade", "553_athena_commando_m_brightgunnerremix", "554_athena_commando_f_militiamascotcuddle", "556_athena_commando_f_rebirthdefaulta", "557_athena_commando_f_rebirthdefaultb", "558_athena_commando_f_rebirthdefaultc", "559_athena_commando_f_rebirthdefaultd", "560_athena_commando_m_rebirthdefaulta", "561_athena_commando_m_rebirthdefaultb", "562_athena_commando_m_rebirthdefaultc", "563_athena_commando_m_rebirthdefaultd", "564_athena_commando_m_tacticalfisherman", "565_athena_commando_f_rockclimber", "566_athena_commando_m_crazyeight", "567_athena_commando_f_rebirthmedic", "568_athena_commando_m_rebirthsoldier", "570_athena_commando_m_slurpmonster", "571_athena_commando_f_sheath", "572_athena_commando_m_viper", "573_athena_commando_m_haunt", "574_athena_commando_f_cuberockerpunk", "575_athena_commando_f_bulletblue", "576_athena_commando_m_codsquadplaid", "577_athena_commando_f_codsquadplaid", "578_athena_commando_f_fisherman", "579_athena_commando_f_redridingremix", "580_athena_commando_m_cuddleteamdark", "581_athena_commando_m_darkdino", "582_athena_commando_f_darkdino", "583_athena_commando_f_noshhunter", "584_athena_commando_m_nosh", "585_athena_commando_f_flowerskeleton", "586_athena_commando_f_punkdevil", "587_athena_commando_m_devilrock", "588_athena_commando_m_goatrobe", "589_athena_commando_m_soccerzombiea", "590_athena_commando_m_soccerzombieb", "591_athena_commando_m_soccerzombiec", "592_athena_commando_m_soccerzombied", "593_athena_commando_f_soccerzombiea", "594_athena_commando_f_soccerzombieb", "595_athena_commando_f_soccerzombiec", "596_athena_commando_f_soccerzombied", "597_athena_commando_m_freak", "598_athena_commando_m_mastermind", "599_athena_commando_m_phantom", "600_athena_commando_m_skeletonhunter", "601_athena_commando_f_palespooky", "602_athena_commando_m_nanasplit", "603_athena_commando_m_spookyneon", "604_athena_commando_f_razor", "605_athena_commando_m_tourbus", "606_athena_commando_f_jetski", "607_athena_commando_m_jetski", "608_athena_commando_f_modernwitch", "609_athena_commando_m_submariner", "610_athena_commando_m_shiitakeshaolin", "611_athena_commando_m_weepingwoods", "611_m_weepingwoods_radish", "612_athena_commando_f_streetopspink", "613_athena_commando_m_columbus_7y4qe", "614_athena_commando_m_missinglink", "615_athena_commando_f_bane", "616_athena_commando_f_cavalrybandit", "617_athena_commando_f_forestqueen", "618_athena_commando_m_forestdweller", "619_athena_commando_f_techllama", "620_athena_commando_l_bigchuggus", "621_athena_commando_m_bonesnake", "622_athena_commando_m_bulletblue", "623_athena_commando_m_frogman", "624_athena_commando_m_teriyakiwarrior", "625_athena_commando_f_pinktrooper", "626_athena_commando_m_pinktrooper", "627_athena_commando_f_snufflesleader", "628_athena_commando_m_holidaytime", "629_athena_commando_m_snowglobe", "630_athena_commando_m_kane", "631_athena_commando_m_galileokayak_vxldb", "632_athena_commando_f_galileozeppelin_sjkpw", "633_athena_commando_m_galileoferry_pa3e1", "634_athena_commando_f_galileorocket_arveh", "635_athena_commando_m_galileosled_fhjvm", "636_athena_commando_m_galileogondola_78mfz", "637_athena_commando_m_galileooutrigger_7q0yu", "638_athena_commando_m_neonanimal", "639_athena_commando_f_neonanimal", "640_athena_commando_m_tacticalbear", "641_athena_commando_m_sweaterweather", "642_athena_commando_f_constellationstar", "643_athena_commando_m_ornamentsoldier", "644_athena_commando_m_cattus", "645_athena_commando_f_wolly", "646_athena_commando_f_elfattack", "647_athena_commando_f_wingedfury", "648_athena_commando_f_msalpine", "649_athena_commando_f_holidaypj", "650_athena_commando_f_holidaypj_b", "651_athena_commando_f_holidaypj_c", "652_athena_commando_f_holidaypj_d", "653_athena_commando_f_uglysweaterfrozen", "654_athena_commando_f_giftwrap", "655_athena_commando_f_barefoot", "656_athena_commando_m_teriyakifishfreezerburn", "657_athena_commando_f_techopsblue", "658_athena_commando_f_toymonkey", "659_athena_commando_m_mriceguy", "660_athena_commando_f_bandageninjablue", "662_athena_commando_m_flameskull", "663_athena_commando_f_frogman", "664_athena_commando_m_gummi", "665_athena_commando_f_neongraffiti", "666_athena_commando_m_arcticcamo", "667_athena_commando_m_arcticcamo_dark", "668_athena_commando_m_arcticcamo_gray", "669_athena_commando_m_arcticcamo_slate", "670_athena_commando_f_arcticcamo", "671_athena_commando_f_arcticcamo_dark", "672_athena_commando_f_arcticcamo_gray", "673_athena_commando_f_arcticcamo_slate", "674_athena_commando_f_hoodiebandit", "675_athena_commando_m_thegoldenskeleton", "676_athena_commando_m_codsquadhoodie", "677_athena_commando_m_sharkattack", "679_athena_commando_m_modernmilitaryeclipse", "680_athena_commando_m_streetrat", "681_athena_commando_m_martialartist", "682_athena_commando_m_virtualshadow", "683_athena_commando_f_tigerfashion", "684_athena_commando_f_dragonracer", "685_athena_commando_m_tundrayellow", "687_athena_commando_m_agentace", "688_athena_commando_f_agentrogue", "689_athena_commando_m_spytechhacker", "690_athena_commando_f_photographer", "691_athena_commando_f_tntina", "692_athena_commando_m_henchmantough", "693_athena_commando_m_buffcat", "694_athena_commando_m_catburglar", "695_athena_commando_f_desertopscamo", "696_athena_commando_f_darkheart", "697_athena_commando_f_graffitifuture", "698_athena_commando_m_cuteduo", "699_athena_commando_f_brokenheart", "700_athena_commando_m_candy", "701_athena_commando_m_bananaagent", "702_athena_commando_m_assassinx", "703_athena_commando_m_cyclone", "704_athena_commando_f_lollipoptrickster", "705_athena_commando_m_donut", "706_athena_commando_m_henchmanbad", "706_athena_commando_m_henchmanbad_34lvu", "707_athena_commando_m_henchmangood", "707_athena_commando_m_henchmangood_9obh6", "708_athena_commando_m_soldierslurp", "709_athena_commando_f_bandolierslurp", "710_athena_commando_m_fishheadslurp", "711_athena_commando_m_longshorts", "712_athena_commando_m_spy", "713_athena_commando_m_maskedwarriorspring", "714_athena_commando_m_anarchyacresfarmer", "715_athena_commando_f_twindark", "716_athena_commando_m_blueflames", "717_athena_commando_f_blueflames", "718_athena_commando_f_luckyhero", "719_athena_commando_f_blonde", "720_athena_commando_f_streetfashionemerald", "721_athena_commando_f_pineapplebandit", "722_athena_commando_m_teriyakifishassassin", "723_athena_commando_f_spytech", "724_athena_commando_m_spytech", "725_athena_commando_f_agentx", "726_athena_commando_m_targetpractice", "727_athena_commando_m_tailor", "728_athena_commando_m_minotaurluck", "729_athena_commando_m_neon", "730_athena_commando_m_stars", "731_athena_commando_f_neon", "732_athena_commando_f_stars", "733_athena_commando_m_bannerred", "734_athena_commando_f_bannerred", "735_athena_commando_m_informer", "736_athena_commando_f_donutdish", "737_athena_commando_f_donutplate", "738_athena_commando_m_donutcup", "739_athena_commando_m_cardboardcrew", "740_athena_commando_f_cardboardcrew", "741_athena_commando_f_halloweenbunnyspring", "742_athena_commando_m_chocobunny", "743_athena_commando_m_handyman", "744_athena_commando_f_duckhero", "745_athena_commando_m_ravenquill", "746_athena_commando_f_fuzzybear", "747_athena_commando_m_badegg", "748_athena_commando_f_hitman", "749_athena_commando_f_graffitiassassin", "750_athena_commando_m_hurricane", "751_athena_commando_f_neoncatspy", "752_athena_commando_m_comet", "752_athena_commando_m_comet_s23_winterfest", "753_athena_commando_f_hostile", "754_athena_commando_f_raveninja", "755_athena_commando_m_splinter", "756_athena_commando_m_jonesyagent", "757_athena_commando_f_wildcat", "758_athena_commando_m_techexplorer", "759_athena_commando_f_rapvillainess", "760_athena_commando_f_neontightsuit", "761_athena_commando_m_cyclonespace", "762_athena_commando_m_brightgunnerspy", "763_athena_commando_f_shinyjacket", "764_athena_commando_f_loofah", "765_athena_commando_f_spacewanderer", "767_athena_commando_f_blackknight", "768_athena_commando_f_hardcoresportz", "769_athena_commando_m_hardcoresportz", "770_athena_commando_f_mechanicalengineer", "771_athena_commando_f_oceanrider", "772_athena_commando_m_sandcastle", "773_athena_commando_m_beacon", "774_athena_commando_m_tacticalscuba", "775_athena_commando_f_streetracercobragold", "776_athena_commando_m_professorpup", "777_athena_commando_m_racerzero", "778_athena_commando_m_gator", "779_athena_commando_m_henchmangoodshorts", "780_athena_commando_m_henchmanbadshorts", "781_athena_commando_f_fuzzybearteddy", "782_athena_commando_m_brightgunnereclipse", "783_athena_commando_m_aquajacket", "784_athena_commando_f_renegaderaiderfire", "785_athena_commando_f_python", "786_athena_commando_f_cavalrybandit_ghost", "787_athena_commando_m_heist_ghost", "788_athena_commando_m_mastermind_ghost", "789_athena_commando_m_henchmangoodshorts_b", "790_athena_commando_m_henchmangoodshorts_c", "791_athena_commando_m_henchmangoodshorts_d", "792_athena_commando_m_henchmanbadshorts_b", "793_athena_commando_m_henchmanbadshorts_c", "794_athena_commando_m_henchmanbadshorts_d", "795_athena_commando_m_dummeez", "796_athena_commando_f_tank", "797_athena_commando_f_taco", "798_athena_commando_m_jonesyvagabond", "799_athena_commando_f_cupiddark", "800_athena_commando_m_robro", "801_athena_commando_f_golfsummer", "802_athena_commando_f_heartbreaker", "803_athena_commando_f_sharksuit", "804_athena_commando_m_sharksuit", "805_athena_commando_f_punkdevilsummer", "806_athena_commando_f_greenjacket", "807_athena_commando_m_candyapple_b1u7x", "808_athena_commando_f_constellationsun", "809_athena_commando_m_seaweed_ixrlq", "810_athena_commando_m_militaryfashionsummer", "811_athena_commando_f_candysummer", "812_athena_commando_f_redridingsummer", "813_athena_commando_m_teriyakiatlantis", "814_athena_commando_m_bananasummer", "815_athena_commando_f_durrburgerhero", "816_athena_commando_f_dirtydocks", "817_athena_commando_m_dirtydocks", "818_athena_commando_f_neontightsuit_a", "819_athena_commando_f_neontightsuit_b", "820_athena_commando_f_neontightsuit_c", "822_athena_commando_f_angler", "823_athena_commando_f_islander", "824_athena_commando_f_raiderpink", "825_athena_commando_f_sportsfashion", "826_athena_commando_m_floatillacaptain", "827_athena_commando_m_multibotstealth", "828_athena_commando_f_valet", "829_athena_commando_m_valet", "830_athena_commando_m_spacewanderer", "831_athena_commando_f_pizzapitmascot", "832_athena_commando_f_antillama", "833_athena_commando_f_triplescoop", "834_athena_commando_m_axl", "835_athena_commando_f_ladyatlantis", "836_athena_commando_m_jonesyflare", "837_athena_commando_m_maskeddancer", "838_athena_commando_m_junksamurai", "839_athena_commando_f_hightowersquash", "840_athena_commando_m_hightowergrape", "841_athena_commando_m_hightowerwasabi", "842_athena_commando_f_hightowerhoneydew", "843_athena_commando_m_hightowertomato_casual", "844_athena_commando_f_hightowermango", "845_athena_commando_m_hightowertapas", "846_athena_commando_m_hightowerdate", "847_athena_commando_m_soy_2as3c", "848_athena_commando_f_darkninjapurple", "849_athena_commando_m_darkeaglepurple", "850_athena_commando_f_skullbritecube", "851_athena_commando_m_bittenhead", "852_athena_commando_f_blackwidowcorrupt", "853_athena_commando_f_sniperhoodcorrupt", "854_athena_commando_m_samuraiultraarmorcorrupt", "855_athena_commando_m_elastic", "856_athena_commando_m_elastic_b", "857_athena_commando_m_elastic_c", "858_athena_commando_m_elastic_d", "859_athena_commando_m_elastic_e", "860_athena_commando_f_elastic", "861_athena_commando_f_elastic_b", "862_athena_commando_f_elastic_c", "863_athena_commando_f_elastic_d", "864_athena_commando_f_elastic_e", "865_athena_commando_f_cloakedassassin_1xkht", "866_athena_commando_f_myth", "867_athena_commando_m_myth", "868_athena_commando_m_backspin_3u6ca", "869_athena_commando_f_cavalry", "870_athena_commando_m_kevincouture", "871_athena_commando_f_streetfashiongarnet", "872_athena_commando_f_teriyakifishprincess", "873_athena_commando_m_rebirthdefaulte", "874_athena_commando_m_rebirthdefaultf", "875_athena_commando_m_rebirthdefaultg", "876_athena_commando_m_rebirthdefaulth", "877_athena_commando_m_rebirthdefaulti", "878_athena_commando_f_rebirthdefault_e", "879_athena_commando_f_rebirthdefault_f", "880_athena_commando_f_rebirthdefault_g", "881_athena_commando_f_rebirthdefault_h", "882_athena_commando_f_rebirthdefault_i", "883_athena_commando_m_chonejonesy", "883_athena_m_3l_lod2", "883_athena_m_fn_jonesy", "884_athena_commando_f_choneramirez", "885_athena_commando_m_chonehawk", "886_athena_commando_m_chonerenegade", "887_athena_commando_m_chonespitfire", "888_athena_commando_f_chonebanshee", "889_athena_commando_f_chonewildcat", "890_athena_commando_f_choneheadhunter", "891_athena_commando_m_lunchbox", "892_athena_commando_f_vampirecasual", "893_athena_commando_f_blackwidowjacket", "894_athena_commando_m_palespooky", "895_athena_commando_m_delisandwich", "896_athena_commando_f_spookyneon", "897_athena_commando_f_darkbombersummer", "898_athena_commando_m_flowerskeleton", "899_athena_commando_f_poison", "900_athena_commando_m_famine", "901_athena_commando_f_pumpkinspice", "902_athena_commando_m_pumpkinpunk", "903_athena_commando_f_frankie", "904_athena_commando_m_jekyll", "905_athena_commando_m_york", "906_athena_commando_m_york_b", "907_athena_commando_m_york_c", "908_athena_commando_m_york_d", "909_athena_commando_m_york_e", "910_athena_commando_f_york", "911_athena_commando_f_york_b", "912_athena_commando_f_york_c", "913_athena_commando_f_york_d", "914_athena_commando_f_york_e", "915_athena_commando_f_ravenquillskull", "916_athena_commando_f_fuzzybearskull", "917_athena_commando_m_durrburgerskull", "918_athena_commando_m_teriyakifishskull", "919_athena_commando_f_babayaga", "920_athena_commando_m_partytrooper", "921_athena_commando_f_parcelpetal", "922_athena_commando_m_parcelprank", "923_athena_commando_m_parcelgold", "924_athena_commando_m_embers", "925_athena_commando_f_tapdance", "926_athena_commando_f_streetfashiondiamond", "927_athena_commando_m_nauticalpajamas", "928_athena_commando_m_nauticalpajamas_b", "929_athena_commando_m_nauticalpajamas_c", "930_athena_commando_m_nauticalpajamas_d", "931_athena_commando_m_nauticalpajamas_e", "932_athena_commando_m_shockwave", "933_athena_commando_f_futurepink", "934_athena_commando_m_vertigo", "935_athena_commando_f_eternity", "936_athena_commando_f_raidersilver", "937_athena_commando_m_football20_uic2q", "938_athena_commando_m_football20_b_i18w6", "939_athena_commando_m_football20_c_9op0f", "940_athena_commando_m_football20_d_zid7q", "941_athena_commando_m_football20_e_knwuy", "942_athena_commando_f_football20_yqupk", "943_athena_commando_f_football20_b_gr3wn", "944_athena_commando_f_football20_c_fo6iy", "945_athena_commando_f_football20_d_g1uyt", "946_athena_commando_f_football20_e_efkp3", "947_athena_commando_m_football20referee_in7ey", "948_athena_commando_m_football20referee_b_qpxth", "949_athena_commando_m_football20referee_c_smmey", "950_athena_commando_m_football20referee_d_mihme", "951_athena_commando_m_football20referee_e_qbiba", "952_athena_commando_f_football20referee_zx4ic", "953_athena_commando_f_football20referee_b_5sv7q", "954_athena_commando_f_football20referee_c_naq0g", "955_athena_commando_f_football20referee_d_ofzil", "956_athena_commando_f_football20referee_e_dqtp6", "957_athena_commando_f_ponytail", "958_athena_commando_m_pieman", "959_athena_commando_m_corny", "960_athena_commando_m_cosmos", "961_athena_commando_f_shapeshifter", "962_athena_commando_m_flapjackwrangler", "963_athena_commando_f_lexa", "964_athena_commando_m_historian_869bc", "965_athena_commando_f_spacefighter", "966_athena_commando_m_futuresamurai", "967_athena_commando_m_ancientgladiator", "968_athena_commando_m_teriyakifishelf", "969_athena_commando_m_snowmanfashion", "970_athena_commando_f_renegaderaiderholiday", "971_athena_commando_m_jupiter_s0z6m", "972_athena_commando_f_arcticcamowoods", "973_athena_commando_f_mechstructor", "974_athena_commando_f_streetfashionholiday", "975_athena_commando_f_cherry_b8xn5", "976_athena_commando_f_wombat_0grtq", "977_athena_commando_m_wombat_r7q8k", "978_athena_commando_m_fancycandy", "979_athena_commando_m_snowboarder", "980_athena_commando_f_elf", "981_athena_commando_m_jonesyholiday", "982_athena_commando_m_driftwinter", "983_athena_commando_f_cupidwinter", "984_athena_commando_m_holidaylights", "985_athena_commando_m_tiptoe_5l424", "986_athena_commando_m_plumretro_4aja2", "987_athena_commando_m_frostbyte", "988_athena_commando_m_tiramisu_5khzp", "989_athena_commando_m_progressivejonesy", "989_athena_commando_m_progressivejonesy_event", "990_athena_commando_m_grilledcheese_snx4k", "991_athena_commando_m_nightmare_nm1c8", "992_athena_commando_f_typhoon_lpfu6", "993_athena_commando_m_typhoonrobot_2yrgv", "994_athena_commando_m_lexa", "995_athena_commando_m_globalfb_h5oij", "996_athena_commando_m_globalfb_b_rved4", "997_athena_commando_m_globalfb_c_n6i4h", "998_athena_commando_m_globalfb_d_utib8", "999_athena_commando_m_globalfb_e_oisu6", "a_001_athena_commando_f_globalfb_hdl2w", "a_002_athena_commando_f_globalfb_b_0ch64", "a_003_athena_commando_f_globalfb_c_j4h5j", "a_004_athena_commando_f_globalfb_d_62oz5", "a_005_athena_commando_f_globalfb_e_gth5i", "a_006_athena_commando_m_convoytarantula_641pz", "a_007_athena_commando_f_streetfashioneclipse", "a_008_athena_commando_f_combatdoll", "a_009_athena_commando_f_foxwarrior_21b9r", "a_010_athena_commando_m_tar_46fmc", "a_011_athena_commando_m_streetcuddles", "a_012_athena_commando_m_mainframe_v7q8r", "a_013_athena_commando_m_mainframe_b_70z5m", "a_014_athena_commando_m_mainframe_c_yvdol", "a_015_athena_commando_m_mainframe_d_s625d", "a_016_athena_commando_m_mainframe_e_kpzjl", "a_017_athena_commando_f_mainframe_cyl17", "a_018_athena_commando_f_mainframe_b_t6gy4", "a_019_athena_commando_f_mainframe_c_u5ri4", "a_020_athena_commando_f_mainframe_d_zhvem", "a_021_athena_commando_f_mainframe_e_l34e4", "a_022_athena_commando_f_crush", "a_023_athena_commando_m_skirmish_w1n7h", "a_024_athena_commando_f_skirmish_qw2bq", "a_025_athena_commando_m_kepler_uen6v", "a_026_athena_commando_f_kepler_2g59m", "a_027_athena_commando_f_casualbomberlight", "a_028_athena_commando_f_ancientgladiator", "a_029_athena_commando_m_llamaherowinter_c83tz", "a_031_athena_commando_m_builder", "a_032_athena_commando_m_spacewarrior", "a_033_athena_commando_m_smallfry_z73ek", "a_034_athena_commando_f_catburglar", "a_035_athena_commando_m_lionsoldier", "a_036_athena_commando_f_obsidian", "a_037_athena_commando_f_dinohunter", "a_038_athena_commando_f_towersentinel", "a_039_athena_commando_m_chickenwarrior", "a_040_athena_commando_f_temple", "a_041_athena_commando_m_cubeninja", "a_042_athena_commando_f_scholar", "a_043_athena_commando_m_darkminion", "a_044_athena_commando_f_neoncatfashion_64jw3", "a_045_athena_commando_m_bananaleader", "a_046_athena_commando_f_assembler", "a_047_athena_commando_f_windwalker", "a_048_athena_commando_f_sailorsquadleader", "a_049_athena_commando_f_sailorsquadrebel", "a_050_athena_commando_f_sailorsquadrose", "a_051_athena_commando_m_hiphare", "a_052_athena_commando_f_bunnyfashion", "a_053_athena_commando_f_bunnyfashion_b", "a_054_athena_commando_f_bunnyfashion_c", "a_055_athena_commando_f_bunnyfashion_d", "a_056_athena_commando_f_bunnyfashion_e", "a_057_athena_commando_f_thegoldenskeleton", "a_058_athena_commando_f_wickedduck", "a_059_athena_commando_m_wickedduck", "a_060_athena_commando_m_daytrader_8mro2", "a_061_athena_commando_m_paddedarmororder", "a_062_athena_commando_f_alchemy_xd6gp", "a_063_athena_commando_f_cottoncandy", "a_064_athena_commando_f_survivalspecialistautumn", "a_068_athena_commando_m_terrainman", "a_069_athena_commando_m_accumulate", "a_070_athena_commando_m_cavern_3i6i1", "a_071_athena_commando_m_cranium", "a_072_athena_commando_m_buffcatcomic_xg5xc", "a_073_athena_commando_f_tacoknight", "a_074_athena_commando_m_tomatoknight", "a_075_athena_commando_m_durrburgerknight", "a_076_athena_commando_f_dinocollector", "a_077_athena_commando_f_armoredengineer", "a_078_athena_commando_m_bicycle", "a_079_athena_commando_m_raptorknight", "a_080_athena_commando_m_hardwood_i15al", "a_081_athena_commando_m_hardwood_b_jrp29", "a_082_athena_commando_m_hardwood_c_ys5xc", "a_083_athena_commando_m_hardwood_d_7s0pn", "a_084_athena_commando_m_hardwood_e_ii9ys", "a_085_athena_commando_f_hardwood_k7zz1", "a_086_athena_commando_f_hardwood_b_b7zqa", "a_087_athena_commando_f_hardwood_c_aou16", "a_088_athena_commando_f_hardwood_d_wphx2", "a_089_athena_commando_f_hardwood_e_4tdwh", "a_090_athena_commando_m_caveman", "a_091_athena_commando_f_darkelf", "a_092_athena_commando_m_broccoli_pr297", "a_093_athena_commando_f_stoneviper", "a_094_athena_commando_f_cavern_33lmc", "a_095_athena_commando_m_doubleagentgrey", "a_096_athena_commando_f_taxiupgradedmulticolor", "a_097_athena_commando_f_wastelandwarrior", "a_098_athena_commando_f_spartanfuture", "a_099_athena_commando_f_shrapnel", "a_100_athena_commando_m_downpour_kc39p", "a_101_athena_commando_m_tacticalwoodlandblue", "a_102_athena_commando_m_assemblel", "a_103_athena_commando_m_grim_vm52m", "a_104_athena_commando_m_towersentinel", "a_105_athena_commando_f_spacecuddles_5teva", "a_106_athena_commando_f_futurepinkgoal", "a_107_athena_commando_m_lasso_jhza3", "a_108_athena_commando_m_lassopolo_8gam0", "a_109_athena_commando_m_emperor", "a_110_athena_commando_m_alientrooper", "a_111_athena_commando_m_faux", "a_112_athena_commando_m_ruckus", "a_113_athena_commando_f_innovator", "a_114_athena_commando_f_believer", "a_115_athena_commando_m_antique", "a_116_athena_commando_m_invader", "a_117_athena_commando_f_rockstar", "a_118_athena_commando_m_jonesycattle", "a_119_athena_commando_m_golf", "a_120_athena_commando_m_golf_b", "a_121_athena_commando_m_golf_c", "a_122_athena_commando_m_golf_d", "a_123_athena_commando_m_golf_e", "a_124_athena_commando_m_cavernarmored", "a_125_athena_commando_m_firecracker", "a_126_athena_commando_m_linguini_px0qu", "a_127_athena_commando_f_mechanicalengineersummer", "a_128_athena_commando_m_menace", "a_129_athena_commando_m_catburglarsummer", "a_130_athena_commando_m_henchmansummer", "a_131_athena_commando_f_jurassicarchaeologysummer", "a_132_athena_commando_m_scavengerfire", "a_133_athena_commando_m_darkvikingfire", "a_134_athena_commando_f_bandageninjafire", "a_135_athena_commando_f_streetfashionsummer", "a_136_athena_commando_m_majesty_yr1gj", "a_137_athena_commando_m_majestyblue_3rvjs", "a_138_athena_commando_f_foray_yqpb0", "a_139_athena_commando_m_foray_sd8aa", "a_140_athena_commando_m_bluecheese", "a_141_athena_commando_m_dojo", "a_142_athena_commando_m_pliant", "a_143_athena_commando_m_pliant_b", "a_144_athena_commando_m_pliant_c", "a_145_athena_commando_m_pliant_d", "a_146_athena_commando_m_pliant_e", "a_147_athena_commando_f_pliant", "a_148_athena_commando_f_pliant_b", "a_149_athena_commando_f_pliant_c", "a_150_athena_commando_f_pliant_d", "a_151_athena_commando_f_pliant_e", "a_152_athena_commando_f_musician", "a_153_athena_commando_f_buffcatfan_ts2dr", "a_154_athena_commando_f_treasurehunterfashionmint", "a_155_athena_commando_f_brightbombermint", "a_156_athena_commando_m_goldenskeletonmint", "a_157_athena_commando_f_stereo_3a08z", "a_158_athena_commando_f_buffet_yc20h", "a_159_athena_commando_m_cashier_7k3f0", "a_160_athena_commando_m_seesawslipper", "a_161_athena_commando_m_quarrel_slxqg", "a_162_athena_commando_f_quarrel_e5d63", "a_163_athena_commando_m_stands", "a_164_athena_commando_m_stands_b", "a_165_athena_commando_m_stands_c", "a_166_athena_commando_m_stands_d", "a_167_athena_commando_m_stands_e", "a_168_athena_commando_f_stands", "a_169_athena_commando_f_stands_b", "a_170_athena_commando_f_stands_c", "a_171_athena_commando_f_stands_d", "a_172_athena_commando_f_stands_e", "a_173_athena_commando_f_partytrooperbuffet_55z8g", "a_174_athena_commando_f_celestialglow", "a_175_athena_commando_m_aliensummer", "a_176_athena_commando_f_tiedyefashion", "a_177_athena_commando_f_tiedyefashion_b", "a_178_athena_commando_f_tiedyefashion_c", "a_179_athena_commando_f_tiedyefashion_d", "a_180_athena_commando_f_tiedyefashion_e", "a_181_athena_commando_m_ruckusmini_a6vg6", "a_182_athena_commando_m_vivid_lzgq3", "a_183_athena_commando_m_antiquepal_s7a9w", "a_184_athena_commando_m_ninjawolf_f09o3", "a_185_athena_commando_m_polygon", "a_186_athena_commando_m_lars", "a_187_athena_commando_f_monarch", "a_188_athena_commando_m_colorblock", "a_189_athena_commando_m_lavish_huu31", "a_190_athena_commando_m_alienagent", "a_191_athena_commando_m_alienflora", "a_192_athena_commando_f_suspenders", "a_193_athena_commando_m_dragonfruit_7n3a3", "a_194_athena_commando_f_angeldark", "a_195_athena_commando_m_crisis", "a_196_athena_commando_f_fncsgreen", "a_197_athena_commando_m_clash", "a_198_athena_commando_m_cerealbox", "a_199_athena_commando_m_spacechimp", "a_200_athena_commando_f_ghosthunter", "a_201_athena_commando_m_teriyakifishtoon", "a_202_athena_commando_f_division", "a_203_athena_commando_f_punkkoi", "a_204_athena_commando_m_clashv_sqnvj", "a_205_athena_commando_f_textileram_gmrj0", "a_206_athena_commando_f_textilesparkle_v8ysa", "a_207_athena_commando_m_textileknight_9te8l", "a_208_athena_commando_m_textilepup_c85od", "a_209_athena_commando_f_werewolf", "a_210_athena_commando_f_renegadeskull", "a_211_athena_commando_m_psyche_jwqp3", "a_212_athena_commando_m_tomcat_m1z6g", "a_213_athena_commando_m_crittercuddle", "a_214_athena_commando_m_critterfrenzy_ydm1l", "a_215_athena_commando_f_sunrisecastle_48tiz", "a_216_athena_commando_m_sunrisepalace_bbqy0", "a_217_athena_commando_m_critterraven", "a_218_athena_commando_m_crittermaniac_kv6j0", "a_219_athena_commando_m_giggle_c2uk0", "a_220_athena_commando_f_pinkemo", "a_221_athena_commando_m_relish_8364h", "a_222_athena_commando_f_relish_g6s5t", "a_223_athena_commando_m_glitz_mj5wq", "a_224_athena_commando_f_scholarghoul", "a_225_athena_commando_f_cubequeen", "a_226_athena_commando_m_sweetteriyakired", "a_227_athena_commando_f_bistroastronaut_jjlk5", "a_228_athena_commando_m_disguiseblack", "a_229_athena_commando_f_disguiseblack", "a_230_athena_commando_m_drifthorror", "a_231_athena_commando_f_ashes_tkgk9", "a_232_athena_commando_f_critterstreak_yilhr", "a_233_athena_commando_m_grasshopper_5gtt3", "a_234_athena_commando_m_grasshopper_a_57ark", "a_235_athena_commando_m_grasshopper_b_rhquy", "a_236_athena_commando_m_grasshopper_c_47tz8", "a_237_athena_commando_m_grasshopper_d_5oeik", "a_238_athena_commando_m_grasshopper_e_q14k1", "a_239_athena_commando_f_grasshopper_h6lb7", "a_240_athena_commando_f_grasshopper_b_9rsi1", "a_241_athena_commando_f_grasshopper_c_qgv1i", "a_242_athena_commando_f_grasshopper_d_eiq7x", "a_243_athena_commando_f_grasshopper_e_l6i24", "a_244_athena_commando_m_zombieelastic", "a_245_athena_commando_m_zombieelastic_b", "a_246_athena_commando_m_zombieelastic_c", "a_247_athena_commando_m_zombieelastic_d", "a_248_athena_commando_m_zombieelastic_e", "a_249_athena_commando_f_zombieelastic", "a_250_athena_commando_f_zombieelastic_b", "a_251_athena_commando_f_zombieelastic_c", "a_252_athena_commando_f_zombieelastic_d", "a_253_athena_commando_f_zombieelastic_e", "a_254_athena_commando_m_butterjack", "a_255_athena_commando_f_sam_qa7zs", "a_256_athena_commando_f_uproarbraids_8iozw", "a_257_athena_commando_m_catburglar_ghost", "a_258_athena_commando_f_neoncattech", "a_259_athena_commando_m_peelytech", "a_260_athena_commando_m_crazyeighttech", "a_261_athena_commando_m_headband", "a_262_athena_commando_m_headbandk", "a_263_athena_commando_m_headbands", "a_264_athena_commando_f_headbands", "a_265_athena_commando_m_grandeur_tbc0o", "a_266_athena_commando_f_grandeur_9co1m", "a_267_athena_commando_m_nucleus_xvivu", "a_268_athena_commando_m_assemblek", "a_269_athena_commando_f_hastestreet_b563i", "a_270_athena_commando_m_hastedouble_8gqhc", "a_271_athena_commando_m_fncs_purple", "a_272_athena_commando_f_prime", "a_273_athena_commando_f_prime_b", "a_274_athena_commando_f_prime_c", "a_275_athena_commando_f_prime_d", "a_276_athena_commando_f_prime_e", "a_277_athena_commando_f_prime_f", "a_278_athena_commando_f_prime_g", "a_279_athena_commando_m_prime", "a_280_athena_commando_m_prime_b", "a_281_athena_commando_m_prime_c", "a_282_athena_commando_m_prime_d", "a_283_athena_commando_m_prime_e", "a_284_athena_commando_m_prime_f", "a_285_athena_commando_m_prime_g", "a_286_athena_commando_m_turtleneck", "a_287_athena_commando_m_lonewolf", "a_288_athena_commando_m_buffllama", "a_289_athena_commando_m_gumball", "a_290_athena_commando_f_motorcyclist", "a_291_athena_commando_f_islandnomad", "a_292_athena_commando_f_exosuit", "a_293_athena_commando_m_parallelcomic", "a_294_athena_commando_f_rustybolt_db20x", "a_295_athena_commando_m_rustybolt_fehj0", "a_296_athena_commando_m_darkpit", "a_297_athena_commando_f_network", "a_298_athena_commando_m_slither_ej6db", "a_299_athena_commando_m_slither_b_1x28d", "a_300_athena_commando_m_slither_c_ij94b", "a_301_athena_commando_m_slither_d_o7bm2", "a_302_athena_commando_m_slither_e_u47bk", "a_303_athena_commando_f_slither_d0yx9", "a_304_athena_commando_f_slither_b_mo4vz", "a_305_athena_commando_f_slither_c_ue2q9", "a_306_athena_commando_f_slither_d_i6d2o", "a_307_athena_commando_f_slither_e_cspz8", "a_308_athena_commando_f_sunshine", "a_309_athena_commando_m_orbitteal_9rbjl", "a_310_athena_commando_f_scholarfestive", "a_311_athena_commando_f_scholarfestivewinter", "a_312_athena_commando_f_rainbowhat", "a_313_athena_commando_m_blizzardbomber", "a_314_athena_commando_f_nightcapsule_tak2p", "a_315_athena_commando_m_nightcapsule_b31l1", "a_316_athena_commando_m_lateral_k8xd9", "a_317_athena_commando_f_lateral_hikn9", "a_318_athena_commando_m_kittywarrior", "a_319_athena_commando_f_peppermint", "a_320_athena_commando_m_catburglarwinter", "a_321_athena_commando_f_jurassicarchaeologywinter", "a_322_athena_commando_f_renegaderaiderice", "a_323_athena_commando_m_bananawinter", "a_324_athena_commando_f_innovatorfestive_3fuph", "a_325_athena_commando_f_scout", "a_326_athena_commando_m_sharpdresserblack", "a_327_athena_commando_m_skullpunk_9qtqi", "a_328_athena_commando_m_foe_s31za", "a_329_athena_commando_f_uproar_i5n5z", "a_330_athena_commando_m_keen_2dtxm", "a_331_athena_commando_f_keen_b4lf5", "a_332_athena_commando_f_primalfalcon_3itkm", "a_333_athena_commando_m_solstice_c1yp3", "a_334_athena_commando_m_sleek_u06kf", "a_335_athena_commando_m_sleekglasses_8syx2", "a_336_athena_commando_m_zest_66jc5", "a_337_athena_commando_f_zest_zbxgn", "a_338_athena_commando_f_galactic_hn9do", "a_339_athena_commando_f_lovequeen", "a_340_athena_commando_m_gimmick_hk68x", "a_340_athena_commando_m_gimmick_hk68x_forswitchlod1", "a_341_athena_commando_f_gimmick_rb41v", "a_342_athena_commando_m_rover_wka61", "a_343_athena_commando_f_rover_kr41g", "a_344_athena_commando_m_treycozy_6zk7h", "a_345_athena_commando_m_treycozy_b_4ep38", "a_346_athena_commando_m_treycozy_c_7p9hu", "a_347_athena_commando_m_treycozy_d_okju9", "a_348_athena_commando_m_treycozy_e_vh8p6", "a_349_athena_commando_f_treycozy_y4d2w", "a_350_athena_commando_f_treycozy_b_8th8c", "a_351_athena_commando_f_treycozy_c_a9q45", "a_352_athena_commando_f_treycozy_d_2clr3", "a_353_athena_commando_f_treycozy_e_jrl60", "a_354_athena_commando_f_shatterflyeclipse", "a_355_athena_commando_m_peelytoon", "a_356_athena_commando_m_weepingwoodstoon", "a_357_athena_commando_f_valentinefashion_b3s3r", "a_358_athena_commando_f_lurk", "a_359_athena_commando_f_bunnypurple", "a_360_athena_commando_f_leatherjacketpurple", "a_361_athena_commando_f_thrive", "a_362_athena_commando_f_thrivespirit", "a_363_athena_commando_m_journey", "a_364_athena_commando_f_jade", "a_365_athena_commando_f_fncs_blue", "a_366_athena_commando_m_assemblep", "a_367_athena_commando_m_mystic", "a_368_athena_commando_m_sienna", "a_369_athena_commando_f_cyberarmor", "a_370_athena_commando_m_orderguard", "a_371_athena_commando_f_cadet", "a_372_athena_commando_f_knightcat", "a_373_athena_commando_m_originprisoner", "a_374_athena_commando_f_binary", "a_375_athena_commando_f_snowfall_wxw2t", "a_376_athena_commando_f_journeymentor_66vfp", "a_377_athena_commando_f_littleegg_omnb5", "a_378_athena_commando_f_bacteria_8jygu", "a_379_athena_commando_f_vampirehunter", "a_380_athena_commando_m_cactusrocker_sbi3t", "a_381_athena_commando_f_cactusrocker_3htbv", "a_382_athena_commando_m_cactusdancer", "a_383_athena_commando_f_cactusdancer", "a_384_athena_commando_m_rumble", "a_385_athena_commando_f_rumble", "a_386_athena_commando_m_croissant", "a_387_athena_commando_m_lyrical", "a_388_athena_commando_f_lyrical", "a_390_athena_commando_m_blackbird", "a_391_athena_commando_f_nightingale", "a_392_athena_commando_f_mockingbird", "a_393_athena_commando_f_forsake", "a_394_athena_commando_m_darkstorm", "a_395_athena_commando_f_binarytwin", "a_396_athena_commando_f_raspberry", "a_397_athena_commando_m_indigo", "a_398_athena_commando_f_neoncatspeed", "a_399_athena_commando_f_ultralight", "a_400_athena_commando_f_shinycreature", "a_401_athena_commando_m_carbideknight", "a_402_athena_commando_f_rebirthfresh", "a_403_athena_commando_f_rebirthfresh_b", "a_404_athena_commando_f_rebirthfresh_c", "a_405_athena_commando_f_rebirthfresh_d", "a_406_athena_commando_m_rebirthfresh", "a_407_athena_commando_m_rebirthfresh_b", "a_408_athena_commando_m_rebirthfresh_c", "a_409_athena_commando_m_rebirthfresh_d", "a_410_athena_commando_m_maskeddancer_fncs", "a_411_athena_commando_m_noble", "a_412_athena_commando_m_flappygreen", "a_413_athena_commando_m_glare", "a_414_athena_commando_m_modninja", "a_415_athena_commando_m_alfredo", "a_416_athena_commando_m_armadillo", "a_417_athena_commando_f_armadillo", "a_418_athena_commando_m_armadillorobot", "a_419_athena_commando_f_eternalvanguard", "a_420_athena_commando_f_neongraffitilava", "a_421_athena_commando_f_blizzardbomber", "a_422_athena_commando_m_realm", "a_423_athena_commando_m_canary", "a_424_athena_commando_m_lancelot", "a_425_athena_commando_f_bluejay", "a_427_athena_commando_f_fuchsia", "a_428_athena_commando_f_pinkwidow", "a_429_athena_commando_m_collectable", "a_430_athena_commando_m_spectacleweb", "a_431_athena_commando_m_jonesyorange", "a_432_athena_commando_m_ensemble", "a_433_athena_commando_m_ensemblesnake", "a_434_athena_commando_m_ensemblemaroon", "a_435_athena_commando_f_ensemble", "a_436_athena_commando_m_redsleeves", "a_437_athena_commando_m_chiselmashup", "a_438_athena_commando_f_gloom", "a_439_athena_commando_m_trifle", "a_440_athena_commando_f_parfait", "a_441_athena_commando_f_pennantseasone", "a_442_athena_commando_f_pennantseasone_b", "a_443_athena_commando_f_pennantseasone_c", "a_444_athena_commando_f_pennantseasone_d", "a_445_athena_commando_f_pennantseasone_e", "a_446_athena_commando_m_pennantseasone", "a_447_athena_commando_m_pennantseasone_b", "a_448_athena_commando_m_pennantseasone_c", "a_449_athena_commando_m_pennantseasone_d", "a_450_athena_commando_m_pennantseasone_e", "a_451_athena_commando_f_rays", "a_452_athena_commando_f_barium", "a_453_athena_commando_f_fuzzybearsummer", "a_454_athena_commando_m_ohana", "a_455_athena_commando_f_summerstride", "a_456_athena_commando_f_fruitcake", "a_457_athena_commando_f_punkkoisummer", "a_458_athena_commando_m_sunstar", "a_459_athena_commando_m_suntide", "a_460_athena_commando_f_sunbeam", "a_461_athena_commando_m_desertshadow", "a_462_athena_commando_m_stamina", "a_463_athena_commando_m_staminavigor", "a_464_athena_commando_m_staminacat", "a_465_athena_commando_f_stamina", "a_466_athena_commando_f_chaos", "a_467_athena_commando_m_wayfare", "a_468_athena_commando_f_wayfare", "a_469_athena_commando_f_wayfaremask", "a_470_athena_commando_m_apexwild", "a_471_athena_commando_m_apexwildred", "a_472_athena_commando_m_futuresamuraisummer", "a_473_athena_commando_f_fog", "a_474_athena_commando_f_astral", "a_475_athena_commando_f_platinumblue", "a_476_athena_commando_f_neonjam", "a_477_athena_commando_f_handlebar", "a_478_athena_commando_f_wildcard", "bean_empty", "beancharacter", "beancharacter_original", "beancharacter_test", "bentbaton_temp", "character_abstractmirror_rogue", "character_accentwall", "character_agedchasm", "character_agentsherbert", "character_agentxkoi", "character_agilerug", "character_airkringle", "character_akimboenvoy", "character_alien_robot", "character_allknowing", "character_almondsplash", "character_amour", "character_anglepatch_lodge", "character_anglepatch_royal_npc", "character_anodizedmetal", "character_applepound", "character_apprentice", "character_arcticbreeze", "character_arcticiceblue", "character_arcticicetalus", "character_ashenmagnusslant", "character_astrallilac", "character_auracop_bullet", "character_auracop_npc", "character_auroradart", "character_aurorajump", "character_autumndelivery", "character_avocadoseal", "character_azureblade", "character_badbear", "character_badcat", "character_bakerstep", "character_ballerina", "character_ballerina_db", "character_ballerina_honey", "character_ballerina_s23_winterfest", "character_balletassassin", "character_bananaadventure", "character_bananacake", "character_bananaphilosopher", "character_bandageninjafncs", "character_bariumdemon", "character_basilstrong", "character_batterboi", "character_battlehound_fierce", "character_beettread", "character_bengalbasher_npc", "character_bengalbasher_suit", "character_bentbaton", "character_berrytartbrunt", "character_berrytartbrunt_cinematic", "character_berrytartriver", "character_berrytartriver_cinematic", "character_bestdressedfncs", "character_bikemold", "character_billy", "character_billygold", "character_bingrass", "character_bionickitty", "character_bionicsmoke", "character_birdnest", "character_birdnestnavy", "character_birufang", "character_biscuitfluff", "character_bites", "character_bittersweet", "character_blazerveil", "character_blinghearts_npc", "character_blondejaw", "character_blowwire", "character_blueglaze", "character_bluejet", "character_bluemystery_dark", "character_bluntwhimsy", "character_bonemarrow", "character_boomshot_blam", "character_booster", "character_boredom", "character_bountress", "character_brainmatter", "character_brakepedal", "character_bravebuild", "character_bravebuild_cine", "character_bravebuildsuper", "character_bravebuildsuper_cinematic", "character_brawnybass", "character_brightbionic", "character_brightdisk", "character_brightion", "character_brightshimmer", "character_britedino", "character_bronzehat", "character_bucketkick", "character_buffbeak", "character_buffcatcruise", "character_bunnybr", "character_burntbagel", "character_butterplate", "character_buttoncase", "character_buttonchild", "character_bytegear", "character_cabbagesugar", "character_cafestove", "character_cajuntaco", "character_calavera", "character_calmshimmer", "character_camerashake", "character_campwrench", "character_candor", "character_caneaxl", "character_canvasprint", "character_carbideweld", "character_cardboardcrew_holiday", "character_carminefae", "character_carolinachili", "character_carrotcake", "character_cashewroll", "character_cashmerescarf", "character_casinoreaper_die", "character_casualcherie", "character_cataclysmcity", "character_cataclysmtower", "character_catspace", "character_cattlejar", "character_cavalryalt", "character_ceremonialguard_fencer", "character_ceremonialguard_fencer_npc", "character_chainmail", "character_chaosdarkice", "character_chaoslightning", "character_chempencil", "character_chessboard", "character_chicleveil", "character_chillcat", "character_chiveflake", "character_chromedj_npc", "character_cindermax", "character_cirrusvine", "character_citadel", "character_citrusspoon", "character_clawedraven", "character_clawpad_host", "character_clayplug", "character_clayplug_cinematic", "character_clayplug_cinematic_comic", "character_clayplug_cinematic_comicpanel", "character_clayplug_cinematic_glitch", "character_clearradius", "character_cleveredge", "character_clinchmetal", "character_cloakediron", "character_coatcheck", "character_cobsink", "character_coconutshell", "character_coilgrip", "character_combcrater", "character_cometdeer", "character_cometholiday", "character_cometwinter", "character_confectionpop", "character_conscience", "character_contaminate", "character_coppertoll", "character_coralnumber", "character_cordsyrup", "character_corestreet", "character_corkfloor", "character_corkfloorswim", "character_corvidstomp", "character_cosmicsquatter", "character_cowboyhat", "character_coyotear", "character_coyotetrail", "character_coyotetraildark", "character_craftglue", "character_craneanchor", "character_cranelaugh", "character_crimsonpeak", "character_crisprover", "character_critterbran", "character_crowcall", "character_crowcallswim", "character_crumbviolin", "character_crumplefold", "character_crystalglobe", "character_cubecoast", "character_cubicvice_dual", "character_cupidevil", "character_cupidhunter", "character_cyberdelivery", "character_cyberfu_brigade", "character_cyclopsprey", "character_daffodilsong", "character_dameregent", "character_dangermojo", "character_dapperpunch", "character_darkazalea", "character_darkninjawhite", "character_darkstance_inferno", "character_darkvogue", "character_dashsurge", "character_dazzle", "character_decasphere", "character_defectblip", "character_defectglitch", "character_democrook", "character_denimequip_stock", "character_densefog", "character_derbyswarm", "character_despair", "character_diamondheart_chic", "character_diamondheart_npc", "character_dimeblanketgrace", "character_dimeblanketgrace_db", "character_dimeblanketknot", "character_dimeblanketknot_db", "character_directcontact", "character_distantechocastle", "character_distantechopilot", "character_distantechopro", "character_dodgyoven", "character_doggus_cinematic_comic", "character_doggus_cinematic_comicpanel", "character_dollenthusiast", "character_domeroof", "character_donkeycrib", "character_dorsaldance", "character_doubleconk", "character_doubleduty", "character_doubledutydart", "character_doughdisk", "character_dracodueler", "character_driedsilk", "character_driftavatar", "character_driftswat", "character_drifttrooper", "character_dryerasecod", "character_dryerasetoro", "character_dualparadox", "character_dummy_fncs", "character_durian_undergroundrebel_fashion", "character_dyedduelist", "character_earthlane", "character_ebony", "character_echoangel", "character_echoangel_npc", "character_echonyx", "character_echonyx_npc", "character_ectocat", "character_eggnogfaucet", "character_elbowchat", "character_elbowchat_npc", "character_elegantheist", "character_elegantheist_db", "character_elegantlilyankle", "character_elegantlilycharm", "character_elevate", "character_emberrae", "character_emeraldglassgreen", "character_emeraldglasspink", "character_emeraldglassrebel", "character_emeraldglasstransform", "character_ephemeral", "character_ethicalnoggin", "character_excellentbass", "character_excitedcyan", "character_fabulouswind", "character_fairyflex", "character_fallvalleyblink", "character_fallvalleycharge", "character_falsevulture", "character_fastcheetah", "character_fauxvenom", "character_fearlessflighthero", "character_fearlessflightmenace", "character_feathermudglance", "character_feathermudlounge", "character_felinewarrior", "character_feraltrash", "character_feudallord", "character_fiercebraid", "character_finecheek", "character_firework", "character_firstclass", "character_firstclass_b", "character_firstclass_c", "character_firstclass_d", "character_firstclass_e", "character_firstclasssecond", "character_firstclasssecond_b", "character_firstclasssecond_c", "character_firstclasssecond_d", "character_firstclasssecond_e", "character_firthangelghost", "character_firthangelghost_npc", "character_firthangelshadow", "character_firthangelshadow_npc", "character_firthnyx_npc", "character_fishbowl", "character_fitvapor", "character_flamebride", "character_flamebride_db", "character_flamingocountry", "character_flavorstock", "character_floodplain", "character_floralcardinal", "character_flowervase", "character_fluffwoof", "character_folkevening", "character_forestbath", "character_forwardlake_dire", "character_fossilmech", "character_freedrive", "character_freightcalf", "character_freshwave", "character_frostmystery", "character_frozenreality", "character_furyangel", "character_furyangel_npc", "character_furyfax", "character_furynyx", "character_furynyx_npc", "character_fuzzyclaw", "character_fuzzydarkness", "character_galamaiden", "character_galaxyknight", "character_galaxylevel", "character_gallonbag", "character_garbagefncs", "character_garlicwhisk", "character_gatehound_spectral", "character_gelatingummi", "character_geneaglet", "character_genius", "character_geniusblob", "character_gleamangel_lodge_npc", "character_gleamnyx_lodge_npc", "character_gnocchitea", "character_goldaccomplishment", "character_goldcat_claw", "character_goldenguard", "character_goldenguardantler", "character_goldenpleats", "character_goodmood", "character_gothdevil", "character_gourdriddance", "character_graffitifry", "character_graffititon", "character_grandscheme", "character_grandscheme_blue", "character_grandscheme_grey", "character_grandscheme_npc", "character_grandscheme_orange", "character_grandscheme_red", "character_grandscheme_yellow", "character_greatpool", "character_greatpoolswim", "character_greenjacketfncs", "character_groovyreader", "character_grumblecroak", "character_grumblewoof", "character_guineapig", "character_gumoutlaw", "character_habitatsecurity", "character_habitatsecurity_b", "character_habitatsecurity_c", "character_habitatsecurity_d", "character_habitatsecurity_e", "character_habitatsecurity_f", "character_habitatsecurity_g", "character_habitsecurity", "character_habitsecurity_b", "character_habitsecurity_c", "character_habitsecurity_d", "character_habitsecurity_e", "character_habitsecurity_f", "character_habitsecurity_g", "character_hacker", "character_happyhopper", "character_hastybandit", "character_hauntkoi", "character_haybrush", "character_hazardedge", "character_headhunterstar", "character_headhunterstarfncs", "character_headset", "character_healedscar", "character_healingcrystal", "character_heavyroar", "character_heavyroar_cine", "character_hedgesprig", "character_heistfncs", "character_heistsleek", "character_heistsleek_npc", "character_henchmantoughdark_strong", "character_herbhutch_breath", "character_highbeam", "character_highmotion", "character_hiptripper", "character_hitman_dark", "character_hitmanfncs", "character_hollydessert", "character_hornedjudgment_midgard", "character_hornettavine", "character_humanbeing", "character_hydratrumpetcoach", "character_hydrobottle", "character_hydroignite", "character_iceretreat", "character_ichorincisor", "character_imitator", "character_imitator_npc", "character_impulse", "character_impulse_b", "character_impulse_c", "character_impulse_d", "character_impulse_e", "character_impulsespring", "character_impulsespring_b", "character_impulsespring_c", "character_impulsespring_d", "character_impulsespring_e", "character_indiebucket", "character_inferno", "character_infernofncs", "character_inflatododo", "character_inkhoop", "character_innovatorsand", "character_inspirespell", "character_instantgravel", "character_instantgravelnoble", "character_intensecello", "character_ionvial", "character_ironblaze", "character_ironclash", "character_ironlilac_sly", "character_ivycross", "character_jadedhare", "character_jadetowelgloss", "character_jadetowelhope", "character_jazzshoes", "character_jonesyorangefncs", "character_joyfulgrin", "character_jumpsuit_mutable", "character_jumpsuit_scrap_mutable", "character_jungleboss_npc", "character_kelplinencalcium", "character_kelplinencalcium_cinematic", "character_kelplinenmagnesium", "character_kelplinenmagnesium_cinematic", "character_kernelruse", "character_kettlepress", "character_keychain", "character_keytracker", "character_kneelens", "character_knight_boss_npc", "character_knightcatracket", "character_knishclamp_npc", "character_kobolobo", "character_labvapor", "character_lacedcrimp", "character_ladyshinobi", "character_lasthour", "character_lastvoicedive", "character_lastvoicesteel", "character_lazaruslens", "character_lazaruslensstyle_npc", "character_lazaruslenswings_npc", "character_lazylizzchip", "character_leafyvest", "character_leatherkey", "character_lemoncartcleaner", "character_lemoncartcleaner_cinematic", "character_lemoncartgranite", "character_lemoncartgranite_cinematic", "character_lethalvae", "character_lettuce", "character_lettucecat", "character_lexaearlgrey", "character_liftingaura_wave", "character_lightningdragon", "character_lilac", "character_lilsplit_sprinkles", "character_limettamech", "character_lintmermaid", "character_livelydomino", "character_liverromaine", "character_localzilla", "character_lonedice", "character_looper", "character_lopexsnow", "character_loudphoenix", "character_lucidazalea", "character_lucidvibe", "character_luckyagent", "character_lunargum", "character_madamemoth_npc", "character_madamemoth_posh", "character_magicmeadow", "character_magmabreak", "character_magneticplotter", "character_mallardvantage", "character_mallardvantagefncs", "character_manicrufus", "character_markerdeer_tin", "character_masterkeyorder", "character_mastermindsummer", "character_mechanicalengineerrev", "character_mechpilotsharkspeed", "character_mechpilotsharkvelocity", "character_medicrow", "character_medievalsheath", "character_meekcrow", "character_megatoof_valve", "character_melodyurchin", "character_meltediron_footclan_npc", "character_mercurialstorm", "character_metalscout", "character_meteorwomen_alt", "character_metropunk", "character_mezzoace", "character_middlesock", "character_militaryfashion_brigade", "character_millionairecowgirl", "character_millionairegem", "character_millionairetuna", "character_mindpinch", "character_mindpinch_npc", "character_miragehike", "character_missusmind_suit", "character_mistmylar_claw", "character_mistraven_npc", "character_mistravenpeck", "character_mistresssombre", "character_mochi", "character_mochiwoof", "character_modernmilitary_crisp", "character_moleacorngloam", "character_moleacornpecan", "character_mollykit", "character_moonsatellite", "character_moonshock", "character_mooseporch_math", "character_moralkoreline", "character_motormonth", "character_mouse", "character_muffinladle_gas", "character_mummy", "character_musketslinger", "character_mustardtoast", "character_mutedsheath", "character_muteribbon", "character_nanochain", "character_nebula", "character_nebulaburden", "character_nefariousjewel", "character_neonglow", "character_nighthawk", "character_nigirininja", "character_ninjawarrior", "character_nitroflow", "character_noiseless", "character_novelguard", "character_nox", "character_npchirereward", "character_nutmegmayo", "character_oatmealspreadactive", "character_oatmealspreadgolem", "character_oceanbreeze", "character_olivestomp", "character_omegaangel", "character_omelettepop", "character_openended", "character_orinchai", "character_outergarment", "character_oysterknock", "character_pagetruffle", "character_palmtree", "character_paperblaze", "character_paperglow", "character_parrotpen", "character_partygold", "character_partyjelly", "character_pastasaucemarinara", "character_pastasaucespice", "character_pastelglazegift", "character_pastelglazegrain", "character_patches", "character_patronpoppet", "character_pawjasminegravity", "character_pawjasminesword", "character_peacefulpoem", "character_peacefulpoempumped", "character_pearltote", "character_pencil_apple", "character_pencil_cherry", "character_pencil_fig", "character_pencil_grape", "character_pencil_guava", "character_pencil_kiwi", "character_pencil_lime", "character_pencil_mango", "character_pencil_pear", "character_pencil_raspberry", "character_pennantseasglare", "character_pennantseasglare_b", "character_pennantseasglare_c", "character_pennantseasglare_d", "character_pennantseasglare_e", "character_pennantseasshade", "character_pennantseasshade_b", "character_pennantseasshade_c", "character_pennantseasshade_d", "character_pennantseasshade_e", "character_peonybellow", "character_persimmonsmoke", "character_phonecharger", "character_photographer_holiday", "character_pigeonchart", "character_pilestripes", "character_pillowmill_mastery", "character_pinkjet", "character_pinkspike", "character_pinktrooperdark", "character_pipershelf_pearl", "character_pipershelf_pearl_npc", "character_pirouetteweld", "character_piteouskicks", "character_piteouskicks_npc", "character_pitglass", "character_pizzaparty", "character_plaidcarbon", "character_plantstand", "character_plasticfork", "character_plasticforkswim", "character_platypusbranch", "character_plottwist", "character_plumedstare", "character_pocketscrunchie", "character_pointsmoke", "character_pointwoof", "character_pointytemper", "character_polaritywinnfield", "character_polishedjade_mind", "character_ponyshore", "character_poolswirl", "character_possession", "character_possessionhologram_npc", "character_potterywheel", "character_powerfarmer", "character_powerfluff", "character_powerfuldozen", "character_prairieskip_forge", "character_preciseruffian", "character_precisionmongoose", "character_preppyberet", "character_pressureghoul", "character_prickquill", "character_primeorder", "character_primeredux", "character_primeredux_b", "character_primeredux_c", "character_primeredux_d", "character_primeredux_e", "character_primeredux_f", "character_primeredux_g", "character_primeredux_h", "character_primeredux_i", "character_primeredux_j", "character_prismparticle", "character_prisonbreak", "character_privatejet", "character_prodigyfire", "character_prodigyhaughty", "character_prodigysage", "character_psychicaphid", "character_puffinsmile", "character_pumpkinpunk_glitch", "character_pumpkinskeleton", "character_puzzleshed", "character_qualitycreek", "character_quickburst_plains", "character_quietpeanuts", "character_radiantmove", "character_radiumfox_flame", "character_ragedebris", "character_raggedrebel", "character_raiderpink_sherbert", "character_rainbowstraps", "character_rangegawker", "character_rankedolympus", "character_rankedolympus_npc", "character_rankedscythe", "character_rankedspeeder", "character_rankedtrooper", "character_rankedtroopernoble", "character_raredelightsail", "character_raveneon", "character_rebarghoul", "character_rebelclaw_aviator", "character_reconexpert_fncs", "character_recordscratch", "character_redoasisapricot", "character_redoasisblackberry", "character_redoasisgooseberry", "character_redoasisjackfruit", "character_redoasispomegranate", "character_redpepper", "character_relaystick", "character_relaystickbounty", "character_remotecontrol", "character_renegadewhip", "character_reptilianocean_sleek", "character_retrophotographer", "character_retrowheels", "character_rhombcamo", "character_rhombcamo_npc", "character_rhombguard_npc", "character_rhombpatrol_npc", "character_rippedharvester", "character_robedmentor_cross_npc", "character_robedminer_gold_npc", "character_robedminer_ruby_npc", "character_robedsledge_cross_npc", "character_robot_hologram_npc", "character_rockerpunkalt", "character_rogueninja", "character_rollerblade", "character_roostermelt", "character_rosedepth_seed", "character_rosedust", "character_roseform", "character_roundthumb_nail", "character_rowdydevilfncs", "character_royalangst_tote", "character_royaldusk", "character_ruins", "character_rushrustle", "character_sacredcuddle", "character_safarignome", "character_sagetwig", "character_sahara", "character_sailorsquadleaderkoi", "character_saladdressing", "character_samerabbit", "character_sandalsite", "character_satincheddar", "character_scalybutcher", "character_scareybeary", "character_scarletbionic", "character_scorpionzero", "character_scraptunnel", "character_scribble", "character_scubadasher", "character_scuffle", "character_seaflake", "character_searedscurf", "character_selenecobra_stride", "character_sequinpie", "character_serenecherie", "character_serpentcoil", "character_sesameseed", "character_sewmesa", "character_shadeangel", "character_shadeangel_npc", "character_shadenyx", "character_shadenyx_npc", "character_shakecrunch", "character_sharkfry", "character_sharpfang", "character_sharpmagnet", "character_sherwolf_gnash", "character_shiitakeshaolin_rouge", "character_shimmerzen", "character_shinystar", "character_shirttilapia", "character_shiverflame_ace", "character_shrimpstroll", "character_silencer", "character_silenttempo", "character_silverbellmarine", "character_silverbellwind", "character_silverbullet", "character_sirwolf", "character_skeleprobe", "character_skiffeye", "character_skifftoil", "character_skilledruby", "character_skippingclouds", "character_skullbritedot", "character_sleekbiker", "character_sleekrivet", "character_sleetreceipt", "character_slicedbread", "character_slicevine_loopplum", "character_slimytune", "character_slowburn", "character_slyjudge", "character_smarthyena", "character_smokeyalias", "character_smoothbeanie", "character_smoothsuede", "character_snailaisle", "character_snakecrest", "character_snapfreeze_hunt", "character_snowknight_helm", "character_snowninjadark", "character_snowsoldierfashion", "character_soappocket", "character_sodamug", "character_soilblend_haunt", "character_solartheory", "character_solidmist", "character_solidmist_boss", "character_soupgoal", "character_sourwire", "character_spacefeline", "character_sparkarcher", "character_sparklechop", "character_sparrow", "character_spartansmirk", "character_spatialtravelwatt", "character_speakerbox", "character_speedbonny", "character_speedbonny_durian", "character_speedbonny_racer", "character_speedbonny_racer_b", "character_speedbonny_racer_c", "character_speedbonny_racer_d", "character_speedbonny_racer_e", "character_speedbonny_racer_f", "character_speedbonny_racer_g", "character_speeddial", "character_speeddialbattle", "character_speedkidd", "character_speedkidd_racer", "character_speedkidd_racer_b", "character_speedkidd_racer_c", "character_speedkidd_racer_d", "character_speedkidd_racer_e", "character_speedkidd_racer_f", "character_speedkidd_racer_g", "character_speedypeas_sprig", "character_sphericaldefense", "character_splitdiamond", "character_sportsfashion_winter", "character_springbreak", "character_springbreaktrip", "character_sprocketpoppy_boat", "character_spyhandler", "character_squidglistenlift", "character_stagecue_chalk", "character_stallionaviator", "character_stallionsmoke", "character_starstray", "character_starwalkerfncs", "character_staticrewind", "character_staticshades", "character_steaksting", "character_steammarauder", "character_steampower", "character_steelstomper", "character_steelygrin", "character_steelykendama", "character_stonelion", "character_stormaviator", "character_strategicspur_blast", "character_streetgothsummer", "character_strikinglybright", "character_stronghibiscus", "character_strontiumspark", "character_studybench", "character_stunningmountain_armor", "character_stylusfluff", "character_sugarbubble", "character_summerdummy", "character_sunbeamquest", "character_sunburst", "character_sunburstalt", "character_sunlit", "character_sunnysquawk", "character_sunshine", "character_supernovataro", "character_surebamboo", "character_swampfish", "character_swampknight", "character_sweetcuddle", "character_sweetletter", "character_swisskale", "character_synthcontact", "character_tacticalonyx", "character_tacticalprince", "character_tacticalred_disco", "character_tactickale", "character_tactickale_b", "character_tactickale_c", "character_tactickale_d", "character_tactickale_e", "character_tacticmushroom", "character_tacticmushroom_b", "character_tacticmushroom_c", "character_tacticmushroom_d", "character_tacticmushroom_e", "character_talonhime", "character_tattoon", "character_tealmink_pelt", "character_technoawaken", "character_techspeeder", "character_techtomato", "character_tennisleash", "character_teriyakitech", "character_theherald", "character_theherald_npc", "character_thickwatch", "character_thornededen", "character_tideking_regal", "character_tigerfashiondale", "character_tigerrootfame", "character_tigerroothype", "character_tikitorch", "character_timberstakeclub", "character_timberstakedrift", "character_timberstakedrift_b", "character_timberstakedrift_c", "character_timberstakedrift_d", "character_timberstakedrift_e", "character_timberstakepurse", "character_timberstakesoul", "character_timberstakesoul_b", "character_timberstakesoul_c", "character_timberstakesoul_d", "character_timberstakesoul_e", "character_timeinterval", "character_timesquare", "character_tireswing", "character_titanium", "character_titanium_npc", "character_toadleaf", "character_tofuresort", "character_tollbridge", "character_totalflock", "character_toughpack", "character_toxicstorm", "character_toymonkeyorca", "character_tractorfair", "character_traffichat_boba", "character_traininggroundbot_npc", "character_traitholdeye", "character_traitholdlaw", "character_traitholdtri", "character_treasurehunter_brigade", "character_treasurehunterfashionsfncs", "character_trendypunk", "character_trickydino", "character_troops", "character_troutwrist_spine", "character_truckscale", "character_tubagummi", "character_tuckbeetle", "character_tungstan", "character_twicebaked", "character_twilightspotshine", "character_twilightspotspell", "character_twinklebot", "character_twinkleloop", "character_unbrokentrash", "character_undergroundrebel_fashion", "character_unluckyroll", "character_unluckyroll_npc", "character_unluckysinge_staff_npc", "character_upbeatiguana", "character_upbeatiguana_b", "character_upbeatiguana_c", "character_upbeatiguana_d", "character_upbeatiguana_e", "character_vampirehunter_galaxy", "character_vanceguard", "character_vectorspark", "character_veiled", "character_velociteeth", "character_velvetdeskcam", "character_velvetdeskfiber", "character_venice", "character_violetfare", "character_virtuous", "character_vitalinventor", "character_vitalinventorblock", "character_vitalpsych", "character_voidredemption_rebel", "character_voltaichuntress", "character_warmshadewagon", "character_warmshadeweasel", "character_wartybrine_sus", "character_waterfallcharm", "character_waterfallcharm_b", "character_waterfallcharm_c", "character_waterfallcharm_d", "character_waterfallcharm_e", "character_waterfallcharm_f", "character_waterfallcharm_g", "character_watermolecules", "character_wavetrail", "character_waywardrebel", "character_waywardrebelfncs", "character_wealthlambfate", "character_weaveharbor", "character_weepingwoodsfestive", "character_wideplane", "character_wingbath", "character_wolfhunter_feral", "character_wonderclef", "character_wonderclef_ruby", "character_wonderclef_ruby_b", "character_wonderclef_ruby_c", "character_wonderclef_ruby_d", "character_wonderclef_ruby_e", "character_wonderclef_ruby_f", "character_wonderclef_ruby_g", "character_wonderhill", "character_wonderhill_ruby", "character_wonderhill_ruby_b", "character_wonderhill_ruby_c", "character_wonderhill_ruby_d", "character_wonderhill_ruby_e", "character_wonderhill_ruby_f", "character_wonderhill_ruby_g", "character_wormchalk", "character_yampowder", "character_yogapatio", "character_zebrascramble_bacon", "character_zebrascramble_npc", "character_zirconsweep", "creative_mannequin_m_default", "defaultoutfit", "jonesy3l", "juno_minifig_commonknighta", "juno_minifig_commonknightb", "juno_minifig_commonknightc", "juno_minifig_duke", "juno_minifig_enemyknight", "juno_minifig_forest", "juno_minifig_iceman", "juno_minifig_sandman", "juno_minifig_skeleton", "juno_minifig_skeleton_glow", "juno_minifig_skeleton_piratea", "juno_minifig_skeleton_pirateb", "juno_minifig_test", "juno_minifig_test_player", "juno_minifig_villager", "juno_minifig_villager_commonpeasanta", "juno_minifig_villager_commonpeasantb", "juno_minifig_witch", "lime_minifig_test_player", "npc_athena_commando_f_cloakedassassin", "npc_athena_commando_f_cubequeen", "npc_athena_commando_f_fallback", "npc_athena_commando_f_henchmanspydark", "npc_athena_commando_f_henchmanspygood", "npc_athena_commando_f_marauderelite", "npc_athena_commando_f_prime", "npc_athena_commando_f_primeorder", "npc_athena_commando_f_rebirthdefault_henchman", "npc_athena_commando_f_towersentinel", "npc_athena_commando_m_alienrobot", "npc_athena_commando_m_aliensummer", "npc_athena_commando_m_apparition_grunt", "npc_athena_commando_m_apparition_heavy", "npc_athena_commando_m_broccoli", "npc_athena_commando_m_catburglar_ghost", "npc_athena_commando_m_cavernarmored", "npc_athena_commando_m_emperorsuit", "npc_athena_commando_m_fallback", "npc_athena_commando_m_heistsummerisland", "npc_athena_commando_m_henchmanbad", "npc_athena_commando_m_henchmangood", "npc_athena_commando_m_henchmansummer", "npc_athena_commando_m_hightowerhenchman", "npc_athena_commando_m_hightowerhenchman_date", "npc_athena_commando_m_kyle", "npc_athena_commando_m_maraudergrunt", "npc_athena_commando_m_marauderheavy", "npc_athena_commando_m_masterkey", "npc_athena_commando_m_orderguardtank", "npc_athena_commando_m_paddedarmorarctic", "npc_athena_commando_m_paddedarmororder_masked", "npc_athena_commando_m_prime", "npc_athena_commando_m_primeorder", "npc_athena_commando_m_realm", "npc_athena_commando_m_scrapyard", "npc_athena_commando_m_spacewanderer", "npc_athena_commando_m_tacticalfishermanoil", "npc_athena_henchmanbadshorts", "npc_athena_henchmangoodshorts", "npc_athena_madcommander", "npc_athena_paddedarmor", "npc_athena_rebirthsoldier", "random", "solidwave_character_timberstakeclub_a", "solidwave_character_timberstakeclub_b", "solidwave_character_timberstakeclub_c", "solidwave_character_timberstakedrift_a", "solidwave_character_timberstakedrift_b", "solidwave_character_timberstakedrift_c", "solidwave_character_timberstakedrift_d", "solidwave_character_timberstakedrift_e", "solidwave_character_timberstakepurse", "solidwave_character_timberstakesoul_a", "solidwave_character_timberstakesoul_b", "solidwave_character_timberstakesoul_c", "solidwave_character_timberstakesoul_d", "solidwave_character_timberstakesoul_e", "stwhero", "tbd_armadillo_commando_m_noblecine", "tbd_armadillo_commando_m_realm", "tbd_athena_commando_f_buffetcine", "tbd_athena_commando_f_constructortest", "tbd_athena_commando_f_meteorwomen_alt", "tbd_athena_commando_heartache", "tbd_athena_commando_m_banana_cine", "tbd_athena_commando_m_catburglar_ghost", "tbd_athena_commando_m_constructortest", "tbd_athena_commando_m_jonesyorange", "tbd_athena_commando_m_junior", "tbd_athena_commando_m_nutcracker_cine", "tbd_athena_commando_m_orderguard", "tbd_athena_commando_m_paddedarmororder", "tbd_athena_commando_m_turtleneck", "tbd_athena_commando_m_turtleneck_event_notforstore", "vip_athena_commando_f_galileorocket_sg", "vip_athena_commando_m_galileoferry_sg", "vip_athena_commando_m_galileogondola_sg", "vip_athena_commando_m_galileojumper_sg"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "pickaxe[]": {
                    readonly title: "Pickaxe";
                    readonly type: "array";
                    readonly description: "Pickaxes.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["boltonpickaxe", "defaultpickaxe", "dev_test_pickaxe", "halloweenscythe", "happypickaxe", "pickaxe_abstractmirror", "pickaxe_accentwall", "pickaxe_accumulateretro", "pickaxe_agedchasm", "pickaxe_agentroguepoison", "pickaxe_agentsherbert", "pickaxe_agentxkoi", "pickaxe_agilerug", "pickaxe_airkringle", "pickaxe_akimboenvoy", "pickaxe_alchemy_bass", "pickaxe_alchemy_drum", "pickaxe_alchemy_guitar", "pickaxe_alchemy_keytar", "pickaxe_alchemy_mic", "pickaxe_allknowing", "pickaxe_almondsplash", "pickaxe_almondsplash_bass", "pickaxe_amour", "pickaxe_angel_fncs", "pickaxe_anglepatch", "pickaxe_anodizedmetal", "pickaxe_applepound", "pickaxe_apprentice", "pickaxe_arcticiceblue", "pickaxe_arcticicetalus", "pickaxe_ashenmagnus", "pickaxe_asterorder", "pickaxe_astrallilac", "pickaxe_auracop", "pickaxe_autumndelivery", "pickaxe_avocadoseal", "pickaxe_axlfacet", "pickaxe_azureblade", "pickaxe_badbear", "pickaxe_badcat", "pickaxe_bakerstep", "pickaxe_bakerstep_drum", "pickaxe_ballerina", "pickaxe_balletassassin", "pickaxe_balloondish_bass", "pickaxe_balloondish_guitar", "pickaxe_bananaadventure", "pickaxe_bananaphilosopher", "pickaxe_bandageninjaheart", "pickaxe_bandagetime_guitar", "pickaxe_bariumdemon", "pickaxe_bariumfncs", "pickaxe_basil", "pickaxe_batterboi", "pickaxe_batterboi_bass", "pickaxe_battlehound_fierce", "pickaxe_beanhands", "pickaxe_beettread", "pickaxe_bengalbasher", "pickaxe_bentbaton", "pickaxe_berrytart_mic", "pickaxe_bestdressedfncs", "pickaxe_bikemold", "pickaxe_bikemold_bass", "pickaxe_billygold", "pickaxe_bingrass", "pickaxe_bionickitty", "pickaxe_bionicsmoke", "pickaxe_birdnest", "pickaxe_birufang", "pickaxe_biscuitfluff", "pickaxe_bites", "pickaxe_bittersweet", "pickaxe_blazerveil", "pickaxe_blob_guitar", "pickaxe_blondejaw", "pickaxe_blowwire", "pickaxe_blueglaze", "pickaxe_bluejet", "pickaxe_bluntwhimsy", "pickaxe_bonemarrow", "pickaxe_bonewand", "pickaxe_bonewand_throng", "pickaxe_boomshot", "pickaxe_booster", "pickaxe_boredom", "pickaxe_brainmatter", "pickaxe_brakepedal", "pickaxe_bravebuild", "pickaxe_brawnybass", "pickaxe_brightion", "pickaxe_broadpoodle_drum", "pickaxe_broadpoodle_guitar", "pickaxe_bucketkick", "pickaxe_buffcatcruise", "pickaxe_bulb_bass", "pickaxe_burntbagel", "pickaxe_butterplate", "pickaxe_buttervehicle", "pickaxe_buttoncase", "pickaxe_buttonchild", "pickaxe_bytegear", "pickaxe_cabbagesugar", "pickaxe_cafestove", "pickaxe_cajuntaco", "pickaxe_cajuntaco_bass", "pickaxe_calavera", "pickaxe_calmshimmer", "pickaxe_camerashake", "pickaxe_campwrench", "pickaxe_candor", "pickaxe_carbideweld", "pickaxe_cardboard_drum", "pickaxe_carolinachili", "pickaxe_carrotcake", "pickaxe_cashmerescarf", "pickaxe_casinoreaper", "pickaxe_cataclysmcity", "pickaxe_cataclysmtower", "pickaxe_catspace", "pickaxe_cattlejar", "pickaxe_cattree_drum", "pickaxe_cavalry_alt", "pickaxe_ceremonialguard", "pickaxe_ceremonialguard_drum", "pickaxe_chainmail", "pickaxe_chaosdarkice", "pickaxe_checkmate_drum", "pickaxe_chempencil", "pickaxe_chessboard", "pickaxe_chicleveil", "pickaxe_chillcat", "pickaxe_chiveflake", "pickaxe_chiveflake_keytar", "pickaxe_cindermax", "pickaxe_cirrusvine", "pickaxe_citadel", "pickaxe_citrusspoon", "pickaxe_clawpad_host", "pickaxe_clayplug", "pickaxe_clearradius", "pickaxe_cleveredge", "pickaxe_cloakediron", "pickaxe_coatcheck", "pickaxe_coconutshell", "pickaxe_combcrater", "pickaxe_cometholiday", "pickaxe_comicpop_bass", "pickaxe_comicpop_mic", "pickaxe_confectionpop", "pickaxe_conscience", "pickaxe_contaminate", "pickaxe_coppertoll", "pickaxe_coralnumber", "pickaxe_cordsyrup", "pickaxe_corestreet_guitar", "pickaxe_corkfloor_bass", "pickaxe_corvidstomp", "pickaxe_corvidstomp_guitar", "pickaxe_cosmicsquatter", "pickaxe_cowboyhat", "pickaxe_coyotear", "pickaxe_coyotetrail", "pickaxe_coyotetraildark", "pickaxe_craftglue", "pickaxe_craneanchor", "pickaxe_cranelaugh", "pickaxe_crimsonpeak", "pickaxe_crisprover", "pickaxe_crowbarsleek", "pickaxe_crowcall_drum", "pickaxe_crumbviolin", "pickaxe_crumplefold", "pickaxe_crystalglobe", "pickaxe_cubecoast", "pickaxe_cubicvice", "pickaxe_cuchulainndale", "pickaxe_cupidevil", "pickaxe_cupidhunter", "pickaxe_cyberdelivery", "pickaxe_cyberfu_brigade", "pickaxe_cyberfureboot32", "pickaxe_cyclopsprey", "pickaxe_daffodilsong", "pickaxe_dameregent", "pickaxe_dangermojo", "pickaxe_dapperpunch", "pickaxe_darkazalea", "pickaxe_darkstance", "pickaxe_darkstance_bass", "pickaxe_darkvogue", "pickaxe_dashsurge", "pickaxe_dazzle", "pickaxe_deathvalley", "pickaxe_decasphere", "pickaxe_defect", "pickaxe_denimequip", "pickaxe_denimequip_guitar", "pickaxe_densefog", "pickaxe_derbyswarm_keytar", "pickaxe_despair", "pickaxe_diamondheart", "pickaxe_dimeblanket_mic", "pickaxe_dimeblanketgrace_guitar", "pickaxe_dimeblanketknot_guitar", "pickaxe_directcontact", "pickaxe_distantechocastle", "pickaxe_distantechopilot", "pickaxe_distantechopro", "pickaxe_dodgyoven", "pickaxe_dollenthusiast", "pickaxe_domeroof", "pickaxe_donkeycrib", "pickaxe_dorsaldance", "pickaxe_doubleconk", "pickaxe_doubleduty", "pickaxe_doubleduty_guitar", "pickaxe_doubledutystew", "pickaxe_doughdisk", "pickaxe_dracodueler", "pickaxe_driedsilk", "pickaxe_driedsilk_bass", "pickaxe_driftavatar", "pickaxe_driftswat", "pickaxe_drifttrooper", "pickaxe_drinkup_keytar", "pickaxe_dryerase_bass", "pickaxe_dryerase_drumstick", "pickaxe_dryerase_guitar", "pickaxe_dryerase_keytar", "pickaxe_dualparadox", "pickaxe_dualparadoxgold", "pickaxe_dyedduelist", "pickaxe_earthlane", "pickaxe_ebony", "pickaxe_ectocat", "pickaxe_edged_guitar", "pickaxe_edgetilt_keytar", "pickaxe_eggnogfaucet", "pickaxe_elbowchat", "pickaxe_elegantheist", "pickaxe_elegantlily_bass", "pickaxe_elegantlily_guitar", "pickaxe_elegantlily_mic", "pickaxe_elegantlily_plush_mic", "pickaxe_elevate", "pickaxe_emberrae", "pickaxe_emeraldglassgreen", "pickaxe_emeraldglasspink", "pickaxe_emeraldglassrebel", "pickaxe_emeraldglasstransform", "pickaxe_enchanted_drum", "pickaxe_ephemeral", "pickaxe_ethicalnoggin", "pickaxe_excellentbass", "pickaxe_excitedcyan", "pickaxe_fabulouswind", "pickaxe_fairyflex", "pickaxe_fallvalleyblink", "pickaxe_fallvalleycharge", "pickaxe_falsevulture", "pickaxe_fanfavorite_drum", "pickaxe_fanggang_bass", "pickaxe_fastcheetah", "pickaxe_fauxvenom", "pickaxe_fearlessflighthero", "pickaxe_fearlessflightmenaceuniversal", "pickaxe_feathermudglance", "pickaxe_feathermudlounge", "pickaxe_felinewarrior", "pickaxe_feraltrash", "pickaxe_fiercebraid", "pickaxe_filigree_guitar", "pickaxe_finecheek", "pickaxe_fireblock_drum", "pickaxe_fireworkfemale1h", "pickaxe_firstclass", "pickaxe_fishbowl", "pickaxe_fitvapor", "pickaxe_flakewhomp", "pickaxe_flamebride", "pickaxe_flamingo", "pickaxe_flavorstock", "pickaxe_flowervase", "pickaxe_fluffwoof", "pickaxe_fnbirthday5", "pickaxe_fnbirthday6", "pickaxe_fnbirthday7", "pickaxe_fncs_s32", "pickaxe_folkevening", "pickaxe_forestbath", "pickaxe_forsake_fncs", "pickaxe_forwardlakedire", "pickaxe_fossilmech", "pickaxe_freedrive", "pickaxe_freightcalf", "pickaxe_freshwave", "pickaxe_frogcabinet_drum", "pickaxe_frozenreality", "pickaxe_furyfax", "pickaxe_fuzzyclaw", "pickaxe_fuzzydarkness", "pickaxe_galaxyknight", "pickaxe_galaxylevel", "pickaxe_gallonbag", "pickaxe_garlicwhisk", "pickaxe_gatehound", "pickaxe_gelatingummi", "pickaxe_geneaglet", "pickaxe_geneaglet_bass", "pickaxe_genius", "pickaxe_genius_blob", "pickaxe_gnocchitea", "pickaxe_goldaccomplishment", "pickaxe_goldcat", "pickaxe_goldcat_bass", "pickaxe_goldenguard", "pickaxe_goldenguardantler", "pickaxe_goldenpleats", "pickaxe_gonefishing_guitar", "pickaxe_gonefishing_keytar", "pickaxe_gonefishing_mic", "pickaxe_goodmood", "pickaxe_gothdevil", "pickaxe_gourdriddance", "pickaxe_graffitifry", "pickaxe_graffitijazz_drum", "pickaxe_graffititon", "pickaxe_greatpool_guitar", "pickaxe_greenjacketpoison", "pickaxe_groovyreaderpierce", "pickaxe_groovyreaderpoke", "pickaxe_grumblecroak", "pickaxe_grumblewoof", "pickaxe_guineapig", "pickaxe_gumoutlaw", "pickaxe_hackerpass_hacker", "pickaxe_hauntkoi", "pickaxe_haybrush", "pickaxe_hazardedge", "pickaxe_headhunterstar", "pickaxe_headhunterstarfncs", "pickaxe_headset", "pickaxe_healedscar", "pickaxe_healingcrystal", "pickaxe_heavycrown_bass", "pickaxe_heavyroar", "pickaxe_hedgesprig", "pickaxe_herbhutch", "pickaxe_hexagonvoxel_bass", "pickaxe_hexagonvoxel_drum", "pickaxe_hexagonvoxel_guitar", "pickaxe_hexagonvoxel_keytar", "pickaxe_highbeam", "pickaxe_highmotion", "pickaxe_hiptripper", "pickaxe_hitman", "pickaxe_hollydessert", "pickaxe_honeybear_drum", "pickaxe_honeysail", "pickaxe_hornedjudgment", "pickaxe_hornettavine", "pickaxe_humanbeing", "pickaxe_huskinglee_drum", "pickaxe_hydratrumpetcoach", "pickaxe_hydrobeam_bass", "pickaxe_hydrobeam_guitar", "pickaxe_hydrobottle", "pickaxe_hydroignite", "pickaxe_iceretreat", "pickaxe_icewater_drum", "pickaxe_icewater_guitar", "pickaxe_icewater_mic", "pickaxe_ichorincisor", "pickaxe_id_011_medieval", "pickaxe_id_012_district", "pickaxe_id_013_teslacoil", "pickaxe_id_014_wintercamo", "pickaxe_id_015_holidaycandycane", "pickaxe_id_016_disco", "pickaxe_id_017_shark", "pickaxe_id_018_anchor", "pickaxe_id_019_heart", "pickaxe_id_020_keg", "pickaxe_id_021_megalodon", "pickaxe_id_022_holidaygiftwrap", "pickaxe_id_023_skiboot", "pickaxe_id_024_plunger", "pickaxe_id_025_dragon", "pickaxe_id_026_brite", "pickaxe_id_027_scavenger", "pickaxe_id_028_space", "pickaxe_id_029_assassin", "pickaxe_id_030_artdeco", "pickaxe_id_031_squeak", "pickaxe_id_032_tactical", "pickaxe_id_033_potofgold", "pickaxe_id_034_rockerpunk", "pickaxe_id_035_prismatic", "pickaxe_id_036_cuchulainn", "pickaxe_id_037_stealth", "pickaxe_id_038_carrot", "pickaxe_id_039_tacticalblack", "pickaxe_id_040_pizza", "pickaxe_id_041_pajamaparty", "pickaxe_id_042_circuitbreaker", "pickaxe_id_043_orbitingplanets", "pickaxe_id_044_tacticalurbanhammer", "pickaxe_id_045_valor", "pickaxe_id_046_candy", "pickaxe_id_047_carbideblue", "pickaxe_id_048_carbideblack", "pickaxe_id_049_metal", "pickaxe_id_050_graffiti", "pickaxe_id_051_neonglow", "pickaxe_id_052_hazmat", "pickaxe_id_053_deco", "pickaxe_id_054_filmcamera", "pickaxe_id_055_stop", "pickaxe_id_056_venus", "pickaxe_id_057_jailbird", "pickaxe_id_058_basketball", "pickaxe_id_059_darkeagle", "pickaxe_id_060_darkninja", "pickaxe_id_061_wwiipilot", "pickaxe_id_062_soccer", "pickaxe_id_063_vuvuzela", "pickaxe_id_064_gumshoe", "pickaxe_id_065_speedyred", "pickaxe_id_066_flintlockred", "pickaxe_id_067_taxi", "pickaxe_id_068_drift", "pickaxe_id_069_darkviking", "pickaxe_id_070_viking", "pickaxe_id_071_streetracer", "pickaxe_id_072_luchador", "pickaxe_id_073_balloon", "pickaxe_id_074_sharpdresser", "pickaxe_id_075_huya", "pickaxe_id_076_douyu", "pickaxe_id_077_carbidewhite", "pickaxe_id_078_lifeguard", "pickaxe_id_079_modernmilitary", "pickaxe_id_080_scuba", "pickaxe_id_081_streetracercobra", "pickaxe_id_082_sushichef", "pickaxe_id_083_exercise", "pickaxe_id_084_durrburgerhero", "pickaxe_id_085_wukong", "pickaxe_id_086_biker", "pickaxe_id_087_hippie", "pickaxe_id_088_psburnout", "pickaxe_id_089_ravenquill", "pickaxe_id_090_samuraiblue", "pickaxe_id_091_hacivat", "pickaxe_id_092_bling", "pickaxe_id_093_medic", "pickaxe_id_094_football", "pickaxe_id_095_footballtrophy", "pickaxe_id_096_footballreferee", "pickaxe_id_097_raptorarcticcamo", "pickaxe_id_098_garageband", "pickaxe_id_099_modernmilitaryred", "pickaxe_id_100_dieselpunk", "pickaxe_id_101_octoberfest", "pickaxe_id_102_redriding", "pickaxe_id_103_fortnitedj", "pickaxe_id_104_cowgirl", "pickaxe_id_105_scarecrow", "pickaxe_id_106_darkbomber", "pickaxe_id_107_halloweentomato", "pickaxe_id_107_plague", "pickaxe_id_108_pumpkinslice", "pickaxe_id_109_skulltrooper", "pickaxe_id_110_vampire", "pickaxe_id_111_blackwidow", "pickaxe_id_112_guanyu", "pickaxe_id_113_muertos", "pickaxe_id_114_badasscowboycowskull", "pickaxe_id_115_evilcowboy", "pickaxe_id_116_celestial", "pickaxe_id_117_madcommander", "pickaxe_id_118_streetops", "pickaxe_id_119_animaljackets", "pickaxe_id_120_samuraiultraarmor", "pickaxe_id_121_robotred", "pickaxe_id_122_witch", "pickaxe_id_123_hornedmask", "pickaxe_id_124_feathers", "pickaxe_id_125_moth", "pickaxe_id_126_yeti", "pickaxe_id_127_rhino", "pickaxe_id_131_nautilus", "pickaxe_id_131_neoncat", "pickaxe_id_132_arcticsniper", "pickaxe_id_133_demon", "pickaxe_id_133_iceking", "pickaxe_id_134_snowman", "pickaxe_id_135_snowninja", "pickaxe_id_136_math", "pickaxe_id_137_nutcracker", "pickaxe_id_138_gnome", "pickaxe_id_139_gingerbread", "pickaxe_id_140_streetgoth", "pickaxe_id_141_krampus", "pickaxe_id_142_teriyakifish", "pickaxe_id_143_flintlockwinter", "pickaxe_id_144_angel", "pickaxe_id_145_icemaiden", "pickaxe_id_146_militaryfashion", "pickaxe_id_147_techops", "pickaxe_id_148_barbarian", "pickaxe_id_149_wavyman", "pickaxe_id_150_icequeen", "pickaxe_id_151_alienfishhead", "pickaxe_id_152_dragonmask", "pickaxe_id_153_roseleader", "pickaxe_id_154_squishy", "pickaxe_id_155_valentinesfrozen", "pickaxe_id_156_ravenquillfrozen", "pickaxe_id_157_dumpling", "pickaxe_id_158_fuzzybear", "pickaxe_id_159_robottrouble", "pickaxe_id_160_icecream", "pickaxe_id_161_lovellama", "pickaxe_id_162_skullbrite", "pickaxe_id_163_pirateoctopus", "pickaxe_id_164_dragonninja", "pickaxe_id_165_masterkey", "pickaxe_id_166_shiny", "pickaxe_id_167_medusa", "pickaxe_id_168_bandolier", "pickaxe_id_169_farmer", "pickaxe_id_170_aztec", "pickaxe_id_171_orangecamo", "pickaxe_id_172_bandageninja", "pickaxe_id_173_sciops", "pickaxe_id_174_luckyrider", "pickaxe_id_175_tropical", "pickaxe_id_176_devilrock", "pickaxe_id_177_evilsuit", "pickaxe_id_178_speedymidnight", "pickaxe_id_179_starwand", "pickaxe_id_180_tristar", "pickaxe_id_181_log", "pickaxe_id_182_piratewheel", "pickaxe_id_183_baseballbat2018", "pickaxe_id_184_darkshaman", "pickaxe_id_185_badasscowboycactus", "pickaxe_id_186_demonstone", "pickaxe_id_187_furnaceface", "pickaxe_id_188_streetassassin", "pickaxe_id_189_streetopsstealth", "pickaxe_id_190_golfclub", "pickaxe_id_191_banana", "pickaxe_id_192_palmtree", "pickaxe_id_193_hotdog", "pickaxe_id_194_thebomb", "pickaxe_id_195_spacebunny", "pickaxe_id_196_evilbunny", "pickaxe_id_197_hoppityheist", "pickaxe_id_198_bountybunny", "pickaxe_id_199_shinyhammer", "pickaxe_id_200_moonlightassassin", "pickaxe_id_201_swashbuckler", "pickaxe_id_202_ashtonboardwalk", "pickaxe_id_203_ashtonsaltlake", "pickaxe_id_204_miner", "pickaxe_id_205_strawberrypilot", "pickaxe_id_206_strawberrypilot_1h", "pickaxe_id_207_bountyhunter", "pickaxe_id_208_masako", "pickaxe_id_209_battlesuit", "pickaxe_id_210_bunkerman", "pickaxe_id_211_bunkerman_1h", "pickaxe_id_212_cyberscavenger", "pickaxe_id_213_assassinsuitsledgehammer", "pickaxe_id_214_geisha", "pickaxe_id_215_pug", "pickaxe_id_216_demonhunter1h", "pickaxe_id_217_urbanscavenger1h", "pickaxe_id_218_stormsoldier", "pickaxe_id_219_bandageninja1h", "pickaxe_id_220_forkknife1h", "pickaxe_id_221_skullbriteeclipse", "pickaxe_id_222_banner", "pickaxe_id_223_jellyfish", "pickaxe_id_224_butterfly", "pickaxe_id_225_caterpillar", "pickaxe_id_226_cyberfublade", "pickaxe_id_227_femaleglowbro", "pickaxe_id_228_maleglowbro", "pickaxe_id_229_techmage", "pickaxe_id_230_drift1h", "pickaxe_id_231_flamingo2", "pickaxe_id_232_grillin1h", "pickaxe_id_233_birthday2019", "pickaxe_id_234_cyberkarate", "pickaxe_id_235_lasagna", "pickaxe_id_236_multibot1h", "pickaxe_id_237_warpaint", "pickaxe_id_238_bubblegum", "pickaxe_id_239_pizzapitpj1h", "pickaxe_id_240_graffitiremix1h", "pickaxe_id_241_knightremix", "pickaxe_id_242_sparkleremix", "pickaxe_id_243_djremix", "pickaxe_id_244_rustremix1h", "pickaxe_id_245_voyagerremix1h", "pickaxe_id_246_bluebadass1h", "pickaxe_id_247_bonewasp", "pickaxe_id_248_mechpilot", "pickaxe_id_249_squishy1h", "pickaxe_id_250_lopex", "pickaxe_id_251_mascotmilitiaburger", "pickaxe_id_252_mascotmilitiatomato", "pickaxe_id_253_starwalker", "pickaxe_id_254_syko", "pickaxe_id_255_wisemaster", "pickaxe_id_256_techopsblue", "pickaxe_id_257_frostmystery1h", "pickaxe_id_258_rockerpunkcube1h", "pickaxe_id_259_cupidfemale1h", "pickaxe_id_260_angeleclipse1h", "pickaxe_id_261_darkeaglefire1h", "pickaxe_id_262_futurebikerwhite", "pickaxe_id_263_jonesycube", "pickaxe_id_264_lemonlime1h", "pickaxe_id_265_barbequelarry1h", "pickaxe_id_266_paddedarmor", "pickaxe_id_267_raptorblackops", "pickaxe_id_268_toxickitty1h", "pickaxe_id_269_wwiipilotscifi", "pickaxe_id_270_jumpstart", "pickaxe_id_271_punchy", "pickaxe_id_272_sleepytime", "pickaxe_id_273_streetfashionred", "pickaxe_id_274_streeturchin", "pickaxe_id_275_traveler", "pickaxe_id_276_blackmondayfemale1h_1v4he", "pickaxe_id_277_blackmondaymale_5tlsd", "pickaxe_id_278_brightgunnerremix1h", "pickaxe_id_279_malellamaheromilitia", "pickaxe_id_280_mascotmilitiacuddle1h", "pickaxe_id_281_bulletbluefemale", "pickaxe_id_282_codsquadplaidfemale", "pickaxe_id_283_codsquadplaidmale", "pickaxe_id_284_crazyeight1h", "pickaxe_id_285_cuddleteamdark", "pickaxe_id_286_fishermanfemale1h", "pickaxe_id_287_rockclimber1h", "pickaxe_id_288_rebirthmedicfemale", "pickaxe_id_289_redridingremixfemale", "pickaxe_id_290_sheath1h", "pickaxe_id_291_slurpmonster", "pickaxe_id_292_tacticalfisherman1h", "pickaxe_id_293_viper", "pickaxe_id_294_candycane", "pickaxe_id_295_darkdino1h", "pickaxe_id_296_devilrockmale1h", "pickaxe_id_297_flowerskeletonfemale1h", "pickaxe_id_298_freak1h", "pickaxe_id_299_goatrobe", "pickaxe_id_300_mastermind", "pickaxe_id_301_modernwitch", "pickaxe_id_302_tourbus1h", "pickaxe_id_303_nosh", "pickaxe_id_304_noshhunter1h", "pickaxe_id_305_phantom1h", "pickaxe_id_306_punkdevil", "pickaxe_id_307_skeletonhunter", "pickaxe_id_308_spookyneonmale", "pickaxe_id_309_storm", "pickaxe_id_310_submarinermale", "pickaxe_id_311_jetskifemale1h", "pickaxe_id_312_jetskimale1h", "pickaxe_id_313_shiitakeshaolinmale", "pickaxe_id_314_weepingwoodsmale1h", "pickaxe_id_315_banefemale1h", "pickaxe_id_316_bigchuggus", "pickaxe_id_317_bonesnake1h", "pickaxe_id_318_bulletbluemale", "pickaxe_id_319_cavalrybanditfemale1h", "pickaxe_id_320_forestdwellermale", "pickaxe_id_321_forestqueenfemale1h", "pickaxe_id_322_frogmanmale", "pickaxe_id_323_pinktroopermale1h", "pickaxe_id_324_northpole", "pickaxe_id_325_festivepugmale", "pickaxe_id_326_galileoferry1h_f5iua", "pickaxe_id_327_galileokayak_50nfg", "pickaxe_id_328_galileorocket_snc0l", "pickaxe_id_329_gingerbreadcookie1h", "pickaxe_id_330_holidaytimemale", "pickaxe_id_331_kanemale1h", "pickaxe_id_332_mintminer", "pickaxe_id_333_msalpinefemale1h", "pickaxe_id_334_sweaterweathermale", "pickaxe_id_335_tacticalbearmale1h", "pickaxe_id_336_tntinafemale", "pickaxe_id_337_wingedfuryfemale", "pickaxe_id_338_bandageninjablue1h", "pickaxe_id_339_codsquadhoodie", "pickaxe_id_340_dragonracerfemale", "pickaxe_id_341_frogmanfemale1h", "pickaxe_id_342_gummimale1h", "pickaxe_id_343_hoodiebanditfemale", "pickaxe_id_344_martialartistmale", "pickaxe_id_345_modernmilitaryeclipse", "pickaxe_id_346_neongraffiti", "pickaxe_id_348_sharkattackmale", "pickaxe_id_349_streetratmale1h", "pickaxe_id_350_thegoldenskeleton", "pickaxe_id_351_tigerfashionfemale1h", "pickaxe_id_352_virtualshadowmale1h", "pickaxe_id_353_agentace1h", "pickaxe_id_354_agentrogue1h", "pickaxe_id_355_buffcatmale1h", "pickaxe_id_356_candymale", "pickaxe_id_357_catburglarmale", "pickaxe_id_358_cuteduomale", "pickaxe_id_359_cyclonemale", "pickaxe_id_360_desertopscamofemale", "pickaxe_id_361_henchmanmale1h", "pickaxe_id_362_lollipopfemale", "pickaxe_id_363_lollipoptricksterfemale", "pickaxe_id_364_photographerfemale1h", "pickaxe_id_365_spytechhackermale", "pickaxe_id_366_spymale1h", "pickaxe_id_367_winterhunter", "pickaxe_id_368_bananaagent", "pickaxe_id_369_anarchyacresfarmer", "pickaxe_id_370_blueflames", "pickaxe_id_371_pineapplebandit1h", "pickaxe_id_372_streetfashionemeraldfemale1h", "pickaxe_id_373_teriyakifishassassin1h", "pickaxe_id_374_twindarkfemale1h", "pickaxe_id_375_agentxfemale1h", "pickaxe_id_376_fncs", "pickaxe_id_377_spytechfemale1h", "pickaxe_id_378_spytechmale1h", "pickaxe_id_379_tailormale1h", "pickaxe_id_380_targetpracticemale", "pickaxe_id_381_cardboardcrew", "pickaxe_id_382_donut1h", "pickaxe_id_383_handymanmale", "pickaxe_id_384_informermale1h", "pickaxe_id_385_badeggmale", "pickaxe_id_386_cometmale", "pickaxe_id_387_donutcup", "pickaxe_id_388_donutdish1h", "pickaxe_id_389_donutplate1h", "pickaxe_id_390_femalehitman1h", "pickaxe_id_391_graffitiassassinfemale", "pickaxe_id_392_hostile", "pickaxe_id_393_neoncatspyfemale", "pickaxe_id_394_raveninjafemale1h", "pickaxe_id_395_splintermale1h", "pickaxe_id_396_rapvillainessfemale1h", "pickaxe_id_397_techexplorermale1h", "pickaxe_id_398_wildcatfemale", "pickaxe_id_399_loofahfemale1h", "pickaxe_id_400_aquajacketmale", "pickaxe_id_401_beaconmale", "pickaxe_id_402_blackknightfemale1h", "pickaxe_id_403_cavalrybanditshadow1h", "pickaxe_id_404_gatormale", "pickaxe_id_406_hardcoresportzfemale", "pickaxe_id_407_heistshadow", "pickaxe_id_408_mastermindshadow", "pickaxe_id_409_mechanicalengineer1h", "pickaxe_id_410_oceanriderfemale1h", "pickaxe_id_411_partygoldmale", "pickaxe_id_412_professorpupmale1h", "pickaxe_id_413_pythonfemale1h", "pickaxe_id_414_racerzero", "pickaxe_id_415_sandcastlemale", "pickaxe_id_416_spacewandererfemale1h", "pickaxe_id_417_tacticalscubamale1h", "pickaxe_id_418_cupiddarkfemale1h", "pickaxe_id_419_jonesyvagabondmale1h", "pickaxe_id_420_candyapplesour_jxbza", "pickaxe_id_421_candysummerfemale1h", "pickaxe_id_422_golfsummerfemale", "pickaxe_id_423_greenjacketfemale1h", "pickaxe_id_424_heartbreakerfemale1h", "pickaxe_id_425_mswhipfemale1h", "pickaxe_id_426_punkdevilsummerfemale", "pickaxe_id_427_seaweed1h_cz9ha", "pickaxe_id_428_sharksuitmale1h", "pickaxe_id_429_celestialfemale1h", "pickaxe_id_430_dirtydocksfemale", "pickaxe_id_431_dirtydocksmale1h", "pickaxe_id_432_dummeez", "pickaxe_id_433_lawngnome", "pickaxe_id_434_militaryfashionsummermale1h", "pickaxe_id_435_teriyakiatlantismale1h", "pickaxe_id_436_anglerfemale1h", "pickaxe_id_438_antillamafemale", "pickaxe_id_439_axlmale", "pickaxe_id_440_floatillacaptainmale1h", "pickaxe_id_441_islanderfemale", "pickaxe_id_442_ladyatlantisfemale", "pickaxe_id_443_maskeddancermale", "pickaxe_id_444_multibotstealth1h", "pickaxe_id_445_raiderpinkfemale1h", "pickaxe_id_446_seasalt", "pickaxe_id_447_spacewanderermale", "pickaxe_id_448_sportsfashionfemale1h", "pickaxe_id_449_triplescoopfemale", "pickaxe_id_450_valet", "pickaxe_id_451_darkeaglepurple", "pickaxe_id_452_darkninjapurple1h", "pickaxe_id_453_hightowerdate", "pickaxe_id_454_hightowergrapemale1h", "pickaxe_id_455_hightowerhoneydew1h", "pickaxe_id_456_hightowermango1h", "pickaxe_id_457_hightowersquash1h", "pickaxe_id_458_hightowertapas1h", "pickaxe_id_459_hightowertomato1h", "pickaxe_id_460_hightowerwasabi1h", "pickaxe_id_461_skullbritecube", "pickaxe_id_462_soy_4cw52", "pickaxe_id_463_elastic1h", "pickaxe_id_464_longshortsmale", "pickaxe_id_465_backspinmale1h_r40e7", "pickaxe_id_466_cavalryfemale1h", "pickaxe_id_467_cloakedassassinfemale1h_xgc2b", "pickaxe_id_468_kevincouturemale", "pickaxe_id_469_mythfemale", "pickaxe_id_470_mythmale1h", "pickaxe_id_471_streetfashiongarnetfemale", "pickaxe_id_472_teriyakifishprincessfemale", "pickaxe_id_473_vampirecasualfemale", "pickaxe_id_474_blackwidowjacketfemale", "pickaxe_id_475_chonepickaxe", "pickaxe_id_476_darkbombersummerfemale", "pickaxe_id_477_delisandwichmale1h", "pickaxe_id_478_flowerskeletonmale1h", "pickaxe_id_479_lunchbox1h", "pickaxe_id_480_poisonfemale", "pickaxe_id_481_spookyneonfemale1h", "pickaxe_id_482_babayagafemale", "pickaxe_id_483_durrburgerskull1h", "pickaxe_id_484_faminemale", "pickaxe_id_485_frankiefemale1h", "pickaxe_id_486_jekyllmale1h", "pickaxe_id_487_pumpkinpunk", "pickaxe_id_488_pumpkinspice1h", "pickaxe_id_489_pumpkinspicehammer", "pickaxe_id_490_teriyakifishskull1h", "pickaxe_id_491_yorkmale", "pickaxe_id_492_embersmale", "pickaxe_id_493_nauticalpajamasmale", "pickaxe_id_494_nauticalpajamasnightmale1h", "pickaxe_id_495_nauticalpajamasunderwatermale", "pickaxe_id_496_parcelgoldmale1h", "pickaxe_id_497_parcelpetalfemale", "pickaxe_id_498_parcelprankhammermale", "pickaxe_id_499_parcelprankmale", "pickaxe_id_500_tapdancefemale1h", "pickaxe_id_501_eternityfemale", "pickaxe_id_502_piemanmale1h", "pickaxe_id_503_raidersilverfemale", "pickaxe_id_504_vertigomale", "pickaxe_id_505_ancientgladiatormale1h", "pickaxe_id_506_flapjackwranglermale", "pickaxe_id_507_futuresamuraimale1h", "pickaxe_id_508_historianmale_6bqsw", "pickaxe_id_509_iceclaw1h", "pickaxe_id_510_jupitermale_g035v", "pickaxe_id_511_lexafemale1h", "pickaxe_id_512_renegaderaiderholidayfemale", "pickaxe_id_513_shapeshifterfemale1h", "pickaxe_id_514_snowmanfashion", "pickaxe_id_515_spacefighterfemale", "pickaxe_id_516_teriyakifishelf1h", "pickaxe_id_517_cherryfemale_z0s97", "pickaxe_id_518_cupidwinterfemale1h", "pickaxe_id_519_driftwintermale1h", "pickaxe_id_520_fancycandymale1h", "pickaxe_id_521_festivemoose", "pickaxe_id_522_frostbytemale", "pickaxe_id_523_holidaylightsmale", "pickaxe_id_524_neon", "pickaxe_id_525_plumretro1h_3fbv3", "pickaxe_id_526_snowboardermale1h", "pickaxe_id_527_stars", "pickaxe_id_528_streetfashionholidayfemale", "pickaxe_id_529_tiptoemale_mq5um", "pickaxe_id_530_tiramisumale1h_r94f2", "pickaxe_id_531_turkey1h", "pickaxe_id_532_wombatfemale_cwe2d", "pickaxe_id_533_wombatmale_l7qpq", "pickaxe_id_534_combatdollfemale", "pickaxe_id_535_convoytarantulamale_gq82n", "pickaxe_id_538_grilledcheesemale_z7ymw", "pickaxe_id_539_lexamale", "pickaxe_id_540_nightmaremale_7osoh", "pickaxe_id_541_streetfashioneclipsefemale", "pickaxe_id_542_typhoonfemale1h_ctevq", "pickaxe_id_543_typhoonrobotmale_s4b4m", "pickaxe_id_544_foxwarriorfemale_byvm8", "pickaxe_id_545_crushfemale1h", "pickaxe_id_546_mainframemale_xw9s6", "pickaxe_id_547_streetcuddlesmale1h", "pickaxe_id_548_tarmale_8x3by", "pickaxe_id_549_ancientgladiatorfemale", "pickaxe_id_550_casualbomberlightfemale1h", "pickaxe_id_551_keplerfemale_aoyi5", "pickaxe_id_552_llamaherowintermale_s9mdn", "pickaxe_id_553_skirmishfemale_j2jxx", "pickaxe_id_554_skirmishmale_ml78q", "pickaxe_id_555_buildermale", "pickaxe_id_556_catburglarfemale1h", "pickaxe_id_557_lionsoldiermale", "pickaxe_id_558_smallfrymale_ybd34", "pickaxe_id_559_spacewarriormale", "pickaxe_id_560_tacticalwoodlandbluemale", "pickaxe_id_561_assembler", "pickaxe_id_562_bananaleader", "pickaxe_id_563_chickenwarriormale1h", "pickaxe_id_564_cubeninjamale", "pickaxe_id_565_darkminionmale1h", "pickaxe_id_566_dinohunterfemale", "pickaxe_id_567_neoncatfashionfemale_fx9s5", "pickaxe_id_568_obsidianfemale", "pickaxe_id_569_scholarfemale", "pickaxe_id_570_temple", "pickaxe_id_571_towersentinelfemale", "pickaxe_id_572_bunnyfashionfemale", "pickaxe_id_573_hipharemale", "pickaxe_id_574_sailorsquadleaderfemale1h", "pickaxe_id_575_sailorsquadrebelfemale1h", "pickaxe_id_576_sailorsquadrosefemale1h", "pickaxe_id_577_thegoldenskeletonfemale1h_y6vjg", "pickaxe_id_578_wickedduckfemale", "pickaxe_id_579_wickedduckmale1h", "pickaxe_id_580_accumulatemale", "pickaxe_id_581_alchemy_hkas0", "pickaxe_id_585_terrainmanmale", "pickaxe_id_586_armoredengineerfemale", "pickaxe_id_587_bicyclemale", "pickaxe_id_588_buffcatcomicmale_12zad", "pickaxe_id_589_cavernmale_9u0a8", "pickaxe_id_590_craniummale", "pickaxe_id_591_dinocollectorfemale1h", "pickaxe_id_592_durrburgerknightmale", "pickaxe_id_593_raptorknightmale", "pickaxe_id_594_tacoknightfemale", "pickaxe_id_595_tacticalredpunkfemale1h", "pickaxe_id_596_tomatoknightmale1h", "pickaxe_id_597_broccolimale_gmz6w", "pickaxe_id_598_cavemanmale", "pickaxe_id_599_cavernfemale", "pickaxe_id_600_darkelffemale", "pickaxe_id_601_stoneviperfemale", "pickaxe_id_602_taxiupgradedmulticolorfemale", "pickaxe_id_603_assemblel", "pickaxe_id_604_downpourmale_z48cm", "pickaxe_id_605_grimmale_8gt61", "pickaxe_id_606_shrapnelfemale", "pickaxe_id_607_spacecuddlesfemale_0ecba", "pickaxe_id_608_spartanfuturefemale", "pickaxe_id_610_towersentinelmale", "pickaxe_id_611_wastelandwarriorfemale", "pickaxe_id_612_antiquemale", "pickaxe_id_613_believerfemale", "pickaxe_id_614_emperormale", "pickaxe_id_615_fauxmale", "pickaxe_id_616_innovatorfemale", "pickaxe_id_617_invadermale", "pickaxe_id_618_jonesycattlemale", "pickaxe_id_619_rockstar_female", "pickaxe_id_620_ruckus", "pickaxe_id_621_carabusmale", "pickaxe_id_622_catburglarsummermale", "pickaxe_id_623_cavernarmoredmale", "pickaxe_id_624_firecrackermale", "pickaxe_id_625_henchmansummermale", "pickaxe_id_626_jurassicarchaeologysummerfemale", "pickaxe_id_627_linguinimale_2zox0", "pickaxe_id_628_majestymale_514vt", "pickaxe_id_629_mechanicalengineersummerfemale", "pickaxe_id_630_slurpmonstersummermale", "pickaxe_id_631_streetfashionsummerfemale", "pickaxe_id_632_summermarshmallowfemale1h", "pickaxe_id_633_bluecheesemale", "pickaxe_id_634_brightbombermintfemale", "pickaxe_id_635_buffcatfanfemale_j642p", "pickaxe_id_636_dojomale1h", "pickaxe_id_637_golf_male", "pickaxe_id_638_musicianfemale", "pickaxe_id_639_pliantfemale", "pickaxe_id_640_pliantmale", "pickaxe_id_641_thegoldenskeletonmintmale", "pickaxe_id_642_treasurehunterfashionmintfemale", "pickaxe_id_643_aliensummermale", "pickaxe_id_644_buffetfemale_toh8a", "pickaxe_id_645_quarrelfemale_w3b7a", "pickaxe_id_646_quarrelmale_ptobi", "pickaxe_id_647_seesawslippermale1h", "pickaxe_id_648_stereofemale_0dtz9", "pickaxe_id_649_antiquepalmale1h_gbt24", "pickaxe_id_650_celestialglowfemale", "pickaxe_id_651_keyboardmale", "pickaxe_id_652_larsmale", "pickaxe_id_653_lavishmale1h_swkjb", "pickaxe_id_654_maskedwarriorspringmale1h", "pickaxe_id_655_monarchfemale1h", "pickaxe_id_656_ninjawolfmale_7ptdp", "pickaxe_id_657_polygonmale1h", "pickaxe_id_658_polygonmale", "pickaxe_id_659_ruckusmini_o051m", "pickaxe_id_660_tiedyefashionfemale", "pickaxe_id_661_vividmale1h_zn6q0", "pickaxe_id_662_alienfloramale", "pickaxe_id_663_angeldarkfemale1h", "pickaxe_id_664_dragonfruitmale1h_4bixl", "pickaxe_id_665_buffllamamale", "pickaxe_id_666_cerealboxmale", "pickaxe_id_667_clashmale", "pickaxe_id_668_clashvmale1h_5ta18", "pickaxe_id_669_divisionfemale1h", "pickaxe_id_670_fnbirthdaymale_fqk1e", "pickaxe_id_671_ghosthunterfemale1h", "pickaxe_id_672_punkkoifemale1h", "pickaxe_id_673_spacechimpmale", "pickaxe_id_674_teriyakifishtoonmale", "pickaxe_id_675_textilepupmale_96jzf", "pickaxe_id_676_critterfrenzymale_b21oe", "pickaxe_id_677_crittercuddlemale1h", "pickaxe_id_678_psychemale_81rmh", "pickaxe_id_679_renegadeskullfemale", "pickaxe_id_680_tomcatmale_losmx", "pickaxe_id_681_werewolffemale", "pickaxe_id_682_bistroastronautfemale_a3md2", "pickaxe_id_683_crittermaniacmale_s4i63", "pickaxe_id_684_cubequeenfemale", "pickaxe_id_685_disguiseblackfemale", "pickaxe_id_686_drifthorrormale1h", "pickaxe_id_687_gigglemale_ycq4s", "pickaxe_id_688_pinkemofemale", "pickaxe_id_689_ravenquilldesertmale", "pickaxe_id_690_relishfemale_dc74m", "pickaxe_id_691_relishmale_fvca7", "pickaxe_id_692_snowjacketfemale", "pickaxe_id_693_sunrisecastle1h_5xe1u", "pickaxe_id_694_sunrisepalace1h_sdi6m", "pickaxe_id_695_sweetteriyakimale", "pickaxe_id_696_grasshopper_male_24ogh", "pickaxe_id_697_samfemale1h_rv6an", "pickaxe_id_698_supersonicpink_8vm90", "pickaxe_id_699_uproarbraidsfemale_ly5gm", "pickaxe_id_700_zombieelasticfemale1h", "pickaxe_id_701_crazyeighttechmale1h", "pickaxe_id_702_grandeurmale_6uv6l", "pickaxe_id_703_headbandmale1h", "pickaxe_id_704_headbandkmale1h", "pickaxe_id_705_headbandsmale1h", "pickaxe_id_706_headbandstandalonemale", "pickaxe_id_707_neoncattechfemale1h", "pickaxe_id_708_nucleusmale_72w2j", "pickaxe_id_709_peelytechmale", "pickaxe_id_710_assemblekmale", "pickaxe_id_711_darkpitmale", "pickaxe_id_712_exosuitfemale1h", "pickaxe_id_713_gumballmale", "pickaxe_id_714_islandnomadfemale", "pickaxe_id_715_lonewolfmale", "pickaxe_id_716_motorcyclistfemale", "pickaxe_id_717_networkfemale", "pickaxe_id_718_parallelcomicmale", "pickaxe_id_719_rustyboltfemale_0vj7j", "pickaxe_id_720_rustyboltmale_uz5e5", "pickaxe_id_721_rustyboltslicemale_v3a4n", "pickaxe_id_722_turtleneckmale", "pickaxe_id_723_catburglarwintermale", "pickaxe_id_724_innovatorfestivefemale_ex2rm", "pickaxe_id_725_jurassicarchaeologywinterfemale", "pickaxe_id_726_kittywarriormale", "pickaxe_id_727_lateralfemale_d9xjg", "pickaxe_id_728_orbittealmale_3nist", "pickaxe_id_729_peppermintfemale", "pickaxe_id_730_renegaderaidericefemale", "pickaxe_id_731_scholarfestivefemale1h", "pickaxe_id_732_shovelmale", "pickaxe_id_733_slitherfemale_m1ycl", "pickaxe_id_734_slithermale_762k0", "pickaxe_id_735_foemale_2t3kb", "pickaxe_id_736_keenfemale_3lr4c", "pickaxe_id_737_keenmale_07j9u", "pickaxe_id_738_primalfalconfemale_s72bi", "pickaxe_id_739_sharpdresserdarkmale", "pickaxe_id_740_skullpunk_7k48y", "pickaxe_id_741_uproarfemale_ndhs3", "pickaxe_id_742_flowerskeletonlovemale1h", "pickaxe_id_743_lovequeenfemale", "pickaxe_id_744_sleekglassesmale_id69u", "pickaxe_id_745_sleekmale_ecrl0", "pickaxe_id_746_zestfemale_4y9tg", "pickaxe_id_747_zestmale_3kaeg", "pickaxe_id_748_gimmickfemale_2w2m2", "pickaxe_id_749_gimmickmale_5c033", "pickaxe_id_750_peelytoonmale", "pickaxe_id_751_roverfemale_44tg1", "pickaxe_id_752_rovermale_i98vz", "pickaxe_id_753_valentinesfashionfemale_cpgk7", "pickaxe_id_754_weepingwoodstoonmale", "pickaxe_id_755_assemblepmale", "pickaxe_id_756_bizarre", "pickaxe_id_757_blizzardbomberfemale1h", "pickaxe_id_758_jadefemale", "pickaxe_id_759_jetskicrystalfemale1h", "pickaxe_id_760_journeymale", "pickaxe_id_761_leatherjacketpurplefemale", "pickaxe_id_762_lurkfemale", "pickaxe_id_763_thrivefemale", "pickaxe_id_764_thrivespiritfemale", "pickaxe_id_765_bacteriafemale1h", "pickaxe_id_766_binaryfemale", "pickaxe_id_767_cadetfemale", "pickaxe_id_768_cyberarmorfemale", "pickaxe_id_769_journeymentorfemale", "pickaxe_id_770_knightcatfemale", "pickaxe_id_771_littleeggfemale", "pickaxe_id_772_mysticmale", "pickaxe_id_773_orderguardmale", "pickaxe_id_774_siennamale", "pickaxe_id_775_snowfallfemale", "pickaxe_id_776_theoriginmale", "pickaxe_id_777_cactusrockerfemale", "pickaxe_id_778_cactusrockermale", "pickaxe_id_779_vampirehunterfemale1h", "pickaxe_id_780_assassinsledgehammercamo", "pickaxe_id_781_blackbirdmale", "pickaxe_id_782_cactusdancerfemale", "pickaxe_id_783_cactusdancermale", "pickaxe_id_784_croissantmale", "pickaxe_id_785_forsakefemale", "pickaxe_id_787_lyricalfemale", "pickaxe_id_788_lyricalmale", "pickaxe_id_789_mockingbirdfemale", "pickaxe_id_790_nightingalefemale", "pickaxe_id_791_rumblefemale", "pickaxe_id_792_rumblemale", "pickaxe_id_793_binarytwinfemale", "pickaxe_id_794_carbideknightmale", "pickaxe_id_795_darkstormmale1h", "pickaxe_id_796_indigomale", "pickaxe_id_797_neoncatspeedfemale", "pickaxe_id_798_raspberryfemale", "pickaxe_id_799_shinycreaturefemale", "pickaxe_id_800_ultralightfemale", "pickaxe_id_801_alfredomale", "pickaxe_id_802_eternalvanguardfemale", "pickaxe_id_803_flappygreenmale", "pickaxe_id_804_fncss20male", "pickaxe_id_805_glaremale", "pickaxe_id_806_modninjamale1h", "pickaxe_id_807_neongraffitilavafemale", "pickaxe_id_808_noblemale", "pickaxe_id_809_ravenquillparrotfemale", "pickaxe_id_810_rebirthsoldierfreshmale", "pickaxe_id_811_armadillomale", "pickaxe_id_812_bluejayfemale", "pickaxe_id_813_canarymale", "pickaxe_id_814_collectablemale", "pickaxe_id_815_fuchsiafemale", "pickaxe_id_816_lancelotmale", "pickaxe_id_818_pinkwidowfemale", "pickaxe_id_819_realmmale", "pickaxe_id_820_spectaclewebmale", "pickaxe_id_821_ensemblefemale", "pickaxe_id_822_ensemblesnakemale", "pickaxe_id_823_gloomfemale", "pickaxe_id_824_redsleevesmale", "pickaxe_id_825_bariumfemale", "pickaxe_id_826_parfaitfemale", "pickaxe_id_827_raysfemale", "pickaxe_id_828_triflemale", "pickaxe_id_829_desertshadowblademale", "pickaxe_id_830_fruitcakefemale", "pickaxe_id_831_fuzzybearsummerfemale", "pickaxe_id_832_ohanamale", "pickaxe_id_833_punkkoisummerfemale", "pickaxe_id_834_punkkoisummersaifemale", "pickaxe_id_835_spymalefncs1h", "pickaxe_id_836_summerstridefemale", "pickaxe_id_837_summervividdollfemale", "pickaxe_id_838_sunbeamfemale", "pickaxe_id_839_sunstarmale", "pickaxe_id_840_suntidemale", "pickaxe_id_841_apexwildmale", "pickaxe_id_842_chaosfemale", "pickaxe_id_843_desertshadowmale1h", "pickaxe_id_844_fogfemale", "pickaxe_id_845_futuresamuraisummermale", "pickaxe_id_846_staminamale", "pickaxe_id_847_staminamalestandalone", "pickaxe_id_848_wayfarefemale", "pickaxe_id_849_wayfaremale", "pickaxe_id_850_wayfaremaskfemale", "pickaxe_id_851_astralfemale", "pickaxe_id_852_handlebar_female", "pickaxe_id_853_neonjam", "pickaxe_id_854_wildcard", "pickaxe_id_stw001_tier_1", "pickaxe_id_stw002_tier_3", "pickaxe_id_stw003_tier_4", "pickaxe_id_stw004_tier_5", "pickaxe_id_stw005_tier_6", "pickaxe_id_stw006_tier_7", "pickaxe_id_stw007_basic", "pickaxe_id_tbd_cosmosweapon", "pickaxe_id_tbd_crystalshard", "pickaxe_imitator", "pickaxe_impulse", "pickaxe_indiebucket", "pickaxe_inferno", "pickaxe_inflatemate_guitar", "pickaxe_inflatemate_keytar", "pickaxe_inflatemate_mic", "pickaxe_inflatododo", "pickaxe_inkhoop", "pickaxe_inkhoop_bass", "pickaxe_innovatorsand", "pickaxe_insectoid_drum", "pickaxe_insectoid_guitar", "pickaxe_insectoid_keytar", "pickaxe_insectoid_mic", "pickaxe_inspirespell", "pickaxe_instantgravelnoble", "pickaxe_intensecello", "pickaxe_ionvial", "pickaxe_ironblaze", "pickaxe_ironclash", "pickaxe_ironlilac", "pickaxe_ivycross", "pickaxe_jadedhare", "pickaxe_jadetowel_drum", "pickaxe_jadetowel_guitar", "pickaxe_jadetowel_keytar", "pickaxe_jadetowel_mic", "pickaxe_jazzshoes", "pickaxe_jollytroll", "pickaxe_joyfulgrin", "pickaxe_joyfulgrin_mic", "pickaxe_jungle_bass", "pickaxe_jungle_drum", "pickaxe_jungle_guitar", "pickaxe_jungle_keytar", "pickaxe_jungle_mic", "pickaxe_junkpunk_drum", "pickaxe_junkpunk_mic", "pickaxe_kelplinen_keytar", "pickaxe_kelplinenmagnesium", "pickaxe_keytracker", "pickaxe_kintsugi_guitar", "pickaxe_kintsugi_keytar", "pickaxe_kneelens", "pickaxe_knightcatracket", "pickaxe_labvapor", "pickaxe_lacedcrimp", "pickaxe_ladyshinobi", "pickaxe_lasthour", "pickaxe_lastvoicedive", "pickaxe_lastvoicesteel", "pickaxe_lavarock_bass", "pickaxe_lavarock_mic", "pickaxe_lazaruslens", "pickaxe_lazuli", "pickaxe_lazylizz", "pickaxe_leafyvest", "pickaxe_lemoncart_drum", "pickaxe_lemoncart_guitar", "pickaxe_lemoncart_mic", "pickaxe_lemoncartgranite", "pickaxe_lethalvae", "pickaxe_lettuce", "pickaxe_lettucecat", "pickaxe_lexaearlgrey", "pickaxe_liftingaura", "pickaxe_lightningdragon", "pickaxe_lilac", "pickaxe_lilsplit", "pickaxe_lime", "pickaxe_lintmermaid", "pickaxe_liquidmetal_guitar", "pickaxe_liquidmetal_mic", "pickaxe_livelydomino", "pickaxe_liverromaine", "pickaxe_localzilla", "pickaxe_lockjaw", "pickaxe_lockjaw_og", "pickaxe_lonedice", "pickaxe_looper", "pickaxe_lopexsnow", "pickaxe_loudphoenix", "pickaxe_lucidazalea", "pickaxe_lucidvibe", "pickaxe_lunargum", "pickaxe_madamemoth", "pickaxe_magicmeadow", "pickaxe_magicmeadow_reward", "pickaxe_magmabreak", "pickaxe_magneticplotter", "pickaxe_marbleshimmer_keytar", "pickaxe_markerdeer_drum", "pickaxe_markerdeer_tin", "pickaxe_markone_bass", "pickaxe_masterkeyordermale", "pickaxe_mechanicalengineerrev", "pickaxe_mechpilotsharkspeed", "pickaxe_medicrow", "pickaxe_medievalsheath", "pickaxe_meekcrow", "pickaxe_megatoof", "pickaxe_melodyurchin", "pickaxe_mercurialstorm", "pickaxe_metalscout", "pickaxe_metalscoutglare", "pickaxe_meteorwomen_alt", "pickaxe_metropunk", "pickaxe_middlesock", "pickaxe_middlesock_guitar", "pickaxe_militaryfashion_brigade", "pickaxe_millionairecowgirl", "pickaxe_millionairegem", "pickaxe_millionairetuna", "pickaxe_mindpinch", "pickaxe_minionblossom", "pickaxe_miragehike", "pickaxe_missusmind", "pickaxe_mistmylar", "pickaxe_mistraven", "pickaxe_mistresssombre", "pickaxe_mochi", "pickaxe_mochiwoof", "pickaxe_moleacorngloam", "pickaxe_moleacornpecan", "pickaxe_mollykit", "pickaxe_moonsatellite", "pickaxe_moonshock", "pickaxe_mooseporch", "pickaxe_moralkore", "pickaxe_motormonth", "pickaxe_motormonth_keytar", "pickaxe_mouse", "pickaxe_muffinladle_guitar", "pickaxe_muffinladlegaschin", "pickaxe_mummy", "pickaxe_musicplayer_keytar", "pickaxe_musketslinger", "pickaxe_mustardtoast", "pickaxe_mustardtoast_guitar", "pickaxe_mutedsheath", "pickaxe_muteribbon", "pickaxe_nana_guitar", "pickaxe_nanochain", "pickaxe_nebula", "pickaxe_nefariousjewel", "pickaxe_neon_bass", "pickaxe_neonglow", "pickaxe_neontubes_guitar", "pickaxe_neontubes_keytar", "pickaxe_neontubes_mic", "pickaxe_newschool_mic", "pickaxe_nighthawk", "pickaxe_nigirininja", "pickaxe_ninjawarrior", "pickaxe_nitroflow", "pickaxe_noisefncs", "pickaxe_noiseless", "pickaxe_novelguard", "pickaxe_nox", "pickaxe_nutmegmayo", "pickaxe_oatmealspreadactive", "pickaxe_oatmealspreadgolem", "pickaxe_oceanbreeze", "pickaxe_oldschool_mic", "pickaxe_olivestomp", "pickaxe_olivestomp_guitar", "pickaxe_omelettepop", "pickaxe_openended", "pickaxe_orb_drum", "pickaxe_orinchai", "pickaxe_outergarment", "pickaxe_outershell_guitar", "pickaxe_oysterknock", "pickaxe_pagetruffle", "pickaxe_paintsplash_bass", "pickaxe_palmtree", "pickaxe_paper", "pickaxe_parrotpen", "pickaxe_partyjelly", "pickaxe_pastasauce_bass", "pickaxe_pastasauce_guitar", "pickaxe_pastasauce_keytar", "pickaxe_pastasauce_mic", "pickaxe_pastelglaze_mic", "pickaxe_patches", "pickaxe_patronpoppet", "pickaxe_pawjasminegravity", "pickaxe_pawjasminesword", "pickaxe_pcb_bass", "pickaxe_pcb_drum", "pickaxe_pcb_guitar", "pickaxe_pcb_keytar", "pickaxe_pcb_mic", "pickaxe_peacefulpoem", "pickaxe_peacefulpoem_bass", "pickaxe_peacefulpoem_pumped_guitar", "pickaxe_peacefulpoempumped", "pickaxe_pearltote", "pickaxe_peelytoonspring", "pickaxe_pencilcherry", "pickaxe_peonybellow", "pickaxe_persimmonsmoke", "pickaxe_phonecharger_keytar", "pickaxe_phonecharger_mic", "pickaxe_photographer_holiday_female", "pickaxe_pillowmill", "pickaxe_pinkjet", "pickaxe_pinkspike", "pickaxe_pinktrooper", "pickaxe_pinktrooper_clobber", "pickaxe_pinktrooperbarren", "pickaxe_pipershelf", "pickaxe_pirouetteweld", "pickaxe_piteouskicks", "pickaxe_pitglass", "pickaxe_pizzaparty", "pickaxe_plaidcarbon", "pickaxe_plantstand", "pickaxe_plasticfork_guitar", "pickaxe_plasticgradient_drum", "pickaxe_plasticgradient_guitar", "pickaxe_plasticgradient_keytar", "pickaxe_plasticgradient_mic", "pickaxe_platypusbranch", "pickaxe_plottwist", "pickaxe_plumedstare", "pickaxe_pocketscrunchie", "pickaxe_pocketscrunchie_guitar", "pickaxe_pointsmoke", "pickaxe_pointwoof", "pickaxe_pointytemper", "pickaxe_polaritywinn", "pickaxe_polishedjade", "pickaxe_poolswirl", "pickaxe_popbucket", "pickaxe_possession", "pickaxe_potterywheel", "pickaxe_powerfarmer", "pickaxe_powerfluff", "pickaxe_powerfuldozen", "pickaxe_powerfuldozen_bass", "pickaxe_prairieskip", "pickaxe_preciseruffian", "pickaxe_precisionmongoose", "pickaxe_preppyberet", "pickaxe_pressureghoul", "pickaxe_prickquill", "pickaxe_prismparticle", "pickaxe_privatejet", "pickaxe_prodigyfire", "pickaxe_prodigyhaughty", "pickaxe_prodigysage", "pickaxe_psychicaphid", "pickaxe_puffinsmile", "pickaxe_punkdevilvibe", "pickaxe_puzzleshed", "pickaxe_qualitycreek", "pickaxe_qualitycreek_keytar", "pickaxe_quartz", "pickaxe_quickburst", "pickaxe_quietpeanuts", "pickaxe_quietpeanuts_guitar", "pickaxe_radiantmove", "pickaxe_radiumfox", "pickaxe_ragedebris", "pickaxe_raggedrebel", "pickaxe_raiderpinksherbert", "pickaxe_rainbowstraps", "pickaxe_rainfncs", "pickaxe_random", "pickaxe_rankedaurum", "pickaxe_rankeddefender", "pickaxe_rankedfaction", "pickaxe_rankedfirth", "pickaxe_rankedfury", "pickaxe_rankedhalt", "pickaxe_rankedhero", "pickaxe_rankedolympus", "pickaxe_rankedpantheon", "pickaxe_rankedrube", "pickaxe_rankedscythe", "pickaxe_rankedspeeder", "pickaxe_rankedtrooper", "pickaxe_rebelclaw", "pickaxe_recordscratch", "pickaxe_redpepper", "pickaxe_relaystick", "pickaxe_relaystick_guitar", "pickaxe_relaystick_keytar", "pickaxe_remotecontrol", "pickaxe_renegaderaider_spark", "pickaxe_renegadewhip", "pickaxe_reptilianocean", "pickaxe_reptilianocean_mic", "pickaxe_retrowheels", "pickaxe_rezzpickaxe", "pickaxe_rhombcamo", "pickaxe_rippedharvester", "pickaxe_rogueninja", "pickaxe_rollerblade", "pickaxe_roostermeltmouse", "pickaxe_rosedepth", "pickaxe_rosedust", "pickaxe_roseform", "pickaxe_roundend_guitar", "pickaxe_roundthumb", "pickaxe_royalangst", "pickaxe_royaldusk", "pickaxe_ruins", "pickaxe_rushrustle", "pickaxe_sacredcuddle", "pickaxe_safarignome", "pickaxe_saharamale", "pickaxe_sailorsquadleaderkoi1h", "pickaxe_saladdressing", "pickaxe_samerabbit", "pickaxe_samuraibluelight", "pickaxe_sandalsite", "pickaxe_sandalsite_guitar", "pickaxe_satincheddar", "pickaxe_scalybutcher", "pickaxe_scareybeary", "pickaxe_scarletbionic", "pickaxe_scorpionzero", "pickaxe_scraptunnel", "pickaxe_scubadasher", "pickaxe_scuffle", "pickaxe_scythe_gold", "pickaxe_seaflake", "pickaxe_searedscurf", "pickaxe_selenecobra", "pickaxe_sequinpie", "pickaxe_serpentcoil", "pickaxe_sesameseed", "pickaxe_sewmesa", "pickaxe_shakecrunch_guitar", "pickaxe_sharkfinswing", "pickaxe_sharkfry", "pickaxe_sharpfang", "pickaxe_sharpmagnet", "pickaxe_sharpsilver", "pickaxe_sherwolf", "pickaxe_shiitakeshaolin_rouge", "pickaxe_shinystar", "pickaxe_shirttilapia", "pickaxe_shiverflame", "pickaxe_shrimpstroll", "pickaxe_shrimpstroll_guitar", "pickaxe_silencer", "pickaxe_silenttempo", "pickaxe_silverbellwind", "pickaxe_silverbullet", "pickaxe_sirwolf", "pickaxe_skeleprobe", "pickaxe_skeletonhunterfncs", "pickaxe_skilledruby", "pickaxe_skippingclouds", "pickaxe_skullbritedot", "pickaxe_skullpunkblade", "pickaxe_sleekrivet", "pickaxe_slicedbread", "pickaxe_slicevine", "pickaxe_slimytune", "pickaxe_slowburn", "pickaxe_smarthyena", "pickaxe_smokeyalias", "pickaxe_smoothbeanie", "pickaxe_smoothsuede", "pickaxe_snailaisle", "pickaxe_snakecrest", "pickaxe_snapfreeze", "pickaxe_snowknight", "pickaxe_snowninjadark", "pickaxe_snowsoldierfashion", "pickaxe_soappocket", "pickaxe_sodamug", "pickaxe_softserve_mic", "pickaxe_soilblend", "pickaxe_solartheory", "pickaxe_solidmist", "pickaxe_soupgoal", "pickaxe_sourwire_bass", "pickaxe_spaceage_drum", "pickaxe_spacefeline", "pickaxe_sparkarcher", "pickaxe_sparklechop", "pickaxe_sparrow", "pickaxe_spatialtravel", "pickaxe_speakerbox", "pickaxe_speeddial", "pickaxe_speeddial_bass", "pickaxe_speeddial_guitar", "pickaxe_speeddial_keytar", "pickaxe_speeddial_mic", "pickaxe_speedypeas", "pickaxe_sphericaldefense", "pickaxe_spikesaw_keytar", "pickaxe_spookyneonblue", "pickaxe_spookyneonorange", "pickaxe_spookyneonred", "pickaxe_springbreak", "pickaxe_springbreak_keytar", "pickaxe_springbreakstraw", "pickaxe_sprocketpoppy_boat", "pickaxe_sprocketpoppy_boatcircus", "pickaxe_spymale_fncs_22", "pickaxe_spymalefncs", "pickaxe_squidglisten_lift", "pickaxe_stagecue", "pickaxe_stallionaviator", "pickaxe_stallionsmoke", "pickaxe_starstray", "pickaxe_starwandfncs", "pickaxe_staticshades", "pickaxe_steammarauder", "pickaxe_steampower", "pickaxe_steelstomper", "pickaxe_steelygrin", "pickaxe_steelykendama", "pickaxe_stonelion", "pickaxe_stormaviator", "pickaxe_stormyearn", "pickaxe_strategicspur", "pickaxe_strikinglybright", "pickaxe_strontiumspark", "pickaxe_studybench", "pickaxe_stunningmountain", "pickaxe_stunningmountain_guitar", "pickaxe_stylusfluff", "pickaxe_sugarbubble", "pickaxe_summertide", "pickaxe_sunbeamquest", "pickaxe_sunburstalt", "pickaxe_sunlit", "pickaxe_sunnysquawk", "pickaxe_sunshine", "pickaxe_supernovataro", "pickaxe_surebamboo", "pickaxe_surfsup_bass", "pickaxe_surfsup_guitar", "pickaxe_sweetcuddle", "pickaxe_sweetletter", "pickaxe_sweetletter_guitar", "pickaxe_swisskale", "pickaxe_synthcontact", "pickaxe_tacticalonyx", "pickaxe_tacticalprince", "pickaxe_tactickale", "pickaxe_talonhime", "pickaxe_tattoon", "pickaxe_taxiupgraded_vista", "pickaxe_tealmink", "pickaxe_tech_guitar", "pickaxe_technoawaken", "pickaxe_techspeeder", "pickaxe_tennisleash", "pickaxe_theherald", "pickaxe_thickwatch", "pickaxe_thornededen", "pickaxe_tideking", "pickaxe_tigerrootfame", "pickaxe_tigerroothype", "pickaxe_tikitorch", "pickaxe_tiltedparrot", "pickaxe_timeinterval", "pickaxe_timesquare_drum", "pickaxe_timesquare_guitar", "pickaxe_tireswing", "pickaxe_titanium", "pickaxe_toadleaf", "pickaxe_tofuresort", "pickaxe_tollbridge", "pickaxe_topbend_bass", "pickaxe_totalflock", "pickaxe_toughpack", "pickaxe_toxic_keytar", "pickaxe_toxicstorm", "pickaxe_tracepaper", "pickaxe_tractorfair", "pickaxe_traffichat", "pickaxe_treasurehunter_brigade", "pickaxe_trickydino", "pickaxe_troops", "pickaxe_troublemaker", "pickaxe_troutwrist", "pickaxe_truckscale", "pickaxe_tuckbeetle_drum", "pickaxe_tungstan", "pickaxe_twicebaked", "pickaxe_twilightspotspell", "pickaxe_twinklebot", "pickaxe_underground_drum", "pickaxe_undergroundrebel", "pickaxe_unluckyroll", "pickaxe_upbeatiguana", "pickaxe_urchinquota_guitar", "pickaxe_vacation_bass", "pickaxe_vacation_drum", "pickaxe_vacation_guitar", "pickaxe_vacation_keytar", "pickaxe_vacation_mic", "pickaxe_vampirehunter_galaxy", "pickaxe_vanceguard", "pickaxe_vectorspark", "pickaxe_veiled", "pickaxe_velvetdeskcam", "pickaxe_velvetdeskfiber", "pickaxe_venice", "pickaxe_villainessvault", "pickaxe_violetfare", "pickaxe_virtuous", "pickaxe_vitalinventor", "pickaxe_vitalinventorblock", "pickaxe_vitalpsych", "pickaxe_voidredemption", "pickaxe_voltaichuntress", "pickaxe_wafer_keytar", "pickaxe_warmshadewagon", "pickaxe_warmshadeweasel", "pickaxe_wartybrine", "pickaxe_watermolecules", "pickaxe_wavetrail", "pickaxe_waywardrebel", "pickaxe_waywardrebelfncs", "pickaxe_wealthlambfate", "pickaxe_weaveharbor", "pickaxe_wideplane", "pickaxe_wideplane_drum", "pickaxe_wideplane_guitar", "pickaxe_wideplane_keytar", "pickaxe_wingbath", "pickaxe_wingedmedieval", "pickaxe_winterfest1", "pickaxe_winterfest_bass", "pickaxe_winterfest_guitar", "pickaxe_winterhunterfncs", "pickaxe_wired_bass", "pickaxe_wormchalk", "pickaxe_wrench_bass", "pickaxe_yampowder", "pickaxe_yogapatio", "pickaxe_zebrascramble_bacon", "pickaxe_zirconsweep", "sicklebatpickaxe", "skiicepickaxe", "spikypickaxe"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "glider[]": {
                    readonly title: "Glider";
                    readonly type: "array";
                    readonly description: "Gliders.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["defaultglider", "defaultgliderdownloading", "dev_testasset", "duo_umbrella", "dynamicstestglider", "founderglider", "founderumbrella", "glider_354_binaryfemale", "glider_abstractmirror", "glider_agentsherbert", "glider_anglepatch", "glider_apprentice", "glider_arcticiceblue", "glider_arcticicetalus", "glider_auracop", "glider_badbear", "glider_bariumreboot32", "glider_bengalbasher", "glider_bentbaton", "glider_birdnest", "glider_bites", "glider_blondejaw", "glider_blowwire", "glider_bold", "glider_bonemarrow", "glider_boomshot", "glider_bravebuild", "glider_brawnybass", "glider_broomstick", "glider_buffcatcruise", "glider_burntbagel", "glider_candor", "glider_carbideweld", "glider_casinoreaper", "glider_ceremonialguard", "glider_chainmail", "glider_chillcat", "glider_cindermax", "glider_cirrusvine", "glider_citadel", "glider_clawpadhost", "glider_cleveredge", "glider_clinchmetal", "glider_coatcheck", "glider_coconutshell", "glider_corestreet", "glider_coyotetrail", "glider_crisprover", "glider_cubicvice", "glider_cyberfuglitch", "glider_darkstance", "glider_dazzle", "glider_default_jolly", "glider_diamondheart", "glider_distantechopro", "glider_donkeycrib", "glider_doubleduty", "glider_driedsilk", "glider_ebony", "glider_elevate", "glider_ethicalnoggin", "glider_flakesled", "glider_flames", "glider_flowerpower", "glider_forwardlakedire", "glider_galaxylevel", "glider_gatehound", "glider_genius", "glider_geniusblob", "glider_goldcat", "glider_gourdriddance", "glider_graffititon", "glider_headset", "glider_herbhutch", "glider_highbeam", "glider_hornedjudgment", "glider_hydratrumpetcoach", "glider_id_001", "glider_id_001_og", "glider_id_002_medieval", "glider_id_003_district", "glider_id_004_disco", "glider_id_005_holidaysweater", "glider_id_006_wintercamo", "glider_id_007_turtleshell", "glider_id_008_graffiti", "glider_id_009_candycoat", "glider_id_010_storm", "glider_id_011_jollyroger", "glider_id_012_teddybear", "glider_id_013_psblue", "glider_id_014_dragon", "glider_id_015_brite", "glider_id_016_tactical", "glider_id_017_assassin", "glider_id_018_twitch", "glider_id_019_taxi", "glider_id_020_fighter", "glider_id_021_scavenger", "glider_id_022_rockerpunk", "glider_id_023_cuchulainn", "glider_id_024_reaper", "glider_id_025_shuttlea", "glider_id_026_shuttleb", "glider_id_027_satelite", "glider_id_028_googly", "glider_id_029_pajamaparty", "glider_id_030_circuitbreaker", "glider_id_031_metal", "glider_id_032_tacticalwoodland", "glider_id_033_valor", "glider_id_034_carbideblue", "glider_id_035_candy", "glider_id_036_auroraglow", "glider_id_037_hazmat", "glider_id_038_deco", "glider_id_039_venus", "glider_id_040_jailbird", "glider_id_041_basketball", "glider_id_042_soccer", "glider_id_043_darkninja", "glider_id_044_pterodactyl", "glider_id_045_carbideblack", "glider_id_046_gumshoe", "glider_id_047_speedyred", "glider_id_048_viking", "glider_id_049_lifeguard", "glider_id_050_streetracercobra", "glider_id_051_luchador", "glider_id_052_bedazzled", "glider_id_053_huya", "glider_id_054_douyu", "glider_id_055_streetracerblack", "glider_id_056_carbidewhite", "glider_id_057_modernmilitary", "glider_id_058_shark", "glider_id_059_durrburgerhero", "glider_id_060_exercise", "glider_id_061_streetracerbiker", "glider_id_062_streetracerwhite", "glider_id_063_sushichef", "glider_id_064_biker", "glider_id_065_hippie", "glider_id_066_samuraiblue", "glider_id_067_psburnout", "glider_id_068_garageband", "glider_id_069_hacivat", "glider_id_070_darkviking", "glider_id_071_football", "glider_id_072_bling", "glider_id_073_medic", "glider_id_074_raptorarcticcamo", "glider_id_075_modernmilitaryred", "glider_id_076_dieselpunk", "glider_id_077_octoberfest", "glider_id_078_vampire", "glider_id_079_redriding", "glider_id_080_prairiepusher", "glider_id_081_cowboygunslinger", "glider_id_082_scarecrow", "glider_id_083_darkbomber", "glider_id_084_plague", "glider_id_085_skulltrooper", "glider_id_086_blackwidow", "glider_id_087_guanyu", "glider_id_088_evilcowboy", "glider_id_089_muertos", "glider_id_090_celestial", "glider_id_091_madcommander", "glider_id_092_streetops", "glider_id_093_animaljackets", "glider_id_094_samuraiultra", "glider_id_095_witch", "glider_id_096_hornedmask", "glider_id_097_feathers", "glider_id_098_sup", "glider_id_099_moth", "glider_id_100_yeti", "glider_id_101_tacticalsanta", "glider_id_102_rhino", "glider_id_103_nautilus", "glider_id_104_durrburger", "glider_id_104_fuzzybear", "glider_id_104_math", "glider_id_105_gingerbread", "glider_id_105_snowboard", "glider_id_106_fortnitedj", "glider_id_107_icemaiden", "glider_id_108_krampus", "glider_id_109_streetgoth", "glider_id_110_teriyakifish", "glider_id_111_militaryfashion", "glider_id_112_techops", "glider_id_113_barbarian", "glider_id_114_icequeen", "glider_id_115_snowninja", "glider_id_116_pizzapit", "glider_id_117_warpaint", "glider_id_118_squishy", "glider_id_119_reaperfrozen", "glider_id_120_icecream", "glider_id_121_britebomberdeluxe", "glider_id_122_valentines", "glider_id_123_masterkey", "glider_id_124_medusa", "glider_id_125_bandolier", "glider_id_126_farmer", "glider_id_127_aztec", "glider_id_128_bootybuoy", "glider_id_129_fireelf", "glider_id_130_sciops", "glider_id_131_speedymidnight", "glider_id_132_pirate01octopus", "glider_id_133_bandageninja", "glider_id_134_darkvikingfire", "glider_id_135_baseball", "glider_id_136_bullseye", "glider_id_137_streetopsstealth", "glider_id_138_bomberplane", "glider_id_139_earthday", "glider_id_140_shatterfly", "glider_id_141_ashtonboardwalk", "glider_id_142_ashtonsaltlake", "glider_id_143_battlesuit", "glider_id_144_strawberrypilot", "glider_id_145_stormtracker", "glider_id_146_masako", "glider_id_147_raptor", "glider_id_148_cyberscavenger", "glider_id_149_geisha", "glider_id_150_techopsblue", "glider_id_151_stormsoldier", "glider_id_152_demonhunter", "glider_id_153_banner", "glider_id_154_glowbrobat", "glider_id_155_jellyfish", "glider_id_156_summerbomber", "glider_id_157_drift", "glider_id_158_hairy", "glider_id_159_techmage", "glider_id_160_anarchy", "glider_id_161_roseleader", "glider_id_162_bonewasp", "glider_id_163_djremix", "glider_id_164_graffitiremix", "glider_id_165_knightremix", "glider_id_166_rustlordremix", "glider_id_167_sparkleremix", "glider_id_168_streetracerdriftremix", "glider_id_169_voyagerremix", "glider_id_171_devilrock", "glider_id_172_raptorblackops", "glider_id_173_tacticalbiker", "glider_id_174_sleepytime", "glider_id_175_streetfashionred", "glider_id_176_blackmondaycape_4p79k", "glider_id_176_blackmondaycape_grapplerasset", "glider_id_177_blackmondayfemale_ho3a9", "glider_id_178_blackmondaymale_03m3e", "glider_id_179_crazyeight", "glider_id_180_neongraffiti", "glider_id_181_rockclimber", "glider_id_182_sheath", "glider_id_183_tacticalfisherman", "glider_id_184_viper", "glider_id_185_nosh", "glider_id_186_galileoferry_48l4v", "glider_id_187_galileokayak_q8thv", "glider_id_188_galileorocket_g7oki", "glider_id_189_galileozeppelinfemale_353ic", "glider_id_190_newyears", "glider_id_191_pinetree", "glider_id_192_present", "glider_id_193_thegoldenskeleton", "glider_id_194_agent", "glider_id_195_buffcatmale", "glider_id_196_cyclonemale", "glider_id_197_henchmanmale", "glider_id_198_kaboom", "glider_id_199_llamahero", "glider_id_200_photographerfemale", "glider_id_201_tntinafemale", "glider_id_202_bananaagent", "glider_id_203_twindarkfemale", "glider_id_204_cardboardcrew", "glider_id_205_desertopscamo", "glider_id_206_donut", "glider_id_207_informermale", "glider_id_208_badeggmale", "glider_id_209_donutplate", "glider_id_210_graffitiassassinfemale", "glider_id_211_wildcatblue", "glider_id_212_aquajacketmale", "glider_id_213_blackknightfemale", "glider_id_214_garbageisland", "glider_id_216_hardcoresportz", "glider_id_217_longshortsmale", "glider_id_218_mechanicalengineerfemale", "glider_id_219_oceanriderfemale", "glider_id_220_professorpup", "glider_id_221_pythonfemale", "glider_id_222_racerzeromale", "glider_id_223_spacesuit", "glider_id_224_spacewandererfemale", "glider_id_225_tacticalscubamale", "glider_id_226_greenjacketfemale", "glider_id_227_sharksuit", "glider_id_228_celestialfemale", "glider_id_229_angler", "glider_id_230_neongreen", "glider_id_231_spacewanderermale", "glider_id_232_hightowerdate", "glider_id_233_hightowerdefault", "glider_id_234_hightowergrape", "glider_id_235_hightowersquashfemale", "glider_id_236_hightowertapasmale", "glider_id_237_hightowertomato", "glider_id_238_soy_rwo5d", "glider_id_240_maverick", "glider_id_241_backspinmale_97lm4", "glider_id_242_kevincouture", "glider_id_243_myth", "glider_id_244_choneglider", "glider_id_245_delisandwich", "glider_id_246_babayaga", "glider_id_247_skull", "glider_id_248_york", "glider_id_249_nexuswar", "glider_id_250_embersmale", "glider_id_251_tapdancefemale", "glider_id_252_piemanmale", "glider_id_253_arcticcamowoodsfemale", "glider_id_254_cosmosmale", "glider_id_255_flapjackwranglermale", "glider_id_256_futuresamuraimale", "glider_id_257_historian_vs0bj", "glider_id_258_jupitermale_lb0te", "glider_id_259_lexafemale", "glider_id_260_shapeshifterfemale", "glider_id_261_spacefighterfemale", "glider_id_262_cherry_y3giu", "glider_id_263_fancycandymale", "glider_id_264_festivegold", "glider_id_265_holidaylights", "glider_id_266_neon", "glider_id_267_plumretro_r2cye", "glider_id_268_snowglobemint", "glider_id_269_stars", "glider_id_271_combatdoll", "glider_id_272_streetfashioneclipsefemale", "glider_id_273_mainframemale_p06w7", "glider_id_274_dragonracerblue", "glider_id_275_ancientgladiatormale", "glider_id_276_kepler_beuup", "glider_id_277_skirmish_9kk2w", "glider_id_278_spacewarriormale", "glider_id_279_chickenwarriormale", "glider_id_280_cubeninjamale", "glider_id_281_darkminionmale", "glider_id_282_dinohunterfemale", "glider_id_283_obsidianfemale", "glider_id_284_templefemale", "glider_id_285_towersentinelfemale", "glider_id_286_accumulatemale", "glider_id_287_alchemy_w87kl", "glider_id_288_bicyclemale", "glider_id_289_cavernmale_5i9rd", "glider_id_291_taxiupgradedmulticolorfemale", "glider_id_292_grimmale", "glider_id_293_antiquemale", "glider_id_294_believerfemale", "glider_id_295_emperormale", "glider_id_296_innovatorfemale", "glider_id_297_invadermale", "glider_id_298_ruckusmale", "glider_id_299_cavernarmoredmale", "glider_id_300_firecrackermale", "glider_id_301_linguinimale_ip674", "glider_id_302_majestymale_t1icf", "glider_id_303_surfingsummerfemale", "glider_id_304_buffetfemale_aof61", "glider_id_305_quarrelmale_zthtq", "glider_id_306_stereofemale_0zzcf", "glider_id_307_monarchfemale", "glider_id_308_vividmale_h8jas", "glider_id_309_tacticalwoodlandblue", "glider_id_310_buffllamamale", "glider_id_311_cerealboxmale", "glider_id_312_clashmale", "glider_id_313_divisionfemale", "glider_id_314_spacechimpmale", "glider_id_315_teriyakifishtoon", "glider_id_316_textilemale_3s90r", "glider_id_317_vertigomale_e3f81", "glider_id_318_wombat_1mqmn", "glider_id_319_bistroastronautfemale_a4839", "glider_id_320_critterravenmale", "glider_id_321_cubequeenfemale", "glider_id_322_drifthorrormale", "glider_id_323_gigglemale_xadt7", "glider_id_324_sunrisecastlemale_2r4q3", "glider_id_325_grandeurmale_es8i4", "glider_id_326_headbandmale", "glider_id_327_nucleusmale_55hfk", "glider_id_328_exosuitfemale", "glider_id_329_gumballmale", "glider_id_330_lonewolfmale", "glider_id_331_motorcyclistfemale", "glider_id_332_parallelcomicmale", "glider_id_333_rustybolt_13ixr", "glider_id_334_darkicemale", "glider_id_335_logarithm_40qgl", "glider_id_336_orbittealmale_vcpm0", "glider_id_337_peppermintmale", "glider_id_338_snowboardmale", "glider_id_339_snowboardgoldmale", "glider_id_340_twentytwomale", "glider_id_341_foemale_p8je8", "glider_id_343_keenmale_97p8m", "glider_id_344_primalfalconfemale_bqkq3", "glider_id_345_turtleneckmale", "glider_id_346_galacticfemale_lxrl3", "glider_id_347_peachmale", "glider_id_348_gimmickfemale_d76z0", "glider_id_349_gimmickmale_mc92o", "glider_id_350_rovermale_41xkf", "glider_id_351_toonplanemale", "glider_id_352_thrivefemale", "glider_id_353_thrivespiritfemale", "glider_id_355_cadetfemale", "glider_id_356_cyberarmorfemale", "glider_id_357_journeyfemale", "glider_id_358_knightcatfemale", "glider_id_359_militaryfashioncamo", "glider_id_360_mysticmale", "glider_id_361_orderguardmale", "glider_id_362_siennamale", "glider_id_363_snowfallfemale", "glider_id_364_lyricalfemale", "glider_id_365_rumblefemale", "glider_id_366_multibotpinkmale", "glider_id_367_alfredomale", "glider_id_368_noblemale", "glider_id_369_collectablemale", "glider_id_369_rebirthsoldierfreshmale", "glider_id_370_fuchsiafemale", "glider_id_371_lancelotmale", "glider_id_373_pinkwidowfemale", "glider_id_374_realmmale", "glider_id_375_darkstormyellow", "glider_id_376_chiselmale", "glider_id_377_ensemblemaroonmale", "glider_id_378_ensemblesnakemale", "glider_id_379_gloomfemale", "glider_id_380_bariumfemale", "glider_id_381_canarymale", "glider_id_382_parfaitfemale", "glider_id_383_triflemale", "glider_id_384_markiicompete", "glider_id_385_staminamale", "glider_id_386_staminamalestandalone", "glider_id_387_staminavigormale", "glider_id_388_wayfare", "glider_id_389_blizzardbomberfemale", "glider_id_juno_battlebus", "glider_id_juno_default", "glider_id_juno_t0", "glider_impactevent", "glider_indiebucket", "glider_inferno", "glider_inflatododo", "glider_instantgravel", "glider_ironblaze", "glider_jailbirdsoar", "glider_jellyfishbarren", "glider_jollytroll", "glider_lastvoicedive", "glider_lazaruslens", "glider_lazuli", "glider_lazylizz", "glider_lemoncartgranite", "glider_lettuce", "glider_liftingaura", "glider_lilsplit", "glider_localzilla", "glider_localzillanight", "glider_magicmeadow", "glider_markerdeer_tin", "glider_medicrow", "glider_medievalsheath", "glider_megatoof", "glider_meteorwomen_alt", "glider_middlesock", "glider_mig", "glider_military", "glider_missusmind", "glider_mistmylar", "glider_mistraven", "glider_modernmilitary_crisp", "glider_mooseporch", "glider_muffinladlegaschin", "glider_musketslinger", "glider_nebula", "glider_nighthawk", "glider_nitroflow", "glider_olivestomp", "glider_oysterknock", "glider_oysterknockuniversal", "glider_peacefulpoemremix", "glider_pillowmill", "glider_pilonfncs", "glider_pinkspike", "glider_pipershelf", "glider_pizzaparty", "glider_plaguewaste", "glider_plantstand", "glider_plottwist", "glider_polaritywinn", "glider_polishedjade", "glider_powerfarmer", "glider_prairieskip", "glider_prismatic", "glider_privatejet", "glider_proxytest", "glider_puzzleshed", "glider_quartz", "glider_quickburst", "glider_radiumfox", "glider_random", "glider_rankedfirth", "glider_rankedremixasparagus", "glider_rebelclaw", "glider_redpepper", "glider_rippedharvester", "glider_roadtrip", "glider_rosedepth", "glider_rosedust", "glider_roundthumb", "glider_royalangst", "glider_rushrustle", "glider_rustyraider_spark", "glider_sacredcuddle", "glider_safecrackersleek", "glider_salinecabinet_grape", "glider_scorpionzero", "glider_scribble", "glider_selenecobra", "glider_shark_fncs", "glider_sherwolf", "glider_silenttempo", "glider_skullbrite_cotton", "glider_slicevine", "glider_snailaisle", "glider_snapfreeze", "glider_snowsoldierfashion", "glider_solartheory", "glider_sparklechop", "glider_spatialtravel", "glider_speedypeas", "glider_spring", "glider_springbreak", "glider_sprocketpoppy_boat", "glider_sprocketpoppy_yacht", "glider_squidglistenliftdairy", "glider_stagecue", "glider_stallionsmoke", "glider_stealth", "glider_steampower", "glider_stormaviator", "glider_stormyearn", "glider_strategicspur", "glider_stunningmountain", "glider_summertide", "glider_sunlit", "glider_synthcontact", "glider_taxiupgradedwhitefemale", "glider_teststaticparts", "glider_tideking", "glider_tiltedparrot", "glider_traffichat", "glider_troutwrist", "glider_venice", "glider_venom", "glider_vitalpsych", "glider_voidredemption", "glider_voyager", "glider_warthog", "glider_wartybrine", "glider_wealthlambfate", "glider_wealthlambfateuniversal", "glider_wingedmedieval", "glider_zebrascramble_bacon", "glider_zirconsweep", "preseasonglider", "preseasonglider_elite", "solo_umbrella", "solo_umbrella_markii", "squad_umbrella", "umbrella_assassinsuit", "umbrella_blastberry_season_30", "umbrella_bronze", "umbrella_buffet_rainbow_354hu", "umbrella_buffet_rd4dp", "umbrella_buffet_silver_p2huy", "umbrella_buildabrella", "umbrella_ch6miniseason1", "umbrella_coltfetch", "umbrella_daybreak", "umbrella_foggydive", "umbrella_gold", "umbrella_honeysail", "umbrella_lettuce", "umbrella_liftaxis", "umbrella_ogvault", "umbrella_paperparasol", "umbrella_platinum", "umbrella_rankedaurum", "umbrella_rankeddefender", "umbrella_rankedfaction", "umbrella_rankedfury", "umbrella_rankedhalt", "umbrella_rankedhero", "umbrella_rankedpantheon", "umbrella_rankedremixcarrot", "umbrella_rankedrube", "umbrella_season36", "umbrella_season_04", "umbrella_season_05", "umbrella_season_06", "umbrella_season_07", "umbrella_season_08", "umbrella_season_09", "umbrella_season_10", "umbrella_season_11", "umbrella_season_12", "umbrella_season_13", "umbrella_season_14", "umbrella_season_15", "umbrella_season_16", "umbrella_season_17", "umbrella_season_18", "umbrella_season_19", "umbrella_season_20", "umbrella_season_21", "umbrella_season_22", "umbrella_season_23", "umbrella_season_24", "umbrella_season_25", "umbrella_season_26", "umbrella_season_27", "umbrella_season_28", "umbrella_season_29", "umbrella_season_30", "umbrella_season_31", "umbrella_season_32", "umbrella_season_33", "umbrella_season_34", "umbrella_silver", "umbrella_snowflake", "umbrella_storm", "umbrella_summervividbrainfemale", "umbrella_vendetta"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "dance[]": {
                    readonly title: "Dance";
                    readonly type: "array";
                    readonly description: "Dances.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["abstractmirror", "accentwall", "accolades", "acrobaticsuperhero", "adapter", "adoration", "aerobics", "affection", "affluent", "afrohouse", "afterparty", "afterparty_sync", "afterparty_sync_follower", "agentsherbert", "airguitar", "airhorn", "alchemy_bzws8", "alfredo", "alien", "aliennation", "aliensupport", "alliteration", "almondsplash", "aloha_c82xx", "amazingforever_q68w0", "ancientgladiator", "anglepatch", "annoyingpen", "annual", "antivisitorprotest", "anxiety", "apexwild", "apollo", "apollo_follower", "apollo_sync", "applause", "apprentice", "apprentice_follower_sync", "apprentice_sync", "apprenticeswirl", "arcticiceblue", "arcticicetalus", "armadillo", "armadillorobot", "armupdance", "armwave", "armybunny", "artgiant", "artillery", "ashenmagnus", "ashes_myq8o", "ashtonboardwalk", "ashtonsaltlake", "aspire", "assassinsalute", "assassinvest", "asteroid", "astral", "astray", "auracop", "auracopheist", "autumntea", "avian", "avocadoseal", "backflip", "backspin_r3nai", "badbear", "badmood", "baggypants", "bakerstep", "bakerstep_sync", "bakerstep_sync_follower", "bakerstep_sync_owned", "balance", "balletjumps", "balletspin", "banana", "bangthepan", "banknotes", "bannerflagmarch", "bannerflagwave", "bargain_owned", "bargain_owned_follower", "bargain_sync", "bargain_sync_follower", "bargain_y5khn", "barium", "barrelroll", "basilstrong", "basketball", "basketballdribble_e6ojv", "basketballv2", "bass_bassburn", "bass_bballspin", "bass_bboykickpike", "bass_doublespin", "bass_footballhype", "bass_homealone", "bass_jammingurbanatlanta", "bass_jukeboxtunes", "bass_jumps", "bass_kylethrowbass", "bass_leafblower", "bass_letemcook", "bass_midbreakstretch", "bass_shootkickjump", "bass_sidekicks", "bass_spotlight_capt", "bass_spotlight_cutepeace", "bass_spotlight_jump", "bass_spotlight_kylethrowbass", "bass_spotlight_shoulder", "bass_stretchingwarmup", "bass_wiggleknees", "beachbreak", "bean_chicken", "bean_mexwave", "bean_thumbsup", "bean_wave", "beckonpapayacomms", "behere_8070h", "believer", "bellringer", "bendy", "bengalbasher", "bentbaton", "berrytart", "berrytartriver", "bestmates", "bestow", "betty", "betty_owned", "betty_owned_follower", "betty_sync", "betty_sync_follower", "bewilder", "beyond", "bicycle", "bicyclestyle", "bigfootwalk", "bighugs", "bigstepper", "billybounce", "bingrass", "birdsnestblue", "bistrostyle_p0xfd", "bites", "bittersweet", "blacklight", "blackmondayfemale_6ho4l", "blackmondaymale2", "blackmondaymale_e0vsb", "blankcanvas", "blaster", "blazerveil", "bling", "blondejaw", "blowingbubbles", "blueapparel", "bluejay", "bluephoto_jsg4d", "blustery", "bollywood", "boneless", "boogiedown", "boombox", "boomer_n2rqt", "boomshot", "bootsandcats", "bottlecapchallenge", "bouquet", "brakepedal", "brawnybass", "breakboy", "breakdance", "breakdance2", "breakfastcoffeedance", "breakthrough", "breakyou", "bringiton", "broccoli_pziiw", "brokenspot", "buffcat", "buffcatcomic_ev4hk", "buffetmoment_lczqs", "buildasnowman", "builders", "bulletproof", "bunnyflop", "bunnyhop", "burgerflipping", "burntbagel", "burpee", "butter_1r26q", "buttoncase", "bygone", "bythefire", "bythefire_follower", "bythefire_sync", "cabbagesugar", "cactustpose", "cadaver", "caddie", "cadence", "cadet", "caffeine", "cajuntaco", "cajuntaco_sync", "cajuntaco_sync_follower", "calculated", "calico", "caller", "callme", "camouflage", "campwrench", "canary", "candor", "candydance", "canine", "capital", "capoeira", "carbideweld", "carrotcake", "cartwheel", "cashier_hgq8x", "casinoreaper", "cattlejar", "cattusroar", "cauldron", "celebration", "celebrationdance", "cerealbox", "ceremonialguard", "chainmail", "chairtime", "chashu", "checkeredflag", "checkmate", "checkmate_owned", "checkmate_owned_follower", "checkmate_sync", "checkmate_sync_follower", "cheerleading", "cheerpapayacomms", "chelseahotel", "cherish", "chew", "chicken", "chickenleg_tdj0o", "chickenmoves", "chillcat", "chilled", "chiveflake", "chopsticks", "chorus", "chuckle", "chug", "chugga", "chuggafollower", "cindermax", "citadel", "citrusspoon", "clamor", "clamor_follower", "clamor_follower_offset", "clapandwave", "clappapayacomms", "clapperboard", "clash_jlk96", "clawpad_host", "clayplug", "clayplug_graffiti", "clearradius", "clearradius_follower", "clearradius_follower_sync", "clearradius_sync", "clerks", "climbthestaff", "clippers", "cloudfloat", "coatcheck", "cobbler", "coconutshell", "cointoss", "collectable", "combcrater", "competitor", "comrade_6o5ak", "concentrate_0w5gy", "confused", "conga", "congestion", "contortedscowl", "cooloff", "coolrobot", "coping", "copiouscranes", "corestreet", "coronation", "coronet", "cosmospet", "cottontail", "cowboydance", "coyotetrail", "coyotetrail_follower", "coyotetrail_sync", "crabdance", "crackle", "crackshotclock", "crackshotdance", "craftglue", "craneanchor", "crazydance", "crazyfeet", "crimsonpeak", "crisprover", "crisscross", "crosswalk", "crowdsurfing", "cruising", "crumbviolin", "crumbviolin_baguette", "cry", "cubicvice", "custodial", "cuteness", "cyberarmor", "cyberice", "cyclone", "cycloneheadbang", "cyclopsprey", "cyclopsprey_sizzle", "dab", "dabounce", "dancemoves", "darkfirelegends", "darkstance", "darling", "dashing", "davinci", "dazzle", "deceiver", "deepdab", "deflated_6poaz", "delirious", "denimequip", "depart", "desertshadow", "destiny", "devotion", "diamondheart", "dignified", "dimeblanket", "dimeblanketgrace", "dimension", "dinosaur", "direction", "disagree", "disband", "discofever", "disconnect", "disconnect_follower", "disconnect_sync", "disintegrate", "distantecho", "distraught", "divinepose", "division", "dj01", "doggystrut", "donkeycrib", "dontbesquare", "dontsneeze", "donut1", "donut2", "doodling", "doubleduty", "doublesnap", "doubletake", "downward_8gzua", "dreadful", "dreamfeet", "driedsilk", "drum_biker", "drum_bow", "drum_crashcymbals", "drum_crowdhype", "drum_drumrun", "drum_drumstickcampfire", "drum_flabby", "drum_gunslinger", "drum_helicopterdrumsticks", "drum_karate", "drum_platespinner", "drum_popallama", "drum_pullups", "drum_relaxeddrummer", "drum_rensdrums", "drum_sparklers", "drum_spotlight_alien", "drum_spotlight_point", "drum_spotlight_scream", "drum_spotlight_stewdrums", "drum_spotlight_wave", "drum_stewdrums", "drum_stickpenspinning", "drum_stickspin", "drum_thunderstruck", "drummajor", "dryerasecod", "dryerasetoro", "dualparadox", "duckteacher_9iplu", "dumbbell_lift", "dunk", "dustinghands", "dustoffshoulders", "easternbloc", "ebony", "eerie_8wgyk", "eggbounce", "egocentric", "egyptiandance", "elastic", "electric", "electroshuffle", "electroshuffle_v2", "electroswing", "elegantlily", "elegantlilycharm", "emeraldglassgreen", "emeraldglasstransform", "emperor", "enchant", "enchant_follower", "enchant_sync", "encounter", "endear", "energize", "energizestoic", "engagedwalk", "enrapture", "epicyarn", "ethicalnoggin", "everytime", "exaggerated", "exquisite", "eyespire", "eyesurrender", "facepalm", "factual", "fancyfeet", "fancyworkout", "fangs", "fantasy", "farewell", "farewell_sync", "farewell_sync_follower", "fastcheetah", "fatcats", "faux", "fearlessflight", "feathermud", "feathermudlounge", "feral", "fightnight", "fingerguns", "fingergunsv2", "firecracker", "firecrackersparks", "firedance", "fireworks_wkx2w", "fireworksspin", "firstclass", "fishbowl", "fistpump", "flabby", "flabby_follower", "flabby_sync", "flabby_sync_follower", "flabby_sync_leader", "flagplant", "flailingfins", "flamebride", "flamenco", "flamingpants", "flapper", "flavorstock", "flex", "flex02", "flipit", "floppy", "floralcardinal", "floret", "floss", "flourish", "flowervase", "flyingkite", "flypie", "foe_4ewjv", "football20flag_c3qee", "footballtd_u2hzi", "forwardlake_dire", "fresh", "frisbeeshow", "frolic", "frontier", "frozenreality", "fuchsia", "fugitive", "futbolglory", "futuresamurai", "fuzzball", "gabbyhiphop_01", "galaxylevel", "galileo1_b3ex6", "galileo2_2vyej", "galileo3_t4dko", "galileo4_pxpe0", "galileoshow_cheer", "gamebreaker", "garlicwhisk", "garlicwhisk_clobber", "gasstation_104fq", "gatehound", "gelatocourage", "geneaglet", "generic_hifive_joinadhocsquads", "generic_hifive_sync", "generic_hifive_sync_infinitetolerance", "generic_hifive_syncowned", "generic_hifive_syncowned_infinitetolerance", "generic_respectthepeace_leaveadhocsquad", "getawaycar", "getawaycar_sync_follower", "getawaycar_sync_follower_offset1", "getawaycar_sync_follower_offset2", "getawaycar_sync_owned", "getawaycar_sync_owned_follower", "getfunky", "getoverhere", "getthehorns", "ghosthunter", "gilded", "gimmefive", "gimmick_female_6cmf4", "gimmick_male_8zfca", "gleam", "glitter", "glowstickdance", "gnocchitea", "goatdance", "goatdance_sync", "goatdance_sync_owned", "goldcat", "golfclap", "goodbye", "goodbye_upbeat", "goodvibes", "gothdance", "gracious", "graffititon", "grapefruit", "grasshopper_8d51k", "greatescape", "greatpool", "greatwall", "griddles", "grilledcheese_n31c9", "groovejam", "grooving", "groovingsparkle", "groovypetals", "groovyreader", "guineapig", "guineapig_squeal", "guitar_behindhead", "guitar_clean", "guitar_drills", "guitar_fancyfeet", "guitar_flabby", "guitar_jackhammer", "guitar_jammingboyband", "guitar_jammingchill", "guitar_kneessolo", "guitar_rainbowserenade", "guitar_roundhousespin", "guitar_rundancearound", "guitar_rundancing", "guitar_shakecrunch", "guitar_skylanternrelease", "guitar_sniperaim", "guitar_spotlight_crossed_arms", "guitar_spotlight_knee_slide", "guitar_spotlight_rundancing", "guitar_spotlight_solo", "guitar_spotlight_stewguitar", "guitar_spotlight_strum", "guitar_spotlight_tuning", "guitar_stargazer", "guitar_stewguitar", "guitar_stomparound", "guitar_tuning", "guitarwalk", "gumball", "gunspinnerteacup", "gwaradance", "hackysack", "hailingcab", "halloweencandy", "hamitup", "handlebars", "handsignals", "handstandlegdab", "handsup", "happybirthday", "happyskipping", "happywave", "harmony", "harmony_follower", "harmony_sync", "haste1_t98z9", "hawtchamp", "headband", "headbang", "headset", "headshake", "heartsign", "heartsign_sync", "heartsign_sync_follower", "heartsign_sync_owned", "heartsign_sync_owned_follower", "heavyroar", "heavyroardance", "hedgesprig", "hedgesprig_joiner1", "hedgesprig_joiner2", "hedgesprig_joiner3", "hedgesprig_sync", "hedgesprig_sync_follower", "hedgesprig_sync_owned", "hedgesprig_sync_owned_follower", "heelclick", "helium", "herald", "herald_npc", "herbhutch", "hiccuppanic", "hifive", "hifive_joinadhocsquad", "hifive_joinadhocsquads", "hifive_sync", "hifive_sync_infinitetolerance", "hifive_syncowned", "hifive_syncowned_infinitetolerance", "highactivity", "highmotion", "hightowerdate", "hightowerdate_npc", "hightowergrape", "hightowerhoneydew", "hightowermango", "hightowersquash", "hightowertapas", "hightowertomato", "hightowertomato_npc", "hightowerwasabi", "hilda", "hilowwave", "hiphop01", "hiphops5", "hiphops7", "hiptobesquare", "historian_2tef8", "hitchhiker", "hnygoodriddance", "hoist", "holdonaminute", "holidaycracker", "holidaycracker_owned", "holidaycracker_sync", "holidaycracker_sync_follower", "holidaycracker_sync_owned_follower", "hollydessert", "hopper", "hoppin", "hornedjudgment", "hotpink", "hotstuff", "hubbabubba", "hula", "hulahoop", "hulahoopchallenge", "hurrah", "hurrah_follower", "hurtle", "hurtle_blue", "hurtle_follower", "hurtle_green", "hurtle_purple", "hurtle_red", "hustle", "huzzah", "huzzah_owned", "huzzah_owned_follower", "huzzah_sync", "huzzah_sync_follower", "hydratrumpet_coach", "hydraulics", "hype", "icedout", "icedtea", "icedtea_follower", "icedtea_sync", "iceking", "icesculpture", "icicle", "iconic", "idontknow", "ignite", "impulse", "impulse_follower", "incantation", "incline", "indiandance", "indiebucket", "indigo", "indigoapple", "inferno", "infinitedab", "inflatododo", "inkhoop", "inkhoop_yodel", "inkhoop_yodel_sync", "inkhoop_yodel_sync_follower", "innocent", "inspect", "inspirespell", "instantgravel", "intensity", "intensity_copy", "intermission", "interstellar", "intertwine", "irishjig", "ironlilac", "irons", "jadetowel", "jadetowel_gloss", "jammin", "jammin_copy", "januarybop", "jaywalking", "jazzdance", "jazzhands", "jazzshoes", "jellyfrog", "jiggle", "jingle", "jockey", "jokes", "journey", "journeymentor_x2d9n", "jovial", "juggler", "jugular", "jugular_banjo", "jugular_fiddle", "jugular_guitar", "julybooks", "jumpingjack", "jumpingjoy_wkpg4", "jumpstyledance", "jungleboss", "jupiter_7jz9r", "justhome", "keagle", "keeperdreamchorus", "keeperdreamglowstick", "keeperdreamhook", "kelplinen", "kelplinen_calcium", "keplerfemale_c98jd", "keplermale_oqs83", "keytar_boomerang", "keytar_chickendance", "keytar_crabcore", "keytar_feetjuggling", "keytar_flabby", "keytar_handstand", "keytar_keytardance", "keytar_keytarfire", "keytar_ninja", "keytar_pokingnote", "keytar_rocketlauncher", "keytar_signspin", "keytar_sillyhips", "keytar_slide", "keytar_spotlight_angel", "keytar_spotlight_crabcore", "keytar_spotlight_heart", "keytar_spotlight_keytardance", "keytar_spotlight_surf", "keytar_spotlight_swing", "keytar_surfing", "keytar_tippytappies", "keytar_yogi", "kilo_vd0pk", "kingeagle", "kisskiss", "kitchennavigator", "kittycat", "kneelens", "knightcat", "knitbarrel", "knockout", "kpopdance01", "kpopdance02", "kpopdance03", "kpopdance04", "kungfusalute", "kungfushadowboxing", "lasagnadance", "lasagnaflex", "lasso_adp0o", "lassopolo_g5ai0", "lastvoice", "lateral_7qjd6", "laugh", "laughtrack", "layers_bbz49", "lazaruslens", "lazylizz", "lazyshuffle", "lemoncart", "lemoncart_granite", "letsbegin", "letsplay", "lettuce", "lexa", "lifted", "liftingaura", "lilsplit", "limabean", "limelight", "lineage", "linedance", "lintmermaid", "littleegg_69ox0", "livelydomino", "liverromaine", "livinglarge", "llamabell", "llamafloat", "llamamarch", "llamarider_glitter", "localzilla", "lockitup", "logarithmkick_njvd8", "logarithmwhoa_t3pf9", "lonely", "lonewolf", "loofah", "lookatthis", "lootflex", "loudphoenix", "lounging", "lowrider", "luckycase", "lunchbox", "lyrical", "macaroon_45lhe", "macintosh", "madamemoth", "magicman", "magicmeadow", "magnetic", "majesty_49jwy", "makeitplantain", "makeitrain", "makeitrainv2", "malfunction", "malleable", "manandmonster", "mannequin", "maracas", "marinara", "marionette", "marionette_bassguitar", "marionette_drums", "marionette_follower", "marionette_leadguitar", "marionette_rhythmguitar", "marionette_sync", "marionette_sync_follower", "marionette_sync_leader", "markerdeer_tin", "martialarts", "martian_sk4j6", "marvelous", "mashedpotato", "masquerade", "mathdance", "maxenergize", "meander", "mechpeely", "medicinal", "medicrow", "medievalsheath", "meditation", "megatoof", "melancholy", "melody", "memory", "memory_follower", "mercurialstorm", "mesmerize", "meticulous", "meticulous_owned", "meticulous_owned_follower", "meticulous_sync", "meticulous_sync_follower", "metronome", "mic_awshucks", "mic_balletdancer", "mic_bostaff", "mic_circlework", "mic_dropwithstand", "mic_fishband", "mic_flabby", "mic_jammingboyband", "mic_jammingchill", "mic_jammingurbanatlanta", "mic_monkeystaff", "mic_poseforpicture", "mic_slipthemic", "mic_spinslide", "mic_spotlight_handup", "mic_spotlight_holdmic", "mic_spotlight_micsmash", "mic_spotlight_monkeystaff", "mic_spotlight_sing", "mic_spotlight_spinslide", "mic_spotlight_swoon", "mic_whitecoat", "micdrop", "middlesock", "mikecheck", "mime", "mindblown", "minifig_emote_idontknow", "minifig_emote_patpat", "minifig_emote_patpat_sync", "minifig_emote_patpat_sync_follower", "mirage", "missusmind", "mistmylar", "mistraven", "moderateamount_9lun1", "monarch", "montecarlo", "montekeyboard", "moonwalking", "mooseporch", "motorcyclemayhem", "mouse", "muffinladle_gas", "musketslinger", "mustardrocket", "myeffort_bt5z0", "myidol", "mystic", "nebula", "needtogo", "neoncatspy", "neondream", "nerdstomp", "nevergonna", "nighthawk", "nighthawk_v2", "nighthawk_v3", "nightmare_ms3aq", "nightmare_npc_m6exp", "nimble", "nitroflow", "noble", "nodheadmolecomms", "nodheadpapayacomms", "noodles_x6r9e", "nottoday", "npc_bythefire", "npc_gardener_nurture", "npc_gardener_place", "oatmealspread", "oatmealspread_golem", "obsidian", "obstruct", "oceanbreeze", "octopus", "office", "og_runningman", "ohana", "oilpaint", "olivestomp", "omega", "omega_bassguitar", "omega_drums", "omega_follower", "omega_leadguitar", "omega_rhythm", "omega_sync", "omega_sync_follower", "omega_sync_leader", "onearmfloss", "oneinchpunch", "ontarget", "onthehook", "onward", "orbitteal_1xlao", "orderguard", "ordinary", "ordinary_acousticguitar", "ordinary_bassguitar", "ordinary_drums", "ordinary_rhythmguitar", "originprisoner", "ostrichspin", "outburst", "outergarment", "overunder_k3t0g", "oxytocin", "oysterknock", "oysterknock_sync", "oysterknock_sync_follower", "pages", "panoramic", "parallelcomic", "partyjazztwinkletoes", "partyjazzwigglydance", "partyjelly", "pastasauce", "pastelglaze", "patpat", "patpat_sync", "patpat_sync_follower", "patpat_sync_owned_follower", "pawjasmine", "paws", "peacefulpoem", "peacefulpoem_pumped", "peacefulpoemcruise", "peelybones", "penguinwalk", "perish", "phantom", "phew", "phonecharger", "phonewavepapayacomms", "phonograph", "photographer", "piedpiper", "pigeonchart", "pillowmill", "pingpong", "pinkspike", "pinkwidow", "pipershelf", "pirategold", "pizzaparty", "pizzatime", "plantstand", "plasticfork", "plasticfork_follower", "plasticfork_owned", "plasticfork_sync", "plasticfork_sync_follower", "plasticfork_sync_owned_follower", "platinumgrillz", "platypusbranch", "playereleven", "plottwist", "plummet", "pogotraversal", "pointfingermolecomms", "pointfingerpapayacomms", "polarity", "polishedjade", "pompous", "ponder", "poolpolice", "popcorn", "popdance01", "poplock", "potassium", "potterywheel", "poutyclap", "powerfarmer", "prairieskip", "praisestorm", "praisethetomato", "prance", "prance_follower", "precipitation", "prelude", "presentopening", "princess", "privatejet", "professorpup", "promenade", "promenade_follower", "promenade_sync", "prosper", "provisitorprotest", "psychic_7so2z", "pump", "pumpkindance", "punctual", "punkkoi", "pupil", "puresalt", "puzzlebox", "puzzleshed", "puzzleshed_sync", "puzzleshed_sync_bakerstep_follower", "puzzleshed_sync_follower", "puzzleshed_sync_owned", "puzzleshed_sync_owned_follower", "quail_berrytart", "quail_clayplug", "quail_kelplinen", "quail_lemoncart", "quantity_39x5d", "quarrelfemale_4abl0", "quarrelmale_sgvne", "quickburst", "quickburst_drums", "quickburst_follower", "quickburst_guitarflame", "quickburst_guitarsparks", "quickburst_speakers", "quickflexes", "quicksweeper", "quietpeanuts_blue", "quietpeanuts_pizza", "quietpeanuts_purple", "quietpeanuts_red", "racestart", "racestart_argon", "radiumfox", "ragequit", "raisetheroof", "rankedprogression", "rascals", "realcrown", "realm", "rebelclaw", "redcard", "redpepper", "reflection", "regalwave", "reign", "reign_follower", "relaxed", "relaystick_carmine", "relaystick_plume", "relish_tnpzi", "rememberme", "remotecontrol", "repetition", "reptilianocean", "resonant", "respectthepeace", "respectthepeace_leaveadhocsquad", "respectthepeace_removepartyrift", "reveal", "reverence", "reverie", "reverie_follower", "reverie_sync", "rhymelock_5b2y3", "rhymelockreward", "ribbondance", "richfam", "ridethepony_athena", "ridetheponytwo", "rigormortis", "ringer", "rippedharvester", "roastingmarshmallow", "robot", "rocketrodeo", "rockguitar", "rockingchair", "rockpaperscissors", "rollerblade", "roostermech", "rosedepth", "rosedust", "rotisserie", "rotisserie_drum", "rotisserie_follower", "rotisserie_guitar", "rotisserie_sycn", "rotisserie_sycn_follower", "rotisserie_sycn_leader", "roundthumb", "rover_98bfx", "roving", "royalangst", "ruckus", "ruckus_follower", "ruckusmini_hw9yf", "ruckusminifollower", "ruckusminileader", "rumble_female", "rumble_male", "runningman", "runningmanv3", "rushrustle", "rustybolt_zmr13", "sacredcuddle", "sadtrombone", "safarignome", "sahara", "saladdressing", "saltysumo", "salute", "sandalsite", "sandmansion", "sandwichbop", "sashimi", "satincheddar", "saucer", "saxophone", "scamper", "scholar", "schoolyard", "scorecard", "scorecardburger", "scorecardtomato", "scorpionzero", "scraptunnel", "scribe", "scrolls", "scrubdub", "sculptor", "seagull", "secrethandshake", "secrethandshake_owned", "secrethandshake_owned_follower", "secrethandshake_sync", "secrethandshake_sync_follower", "secretslash_owned", "secretslash_owned_follower", "secretslash_synch", "secretslash_synch_follower", "secretslash_ujt33", "secretsplit_7fogy", "secretsplit_owned", "secretsplit_owned_follower", "secretsplit_synch", "secretsplit_synch_follower", "securityguard", "selenecobra", "sequinpie", "serene", "serene_follower", "serene_sync", "sexyflip", "shades", "shadesfollower", "shadessync", "shadowboxing", "shaka", "shakeheadmolecomms", "shakeheadpapayacomms", "shallwe", "shallwe_follower_fe", "shaolin", "shaolinsipup", "sharpfang", "sharpmagnet", "sherwolf", "sherwood", "sherwoodforest", "shimmy", "shindig_8w1aw", "shindig_follower", "shindig_sync", "shinobi", "shiny", "shinytiger", "shirttilapia", "shirttilapia_toast", "shiverflame", "shockvalue", "shockvalue_sync", "shockvalue_sync_follower", "shorts", "shortscare", "showstopper", "shrimpstroll", "shrimpstroll_npc", "shrimpstroll_owned_follower", "shrimpstroll_sync", "shrimpstroll_sync_follower", "shrimpstroll_sync_owned", "sienna", "signspinner", "silenttempo", "sillyjumps", "silverbell", "singalong", "singalong_fe", "sirwolf", "sitpapayacomms", "skeemote_k5j4j", "skeletondance", "skippingclouds", "skirmishfemale_i5otj", "skirmishmale_fgpj3", "sleek_s20cu", "sleet", "sleighit", "slicevine", "slither_daxd6", "slowclap", "smallfry_kffa1", "smarthyena", "smokebombfail", "smokecleanse", "snap", "snap_deploypartyrift", "snapfreeze", "sneakingtraversal", "snippet", "snippet_owned_follower", "snippet_sync", "snippet_sync_follower", "snippet_sync_owned", "snowfall_h6lu9", "snowglobe", "snowknight", "soappocket", "soappocket_punch", "soar", "soccerjuggling", "soccertraversal", "socks_xa9hm", "soilblend", "solarpower", "solartheory", "solidwave_hifive_joinadhocsquad", "solidwave_hifive_sync", "solidwave_hifive_syncowned", "solidwave_respectthepeace_leaveadhocsquad", "somethingstinks", "spacechimp", "sparklechop", "sparkler", "spatialtravel", "speakerbox", "spectacleweb", "spectacular", "spectrum", "speeddial", "speeddial_mask", "speedrun", "speedypeas", "spiral", "spooky", "spotlight", "springbreak", "springrider", "sprinkler", "sprocketpoppy", "sprout_confused", "sprout_giveitem", "sprout_giveitem_sync", "sprout_giveitem_sync_follower", "sprout_happy", "sprout_headnod", "sprout_headshake", "sprout_laydown", "sprout_point", "sprout_sad", "sprout_wave", "spyglass", "spymale", "squeakykicks", "squidglisten_lift", "squishydance", "squishymedley", "stagebow", "stagecue", "stalemate", "stallion", "standoff", "starstray", "statuepose", "steampower", "steep", "stepbreakdance", "stonelion", "stopwatch", "stormaviator", "strategicspur", "strawberrypilotkpop", "streamline", "stringdance", "studious", "studs", "studybench", "stumble", "stunningmountain", "stylusfluff", "sublime", "success", "suckerpunch", "sugarrush", "sugarrush_owned", "sugarrush_owned_follower", "sugarrush_sync_follower", "suits", "sunburst", "sunburstcreative", "sunburstcreativefloat", "sunburstcreativefull", "sunburstdance", "sunburstheart", "sunlight", "sunlit", "sunmelt", "sunnysteppin", "sunrise_rpz6m", "superherobackflip", "supernova", "surebamboo", "surroundsound", "survivorsault_nj7wc", "suspenders", "swatch", "swatch_owned", "swatch_owned_follower", "swatch_sync", "swatch_sync_follower", "sweettoss", "swimdance", "swingdance", "swipeit", "swish", "swisskale", "switchthewitch", "swoosh", "swordsplit", "synthcontact", "synthrose", "tacotimedance", "taichi", "tailor", "takeout", "taketheelf", "takethel", "takethew", "talkinggesture", "tally", "tangle", "tapestry", "tapshuffle", "tar_s9yve", "taxicab", "tealmink", "teammonster", "teamrobot", "telenovela", "telescope", "tempertantrum", "temple", "tennishleash_sync", "tennishleash_sync_follower", "tennisleash", "tennisleash_owned", "tennisleash_owned_follower", "tennispaddle", "terminal", "terrier", "textile_3o8qg", "texting", "theshow", "thighslapper", "thrash", "thrive", "thumbsdown", "thumbsup", "tideking", "tidy", "tikitorch", "timberstake", "timeout", "timesticking", "timetravelbackflip", "tinytree", "tinytremors", "tipjar", "tireswing", "tntina", "toasted", "toasted_follower", "toasted_sync", "tollbridge", "tonal_51qi9", "tons_49fgx", "torchsnuffer", "totalflock", "totalflock_slash", "touchdown", "tourbus", "towersentinel", "tpose", "tracepaper", "traction", "trademark", "trademark_owned", "trademark_owned_follower", "trademark_sync", "trademark_sync_follower", "traffichat", "trajectory", "treadmilldance", "treelightpose", "trickycards", "trifle", "triplescoop", "triumphant", "troops", "trophycelebration", "trophycelebrationfncs", "troutwrist", "troutwrist_spine", "truckerhorn", "truckscale", "truelove", "turtleneck", "twicebaked", "twilightspot", "twilightspot_hand", "twist", "twistdaytona", "twisteternity", "twisteternity_sync", "twisteternity_sync_follower", "twistfire_i2vta", "twistwasp_follower", "twistwasp_sync", "twistwasp_t2i4j", "twohype", "typhoon_vo9of", "ukuleletime", "ultraenergize", "ultralight", "unbound", "undead", "undergroundrebel", "unicycletraversal", "unified", "upbeatiguana", "uproar_496sc", "vacant", "valentine", "vectorspark", "vectorsparkv2", "vectorsparkv3", "vegas", "veiled", "velvetdesk", "velvetdesk_cam", "venice", "vertigo", "victorious", "vikinghorn", "vinyl", "viral", "vitality", "vivid_i434x", "voidredemption", "wackywavy", "waitingroom", "walkiewalk", "walkingsign", "warehouse", "warmshade", "warmshadewagon", "wartybrine", "watchthis", "wave", "wavedance", "wavepapayacomms", "wayfare", "wealthlamb_fatestork", "weaveharbor", "weightless", "wellplayed", "whereismatt", "whirlwind", "whisk", "wiggle", "windmillfloss", "windtunnel", "wingbath", "wingbath_sturdy", "winterwinds", "wir", "wishingstar", "wizard", "wolfhowl", "worm", "wormchalk", "wristflick", "wrongway_m47al", "yayexcited", "yeet", "yogapatio", "youboreme", "youreawesome", "youthere", "zebrascramble", "zenmaster", "zest_q1k5v", "zippy", "zirconsweep", "zombie", "zombieelastic", "zombiewalk"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly change_email: {
                    readonly title: "Change Email";
                    readonly description: "Can change email.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "platform[]": {
                    readonly title: "Platform";
                    readonly type: "array";
                    readonly description: "Platform.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["Epic", "EpicAndroid", "EpicIOS", "EpicPC", "EpicPCKorea", "GooglePlay", "IOSAppStore", "Live", "Nintendo", "OneStoreKorea", "PSN", "Samsung"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly skins_shop_min: {
                    readonly title: "Skins Shop Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of shop skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly skins_shop_max: {
                    readonly title: "Skins Shop Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of shop skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pickaxes_shop_min: {
                    readonly title: "Pickaxes Shop Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of shop pickaxes.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pickaxes_shop_max: {
                    readonly title: "Pickaxes Shop Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of shop pickaxes.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly dances_shop_min: {
                    readonly title: "Dances Shop Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of shop dances.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly dances_shop_max: {
                    readonly title: "Dances Shop Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of shop dances.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gliders_shop_min: {
                    readonly title: "Gliders Shop Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of shop gliders.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gliders_shop_max: {
                    readonly title: "Gliders Shop Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of shop gliders.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly skins_shop_vbmin: {
                    readonly description: "Minimum total cost of all skins in the shop in V-Bucks.";
                    readonly title: "Skins Shop Vbmin";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly skins_shop_vbmax: {
                    readonly description: "Maximum total cost of all skins in the shop in V-Bucks.";
                    readonly title: "Skins Shop Vbmax";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pickaxes_shop_vbmin: {
                    readonly description: "Minimum total cost of all pickaxes in the shop in V-Bucks.";
                    readonly title: "Pickaxes Shop Vbmin";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pickaxes_shop_vbmax: {
                    readonly description: "Maximum total cost of all pickaxes in the shop in V-Bucks.";
                    readonly title: "Pickaxes Shop Vbmax";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly dances_shop_vbmin: {
                    readonly description: "Minimum total cost of all dances in the shop in V-Bucks.";
                    readonly title: "Dances Shop Vbmin";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly dances_shop_vbmax: {
                    readonly description: "Maximum total cost of all dances in the shop in V-Bucks.";
                    readonly title: "Dances Shop Vbmax";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gliders_shop_vbmin: {
                    readonly description: "Minimum total cost of all gliders in the shop in V-Bucks.";
                    readonly title: "Gliders Shop Vbmin";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gliders_shop_vbmax: {
                    readonly description: "Maximum total cost of all gliders in the shop in V-Bucks.";
                    readonly title: "Gliders Shop Vbmax";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly bp: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Bp";
                    readonly description: "Has Battle Pass.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lmin: {
                    readonly title: "Lmin";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lmax: {
                    readonly title: "Lmax";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly bp_lmin: {
                    readonly title: "Bp Lmin";
                    readonly description: "Minimum level of Battle Pass.";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly bp_lmax: {
                    readonly title: "Bp Lmax";
                    readonly description: "Maximum level of Battle Pass.";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_trans_date: {
                    readonly title: "Last Trans Date";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is last transaction.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_trans_date_period: {
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly no_trans: {
                    readonly title: "No Trans";
                    readonly type: "boolean";
                    readonly description: "Has no transactions.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly xbox_linkable: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Xbox Linkable";
                    readonly description: "Can be linked to Xbox.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly psn_linkable: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Psn Linkable";
                    readonly description: "Can be linked to PSN.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rl_purchases: {
                    readonly title: "RL Purchases";
                    readonly type: "boolean";
                    readonly description: "Has Rocket League purchases.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly refund_credits_min: {
                    readonly description: "Minimum number of available refund credits.";
                    readonly title: "Refund Credits Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly refund_credits_max: {
                    readonly description: "Maximum number of available refund credits.";
                    readonly title: "Refund Credits Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly fortnite_item_id: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_platform: {
                                readonly title: "Fortnite";
                                readonly type: "string";
                            };
                            readonly fortnite_register_date: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_last_activity: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_book_level: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_lifetime_wins: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_level: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_season_num: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_books_purchased: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_balance: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_skin_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_change_email: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_rl_purchases: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_next_change_email_date: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_last_trans_date: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_xbox_linkable: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_psn_linkable: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_shop_skins_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_shop_pickaxes_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_shop_dances_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_shop_gliders_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly fortniteSkins: {
                                readonly title: "Fortnite Skins";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly rarity: {
                                            readonly title: "Rarity";
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                        readonly from_shop: {
                                            readonly title: "From";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "title", "rarity", "type", "from_shop"];
                                };
                            };
                            readonly fortnitePickaxe: {
                                readonly title: "Fortnite Pickaxe";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly rarity: {
                                            readonly title: "Rarity";
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                        readonly from_shop: {
                                            readonly title: "From";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "title", "rarity", "type", "from_shop"];
                                };
                            };
                            readonly fortniteDance: {
                                readonly title: "Fortnite Dance";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly rarity: {
                                            readonly title: "Rarity";
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                        readonly from_shop: {
                                            readonly title: "From";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "title", "rarity", "type", "from_shop"];
                                };
                            };
                            readonly fortniteGliders: {
                                readonly title: "Fortnite Gliders";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly rarity: {
                                            readonly title: "Rarity";
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                        readonly from_shop: {
                                            readonly title: "From";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "title", "rarity", "type", "from_shop"];
                                };
                            };
                            readonly fortnite_pickaxe_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_dance_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnite_glider_count: {
                                readonly title: "Fortnite";
                                readonly type: "integer";
                            };
                            readonly fortnitePastSeasons: {
                                readonly title: "Fortnite Past Seasons";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly numWins: {
                                            readonly title: "Num Wins";
                                            readonly type: "integer";
                                        };
                                        readonly seasonXp: {
                                            readonly title: "Season Xp";
                                            readonly type: "integer";
                                        };
                                        readonly purchasedVIP: {
                                            readonly title: "Purchased Vip";
                                            readonly type: "boolean";
                                        };
                                        readonly survivorPrestige: {
                                            readonly title: "Survivor Prestige";
                                            readonly type: "integer";
                                        };
                                        readonly seasonLevel: {
                                            readonly title: "Season Level";
                                            readonly type: "integer";
                                        };
                                        readonly numLowBracket: {
                                            readonly title: "Num Low Bracket";
                                            readonly type: "integer";
                                        };
                                        readonly bookLevel: {
                                            readonly title: "Book Level";
                                            readonly type: "integer";
                                        };
                                        readonly numRoyalRoyales: {
                                            readonly title: "Num Royal Royales";
                                            readonly type: "integer";
                                        };
                                        readonly seasonNumber: {
                                            readonly title: "Season Number";
                                            readonly type: "integer";
                                        };
                                        readonly survivorTier: {
                                            readonly title: "Survivor Tier";
                                            readonly type: "integer";
                                        };
                                        readonly numHighBracket: {
                                            readonly title: "Num High Bracket";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["numWins", "seasonXp", "purchasedVIP", "survivorPrestige", "seasonLevel", "numLowBracket", "bookLevel", "numRoyalRoyales", "seasonNumber", "survivorTier", "numHighBracket"];
                                };
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly fortniteTransactions: {
                                readonly title: "Fortnite Transactions";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly date: {
                                            readonly title: "Date";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly presentmentTotal: {
                                            readonly title: "Presentment Total";
                                            readonly type: "string";
                                        };
                                        readonly orderType: {
                                            readonly title: "Order Type";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["date", "title", "presentmentTotal", "orderType"];
                                };
                            };
                            readonly domain: {
                                readonly title: "Domain";
                                readonly type: "string";
                            };
                            readonly shopCounts: {
                                readonly title: "Shop Counts";
                                readonly type: "object";
                                readonly properties: {
                                    readonly shopSkinsCount: {
                                        readonly title: "Shop Skins Count";
                                        readonly type: "integer";
                                    };
                                    readonly shopPickaxesCount: {
                                        readonly title: "Shop Pickaxes Count";
                                        readonly type: "integer";
                                    };
                                    readonly shopDancesCount: {
                                        readonly title: "Shop Dances Count";
                                        readonly type: "integer";
                                    };
                                    readonly shopGlidersCount: {
                                        readonly title: "Shop Gliders Count";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["shopSkinsCount", "shopPickaxesCount", "shopDancesCount", "shopGlidersCount"];
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "fortnite_item_id", "fortnite_platform", "fortnite_register_date", "fortnite_last_activity", "fortnite_book_level", "fortnite_lifetime_wins", "fortnite_level", "fortnite_season_num", "fortnite_books_purchased", "fortnite_balance", "fortnite_skin_count", "fortnite_change_email", "fortnite_rl_purchases", "fortnite_next_change_email_date", "fortnite_last_trans_date", "fortnite_xbox_linkable", "fortnite_psn_linkable", "fortnite_shop_skins_count", "fortnite_shop_pickaxes_count", "fortnite_shop_dances_count", "fortnite_shop_gliders_count", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "fortniteSkins", "fortnitePickaxe", "fortniteDance", "fortniteGliders", "fortnite_pickaxe_count", "fortnite_dance_count", "fortnite_glider_count", "fortnitePastSeasons", "isSmallExf", "account_last_activity", "fortniteTransactions", "domain", "shopCounts", "canViewAccountLink", "accountLinks", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryGames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly categoryName: {
                    readonly title: "Category Name";
                    readonly type: "string";
                    readonly default: "steam";
                    readonly enum: readonly ["steam", "fortnite", "genshin-impact", "riot", "telegram", "supercell", "ea", "world-of-tanks", "wot-blitz", "gifts", "epicgames", "escape-from-tarkov", "socialclub", "uplay", "war-thunder", "discord", "tiktok", "instagram", "battlenet", "chatgpt", "vpn", "warface", "minecraft"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Category name.";
                };
            };
            readonly required: readonly ["categoryName"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "GamesModel";
            readonly type: "object";
            readonly properties: {
                readonly games: {
                    readonly title: "Games";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly app_id: {
                                readonly title: "App";
                                readonly type: "string";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly abbr: {
                                readonly title: "Abbr";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly img: {
                                readonly title: "Img";
                                readonly type: "string";
                            };
                            readonly url: {
                                readonly title: "Url";
                                readonly type: "string";
                            };
                            readonly ru: {
                                readonly title: "Ru";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["app_id", "title", "abbr", "category_id", "img", "url", "ru"];
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryGifts: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription: {
                    readonly title: "Subscription";
                    readonly type: "string";
                    readonly description: "Name of subscription.";
                    readonly enum: readonly ["discord_nitro", "discord_nitro_basic", "discord_nitro_trial", "telegram_premium"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_length: {
                    readonly title: "Subscription Length";
                    readonly type: "integer";
                    readonly description: "Length of subscription.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_period: {
                    readonly title: "Subscription Period";
                    readonly description: "In what notation is time measured.";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly gifts_item_id: {
                                readonly title: "Gifts";
                                readonly type: "integer";
                            };
                            readonly gifts_service: {
                                readonly title: "Gifts";
                                readonly type: "string";
                            };
                            readonly gifts_duration: {
                                readonly title: "Gifts";
                                readonly type: "integer";
                            };
                            readonly gifts_type: {
                                readonly title: "Gifts";
                                readonly type: "string";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly giftsSubscriptionName: {
                                readonly title: "Gifts Subscription Name";
                                readonly type: "string";
                            };
                            readonly giftsServiceName: {
                                readonly title: "Gifts Service Name";
                                readonly type: "string";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "gifts_item_id", "gifts_service", "gifts_duration", "gifts_type", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "giftsSubscriptionName", "giftsServiceName", "canViewAccountLink", "canChangePassword", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryInstagram: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cookies: {
                    readonly title: "Cookies";
                    readonly description: "Login by cookies.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly login_without_cookies: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Login Without Cookies";
                    readonly description: "Login without cookies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly followers_min: {
                    readonly title: "Followers Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of followers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly followers_max: {
                    readonly title: "Followers Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of followers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly post_min: {
                    readonly title: "Post Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of posts.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly post_max: {
                    readonly title: "Post Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of posts.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly instagram_item_id: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly instagram_id: {
                                readonly title: "Instagram";
                                readonly type: "string";
                            };
                            readonly instagram_follower_count: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly instagram_follow_count: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly instagram_post_count: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly instagram_country: {
                                readonly title: "Instagram";
                                readonly type: "string";
                            };
                            readonly instagram_username: {
                                readonly title: "Instagram";
                                readonly type: "string";
                            };
                            readonly instagram_mobile: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly instagram_register_date: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly instagram_has_cookies: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly instagram_login_without_cookies: {
                                readonly title: "Instagram";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "instagram_item_id", "instagram_id", "instagram_follower_count", "instagram_follow_count", "instagram_post_count", "instagram_country", "instagram_username", "instagram_mobile", "instagram_register_date", "instagram_has_cookies", "instagram_login_without_cookies", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryList: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly top_queries: {
                    readonly title: "Top Queries";
                    readonly type: "boolean";
                    readonly description: "Display top queries for per category.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Categories";
            readonly required: readonly ["category", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly category: {
                    readonly title: "Category";
                    readonly required: readonly ["category_description", "category_id", "category_title", "links"];
                    readonly type: "object";
                    readonly properties: {
                        readonly category_id: {
                            readonly title: "Category Id";
                            readonly type: "integer";
                        };
                        readonly category_title: {
                            readonly title: "Category Title";
                            readonly type: "string";
                        };
                        readonly category_description: {
                            readonly title: "Category Description";
                            readonly type: "string";
                        };
                        readonly links: {
                            readonly title: "Links";
                            readonly required: readonly ["detail", "permalink", "sub-categories", "sub-forums"];
                            readonly type: "object";
                            readonly properties: {
                                readonly permalink: {
                                    readonly title: "Permalink";
                                    readonly type: "string";
                                };
                                readonly detail: {
                                    readonly title: "Detail";
                                    readonly type: "string";
                                };
                                readonly "sub-categories": {
                                    readonly title: "Sub-Categories";
                                    readonly type: "string";
                                };
                                readonly "sub-forums": {
                                    readonly title: "Sub-Forums";
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryMihoyo: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email: {
                    readonly title: "Email";
                    readonly type: "string";
                    readonly description: "Has linked email.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly ea: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Ea";
                    readonly description: "Has linked external accounts.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly region: {
                    readonly title: "Region";
                    readonly type: "array";
                    readonly description: "Region.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["asia", "cht", "eu", "usa"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly not_region: {
                    readonly title: "Not Region";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["asia", "cht", "eu", "usa"];
                    };
                    readonly type: "array";
                    readonly description: "List of disallowed regions.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "genshin_character[]": {
                    readonly title: "Character";
                    readonly type: "array";
                    readonly description: "List of characters.";
                    readonly items: {
                        readonly type: "integer";
                        readonly enum: readonly [10000002, 10000003, 10000005, 10000006, 10000007, 10000014, 10000015, 10000016, 10000020, 10000021, 10000022, 10000023, 10000024, 10000025, 10000026, 10000027, 10000029, 10000030, 10000031, 10000032, 10000033, 10000034, 10000035, 10000036, 10000037, 10000038, 10000039, 10000041, 10000042, 10000043, 10000044, 10000045, 10000046, 10000047, 10000048, 10000049, 10000050, 10000051, 10000052, 10000053, 10000054, 10000055, 10000056, 10000057, 10000058, 10000059, 10000060, 10000061, 10000062, 10000063, 10000064, 10000065, 10000066, 10000067, 10000068, 10000069, 10000070, 10000071, 10000072, 10000073, 10000074, 10000075, 10000076, 10000077, 10000078, 10000079, 10000080, 10000081, 10000082, 10000083, 10000084, 10000085, 10000086, 10000087, 10000088, 10000089, 10000090, 10000091, 10000092, 10000093, 10000094, 10000095, 10000096, 10000097, 10000098, 10000099, 10000100, 10000101, 10000102, 10000103, 10000104, 10000105, 10000106, 10000107, 10000108, 10000109, 10000110, 10000111, 10000112, 10000113, 10000114, 10000115];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_character_constellations: {
                    readonly description: "List of minimum constellations on characters.";
                    readonly title: "Genshin Character Constellations";
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - character id\nValue - minimun constellations";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_character_constellations_max: {
                    readonly description: "List of maximum constellations on characters.";
                    readonly title: "Genshin Character Constellations Max";
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - character id\nValue - maximum constellations";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "genshin_weapon[]": {
                    readonly title: "Weapon";
                    readonly type: "array";
                    readonly description: "List of weapons.";
                    readonly items: {
                        readonly type: "integer";
                        readonly enum: readonly [11101, 11201, 11301, 11302, 11303, 11304, 11305, 11306, 11401, 11402, 11403, 11404, 11405, 11406, 11407, 11408, 11409, 11410, 11412, 11413, 11414, 11415, 11416, 11417, 11418, 11422, 11424, 11425, 11426, 11427, 11428, 11430, 11431, 11432, 11501, 11502, 11503, 11504, 11505, 11509, 11510, 11511, 11512, 11513, 11514, 11515, 11516, 11517, 12101, 12201, 12301, 12302, 12303, 12305, 12306, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12414, 12415, 12416, 12417, 12418, 12424, 12425, 12426, 12427, 12430, 12431, 12501, 12502, 12503, 12504, 12510, 12511, 12512, 12513, 12514, 13101, 13201, 13301, 13302, 13303, 13401, 13402, 13403, 13404, 13405, 13406, 13407, 13408, 13409, 13414, 13415, 13416, 13417, 13419, 13424, 13425, 13426, 13427, 13430, 13431, 13432, 13501, 13502, 13504, 13505, 13507, 13509, 13511, 13512, 13513, 13514, 14101, 14201, 14301, 14302, 14303, 14304, 14305, 14401, 14402, 14403, 14404, 14405, 14406, 14407, 14408, 14409, 14410, 14412, 14413, 14414, 14415, 14416, 14417, 14424, 14425, 14426, 14427, 14430, 14431, 14501, 14502, 14504, 14505, 14506, 14509, 14511, 14512, 14513, 14514, 14515, 14516, 14517, 14518, 14519, 15101, 15201, 15301, 15302, 15303, 15304, 15305, 15401, 15402, 15403, 15404, 15405, 15406, 15407, 15408, 15409, 15410, 15411, 15412, 15413, 15414, 15415, 15416, 15417, 15418, 15419, 15424, 15425, 15426, 15427, 15430, 15431, 15432, 15501, 15502, 15503, 15507, 15508, 15509, 15511, 15512, 15513, 15514];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_char_min: {
                    readonly title: "Char Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of characters.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_char_max: {
                    readonly title: "Char Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of characters.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_legendary_min: {
                    readonly title: "Legendary Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of legendary characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_legendary_max: {
                    readonly title: "Legendary Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of legendary characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_level_min: {
                    readonly title: "Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_level_max: {
                    readonly title: "Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_legendary_weapon_min: {
                    readonly title: "Legendary Weapon Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of legendary weapon characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_legendary_weapon_max: {
                    readonly title: "Legendary Weapon Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of legendary weapon characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly constellations_min: {
                    readonly title: "Constellations Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of constellations on legendary characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly constellations_max: {
                    readonly title: "Constellations Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of constellations on legendary characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_achievement_min: {
                    readonly title: "Achievements Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of achievements.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_achievement_max: {
                    readonly title: "Achievements Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of achievements.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_currency_min: {
                    readonly title: "Genshin Currency Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of primogems.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly genshin_currency_max: {
                    readonly title: "Genshin Currency Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of primogems.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "honkai_character[]": {
                    readonly title: "Character";
                    readonly type: "array";
                    readonly description: "List of characters.";
                    readonly items: {
                        readonly type: "integer";
                        readonly enum: readonly [1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1013, 1014, 1015, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1225, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1317, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_character_eidolons: {
                    readonly description: "List of minimum eidolons on characters.";
                    readonly title: "Honkai Character Eidolons";
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - character id\nValue - minimun eidolons";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_character_eidolons_max: {
                    readonly description: "List of maximum eidolons on characters.";
                    readonly title: "Honkai Character Eidolons Max";
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - character id\nValue - maximum eidolons";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "honkai_weapon[]": {
                    readonly title: "Weapon";
                    readonly type: "array";
                    readonly description: "List of weapons.";
                    readonly items: {
                        readonly type: "integer";
                        readonly enum: readonly [20000, 20001, 20002, 20003, 20004, 20005, 20006, 20007, 20008, 20009, 20010, 20011, 20012, 20013, 20014, 20015, 20016, 20017, 20018, 20019, 20020, 20021, 20022, 21000, 21001, 21002, 21003, 21004, 21005, 21006, 21007, 21008, 21009, 21010, 21011, 21012, 21013, 21014, 21015, 21016, 21017, 21018, 21019, 21020, 21021, 21022, 21023, 21024, 21025, 21026, 21027, 21028, 21029, 21030, 21031, 21032, 21033, 21034, 21035, 21036, 21037, 21038, 21039, 21040, 21041, 21042, 21043, 21044, 21045, 21046, 21047, 21048, 21050, 21051, 21052, 21053, 21054, 22000, 22001, 22002, 22003, 22004, 23000, 23001, 23002, 23003, 23004, 23005, 23006, 23007, 23008, 23009, 23010, 23011, 23012, 23013, 23014, 23015, 23016, 23017, 23018, 23019, 23020, 23021, 23022, 23023, 23024, 23025, 23026, 23027, 23028, 23029, 23030, 23031, 23032, 23033, 23034, 23035, 23036, 23037, 23038, 23039, 23040, 23041, 23042, 23043, 23044, 23045, 23046, 24000, 24001, 24002, 24003, 24004, 24005];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_char_min: {
                    readonly title: "Char Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of characters.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_char_max: {
                    readonly title: "Char Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of characters.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_legendary_min: {
                    readonly title: "Legendary Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of legendary characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_legendary_max: {
                    readonly title: "Legendary Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of legendary characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_level_min: {
                    readonly title: "Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_level_max: {
                    readonly title: "Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_legendary_weapon_min: {
                    readonly title: "Legendary Weapon Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of legendary weapon characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_legendary_weapon_max: {
                    readonly title: "Legendary Weapon Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of legendary weapon characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly eidolons_min: {
                    readonly title: "Constellations Max";
                    readonly type: "integer";
                    readonly description: "Minimum number of constellations on Honkai: Star Rail legendary characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly eidolons_max: {
                    readonly title: "Achievements Min";
                    readonly type: "integer";
                    readonly description: "Maximum number of legendary Honkai: Star Rail weapon characters.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_achievement_min: {
                    readonly title: "Achievements Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of achievements.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_achievement_max: {
                    readonly title: "Achievements Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of achievements.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_currency_min: {
                    readonly title: "Honkai Stellar Jade Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Stellar Jade.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly honkai_currency_max: {
                    readonly title: "Honkai Stellar Jade Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Stellar Jade.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "zenless_character[]": {
                    readonly title: "Zenless Character";
                    readonly type: "array";
                    readonly description: "List of Zenless Zone Zero characters.";
                    readonly items: {
                        readonly type: "integer";
                        readonly enum: readonly [1011, 1021, 1031, 1041, 1061, 1071, 1081, 1091, 1101, 1111, 1121, 1131, 1141, 1151, 1161, 1171, 1181, 1191, 1201, 1211, 1221, 1241, 1251, 1261, 1271, 1281, 1291, 1311, 1321, 1331, 1351, 1361, 1371, 1381, 1391, 1411, 1421];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_character_cinemas: {
                    readonly description: "List of minimum cinemas on characters.";
                    readonly title: "Zenless Character Cinemas";
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - character id\nValue - minimun cinemas";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_character_cinemas_max: {
                    readonly description: "List of maximum cinemas on characters.";
                    readonly title: "Zenless Character Cinemas Max";
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - character id\nValue - maximum cinemas";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "zenless_weapon[]": {
                    readonly title: "Zenless Weapon";
                    readonly type: "array";
                    readonly description: "List of Zenless Zone Zero weapons.";
                    readonly items: {
                        readonly type: "integer";
                        readonly enum: readonly [12001, 12002, 12003, 12004, 12005, 12006, 12007, 12008, 12009, 12010, 12011, 12012, 12013, 12014, 12015, 13001, 13002, 13003, 13004, 13005, 13006, 13007, 13008, 13009, 13010, 13011, 13012, 13013, 13014, 13015, 13016, 13101, 13103, 13106, 13108, 13111, 13112, 13113, 13115, 13127, 13128, 13135, 13142, 14001, 14002, 14003, 14102, 14104, 14107, 14109, 14110, 14114, 14116, 14117, 14118, 14119, 14120, 14121, 14122, 14124, 14125, 14126, 14129, 14131, 14132, 14133, 14136, 14137, 14138, 14139];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_legendary_min: {
                    readonly title: "Zenless Legendary Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Zenless Zone Zero legendary characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_legendary_max: {
                    readonly title: "Zenless Legendary Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Zenless Zone Zero legendary characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cinemas_min: {
                    readonly title: "Cinemas Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of cinemas on Zenless Zone Zero characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cinemas_max: {
                    readonly title: "Cinemas Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of cinemas on Zenless Zone Zero characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_legendary_weapon_min: {
                    readonly title: "Zenless Legendary Weapon Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of legendary Zenless Zone Zero weapon characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_legendary_weapon_max: {
                    readonly title: "Zenless Legendary Weapon Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of legendary Zenless Zone Zero weapon characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_char_min: {
                    readonly title: "Zenless Char Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Zenless Zone Zero characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_char_max: {
                    readonly title: "Zenless Char Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Zenless Zone Zero characters.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_level_min: {
                    readonly title: "Zenless Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum Zenless Zone Zero level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_level_max: {
                    readonly title: "Zenless Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum Zenless Zone Zero level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_achievement_min: {
                    readonly title: "Zenless Achievement Min";
                    readonly type: "integer";
                    readonly description: "Minimum count of Zenless Zone Zero achievements.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_achievement_max: {
                    readonly title: "Zenless Achievement Max";
                    readonly type: "integer";
                    readonly description: "Maximum count of Zenless Zone Zero achievements.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_currency_min: {
                    readonly title: "Zenless Currency Min";
                    readonly type: "integer";
                    readonly description: "Minimum count of Zenless Zone Zero polychrome.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly zenless_currency_max: {
                    readonly title: "Zenless Currency Max";
                    readonly type: "integer";
                    readonly description: "Maximum count of Zenless Zone Zero polychrome.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly description: "Number of days the account has been offline.";
                    readonly title: "Daybreak";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly mihoyo_item_id: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_id: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_email: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_has_linked_accounts: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_region: {
                                readonly title: "Mihoyo";
                                readonly type: "string";
                            };
                            readonly mihoyo_last_activity: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_level: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_character_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_achievement_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_abyss_process: {
                                readonly title: "Mihoyo";
                                readonly type: "string";
                            };
                            readonly mihoyo_genshin_legendary_characters_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_constellations_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_legendary_weapons_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_activity_days: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_genshin_currency: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_level: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_character_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_achievement_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_abyss_process: {
                                readonly title: "Mihoyo";
                                readonly type: "string";
                            };
                            readonly mihoyo_honkai_legendary_characters_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_eidolons_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_legendary_weapons_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_activity_days: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_honkai_currency: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_level: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_character_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_achievement_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_abyss_process: {
                                readonly title: "Mihoyo";
                                readonly type: "string";
                            };
                            readonly mihoyo_zenless_legendary_characters_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_cinemas_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_legendary_weapons_count: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_activity_days: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly mihoyo_zenless_currency: {
                                readonly title: "Mihoyo";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly mihoyoRegionPhrase: {
                                readonly title: "Mihoyo Region Phrase";
                                readonly type: "string";
                            };
                            readonly mihoyoLinkedAccounts: {
                                readonly title: "Mihoyo Linked Accounts";
                                readonly type: "object";
                                readonly properties: {
                                    readonly links: {
                                        readonly title: "Links";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly legacy: {
                                        readonly title: "Legacy";
                                        readonly type: "boolean";
                                    };
                                };
                                readonly required: readonly ["links", "legacy"];
                            };
                            readonly mihoyoLinkedAccountsString: {
                                readonly title: "Mihoyo Linked Accounts String";
                                readonly type: "string";
                            };
                            readonly honkaiCharacters: {
                                readonly title: "Honkai Characters";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "integer";
                                        };
                                        readonly level: {
                                            readonly title: "Level";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "Name";
                                            readonly type: "string";
                                        };
                                        readonly element: {
                                            readonly title: "Element";
                                            readonly type: "string";
                                        };
                                        readonly icon: {
                                            readonly title: "Icon";
                                            readonly type: "string";
                                        };
                                        readonly rarity: {
                                            readonly title: "Rarity";
                                            readonly type: "integer";
                                        };
                                        readonly rank: {
                                            readonly title: "Rank";
                                            readonly type: "integer";
                                        };
                                        readonly image: {
                                            readonly title: "Image";
                                            readonly type: "string";
                                        };
                                        readonly equip: {
                                            readonly title: "Equip";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly title: "Id";
                                                    readonly type: "integer";
                                                };
                                                readonly level: {
                                                    readonly title: "Level";
                                                    readonly type: "integer";
                                                };
                                                readonly rank: {
                                                    readonly title: "Rank";
                                                    readonly type: "integer";
                                                };
                                                readonly name: {
                                                    readonly title: "Name";
                                                    readonly type: "string";
                                                };
                                                readonly desc: {
                                                    readonly title: "Desc";
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly title: "Icon";
                                                    readonly type: "string";
                                                };
                                                readonly rarity: {
                                                    readonly title: "Rarity";
                                                    readonly type: "integer";
                                                };
                                            };
                                            readonly required: readonly ["id", "level", "rank", "name", "desc", "icon", "rarity"];
                                        };
                                        readonly relics: {
                                            readonly title: "Relics";
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly title: "Id";
                                                        readonly type: "integer";
                                                    };
                                                    readonly level: {
                                                        readonly title: "Level";
                                                        readonly type: "integer";
                                                    };
                                                    readonly pos: {
                                                        readonly title: "Pos";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "Name";
                                                        readonly type: "string";
                                                    };
                                                    readonly desc: {
                                                        readonly title: "Desc";
                                                        readonly type: "string";
                                                    };
                                                    readonly icon: {
                                                        readonly title: "Icon";
                                                        readonly type: "string";
                                                    };
                                                    readonly rarity: {
                                                        readonly title: "Rarity";
                                                        readonly type: "integer";
                                                    };
                                                    readonly main_property: {
                                                        readonly title: "Main";
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly property_type: {
                                                                readonly title: "Property";
                                                                readonly type: "integer";
                                                            };
                                                            readonly value: {
                                                                readonly title: "Value";
                                                                readonly type: "string";
                                                            };
                                                            readonly times: {
                                                                readonly title: "Times";
                                                                readonly type: "integer";
                                                            };
                                                        };
                                                        readonly required: readonly ["property_type", "value", "times"];
                                                    };
                                                    readonly properties: {
                                                        readonly title: "Properties";
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly property_type: {
                                                                    readonly title: "Property";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly value: {
                                                                    readonly title: "Value";
                                                                    readonly type: "string";
                                                                };
                                                                readonly times: {
                                                                    readonly title: "Times";
                                                                    readonly type: "integer";
                                                                };
                                                            };
                                                            readonly required: readonly ["property_type", "value", "times"];
                                                        };
                                                    };
                                                };
                                                readonly required: readonly ["id", "level", "pos", "name", "desc", "icon", "rarity", "main_property", "properties"];
                                            };
                                        };
                                        readonly ornaments: {
                                            readonly title: "Ornaments";
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly title: "Id";
                                                        readonly type: "integer";
                                                    };
                                                    readonly level: {
                                                        readonly title: "Level";
                                                        readonly type: "integer";
                                                    };
                                                    readonly pos: {
                                                        readonly title: "Pos";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "Name";
                                                        readonly type: "string";
                                                    };
                                                    readonly desc: {
                                                        readonly title: "Desc";
                                                        readonly type: "string";
                                                    };
                                                    readonly icon: {
                                                        readonly title: "Icon";
                                                        readonly type: "string";
                                                    };
                                                    readonly rarity: {
                                                        readonly title: "Rarity";
                                                        readonly type: "integer";
                                                    };
                                                    readonly main_property: {
                                                        readonly title: "Main";
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly property_type: {
                                                                readonly title: "Property";
                                                                readonly type: "integer";
                                                            };
                                                            readonly value: {
                                                                readonly title: "Value";
                                                                readonly type: "string";
                                                            };
                                                            readonly times: {
                                                                readonly title: "Times";
                                                                readonly type: "integer";
                                                            };
                                                        };
                                                        readonly required: readonly ["property_type", "value", "times"];
                                                    };
                                                    readonly properties: {
                                                        readonly title: "Properties";
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly property_type: {
                                                                    readonly title: "Property";
                                                                    readonly type: "integer";
                                                                };
                                                                readonly value: {
                                                                    readonly title: "Value";
                                                                    readonly type: "string";
                                                                };
                                                                readonly times: {
                                                                    readonly title: "Times";
                                                                    readonly type: "integer";
                                                                };
                                                            };
                                                            readonly required: readonly ["property_type", "value", "times"];
                                                        };
                                                    };
                                                };
                                                readonly required: readonly ["id", "level", "pos", "name", "desc", "icon", "rarity", "main_property", "properties"];
                                            };
                                        };
                                        readonly base_type: {
                                            readonly title: "Base";
                                            readonly type: "integer";
                                        };
                                        readonly figure_path: {
                                            readonly title: "Figure";
                                            readonly type: "string";
                                        };
                                        readonly elementImage: {
                                            readonly title: "Element Image";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "level", "name", "element", "icon", "rarity", "rank", "image", "equip", "relics", "ornaments", "base_type", "figure_path", "elementImage"];
                                };
                            };
                            readonly genshinCharacters: {
                                readonly title: "Genshin Characters";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "integer";
                                        };
                                        readonly image: {
                                            readonly title: "Image";
                                            readonly type: "string";
                                        };
                                        readonly icon: {
                                            readonly title: "Icon";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "Name";
                                            readonly type: "string";
                                        };
                                        readonly element: {
                                            readonly title: "Element";
                                            readonly type: "string";
                                        };
                                        readonly fetter: {
                                            readonly title: "Fetter";
                                            readonly type: "integer";
                                        };
                                        readonly level: {
                                            readonly title: "Level";
                                            readonly type: "integer";
                                        };
                                        readonly rarity: {
                                            readonly title: "Rarity";
                                            readonly type: "integer";
                                        };
                                        readonly weapon: {
                                            readonly title: "Weapon";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly title: "Id";
                                                    readonly type: "integer";
                                                };
                                                readonly name: {
                                                    readonly title: "Name";
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly title: "Icon";
                                                    readonly type: "string";
                                                };
                                                readonly type: {
                                                    readonly title: "Type";
                                                    readonly type: "integer";
                                                };
                                                readonly rarity: {
                                                    readonly title: "Rarity";
                                                    readonly type: "integer";
                                                };
                                                readonly level: {
                                                    readonly title: "Level";
                                                    readonly type: "integer";
                                                };
                                                readonly promote_level: {
                                                    readonly title: "Promote";
                                                    readonly type: "integer";
                                                };
                                                readonly type_name: {
                                                    readonly title: "Type";
                                                    readonly type: "string";
                                                };
                                                readonly desc: {
                                                    readonly title: "Desc";
                                                    readonly type: "string";
                                                };
                                                readonly affix_level: {
                                                    readonly title: "Affix";
                                                    readonly type: "integer";
                                                };
                                            };
                                            readonly required: readonly ["id", "name", "icon", "type", "rarity", "level", "promote_level", "type_name", "desc", "affix_level"];
                                        };
                                        readonly reliquaries: {
                                            readonly title: "Reliquaries";
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly title: "Id";
                                                        readonly type: "integer";
                                                    };
                                                    readonly name: {
                                                        readonly title: "Name";
                                                        readonly type: "string";
                                                    };
                                                    readonly icon: {
                                                        readonly title: "Icon";
                                                        readonly type: "string";
                                                    };
                                                    readonly pos: {
                                                        readonly title: "Pos";
                                                        readonly type: "integer";
                                                    };
                                                    readonly rarity: {
                                                        readonly title: "Rarity";
                                                        readonly type: "integer";
                                                    };
                                                    readonly level: {
                                                        readonly title: "Level";
                                                        readonly type: "integer";
                                                    };
                                                    readonly pos_name: {
                                                        readonly title: "Pos";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["id", "name", "icon", "pos", "rarity", "level", "pos_name"];
                                            };
                                        };
                                        readonly actived_constellation_num: {
                                            readonly title: "Actived";
                                            readonly type: "integer";
                                        };
                                        readonly costumes: {
                                            readonly title: "Costumes";
                                            readonly type: "array";
                                            readonly items: {};
                                        };
                                        readonly external: {
                                            readonly title: "External";
                                        };
                                        readonly background: {
                                            readonly title: "Background";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "image", "icon", "name", "element", "fetter", "level", "rarity", "weapon", "reliquaries", "actived_constellation_num", "costumes", "external", "background"];
                                };
                            };
                            readonly zenlessCharacters: {
                                readonly title: "Zenless Characters";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "integer";
                                        };
                                        readonly level: {
                                            readonly title: "Level";
                                            readonly type: "integer";
                                        };
                                        readonly name_mi18n: {
                                            readonly title: "Name";
                                            readonly type: "string";
                                        };
                                        readonly full_name_mi18n: {
                                            readonly title: "Full";
                                            readonly type: "string";
                                        };
                                        readonly element_type: {
                                            readonly title: "Element";
                                            readonly type: "integer";
                                        };
                                        readonly camp_name_mi18n: {
                                            readonly title: "Camp";
                                            readonly type: "string";
                                        };
                                        readonly avatar_profession: {
                                            readonly title: "Avatar";
                                            readonly type: "integer";
                                        };
                                        readonly rarity: {
                                            readonly title: "Rarity";
                                            readonly type: "integer";
                                        };
                                        readonly weapon: {
                                            readonly title: "Weapon";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly title: "Id";
                                                    readonly type: "integer";
                                                };
                                                readonly level: {
                                                    readonly title: "Level";
                                                    readonly type: "integer";
                                                };
                                                readonly name: {
                                                    readonly title: "Name";
                                                    readonly type: "string";
                                                };
                                                readonly star: {
                                                    readonly title: "Star";
                                                    readonly type: "integer";
                                                };
                                                readonly icon: {
                                                    readonly title: "Icon";
                                                    readonly type: "string";
                                                };
                                                readonly rarity: {
                                                    readonly title: "Rarity";
                                                    readonly type: "integer";
                                                };
                                                readonly properties: {
                                                    readonly title: "Properties";
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly property_name: {
                                                                readonly title: "Property";
                                                                readonly type: "string";
                                                            };
                                                            readonly property_id: {
                                                                readonly title: "Property";
                                                                readonly type: "integer";
                                                            };
                                                            readonly base: {
                                                                readonly title: "Base";
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["property_name", "property_id", "base"];
                                                    };
                                                };
                                                readonly main_properties: {
                                                    readonly title: "Main";
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly property_name: {
                                                                readonly title: "Property";
                                                                readonly type: "string";
                                                            };
                                                            readonly property_id: {
                                                                readonly title: "Property";
                                                                readonly type: "integer";
                                                            };
                                                            readonly base: {
                                                                readonly title: "Base";
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["property_name", "property_id", "base"];
                                                    };
                                                };
                                                readonly talent_title: {
                                                    readonly title: "Talent";
                                                    readonly type: "string";
                                                };
                                                readonly talent_content: {
                                                    readonly title: "Talent";
                                                    readonly type: "string";
                                                };
                                                readonly profession: {
                                                    readonly title: "Profession";
                                                    readonly type: "integer";
                                                };
                                                readonly starIcon: {
                                                    readonly title: "Star Icon";
                                                    readonly type: "string";
                                                };
                                                readonly rarityIcon: {
                                                    readonly title: "Rarity Icon";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["id", "level", "name", "star", "icon", "rarity", "properties", "main_properties", "talent_title", "talent_content", "profession", "starIcon", "rarityIcon"];
                                        };
                                        readonly rank: {
                                            readonly title: "Rank";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "Name";
                                            readonly type: "string";
                                        };
                                        readonly rarityIcon: {
                                            readonly title: "Rarity Icon";
                                            readonly type: "string";
                                        };
                                        readonly elementIcon: {
                                            readonly title: "Element Icon";
                                            readonly type: "string";
                                        };
                                        readonly professionIcon: {
                                            readonly title: "Profession Icon";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "level", "name_mi18n", "full_name_mi18n", "element_type", "camp_name_mi18n", "avatar_profession", "rarity", "weapon", "rank", "name", "rarityIcon", "elementIcon", "professionIcon"];
                                };
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "mihoyo_item_id", "mihoyo_id", "mihoyo_email", "mihoyo_has_linked_accounts", "mihoyo_region", "mihoyo_last_activity", "mihoyo_genshin_level", "mihoyo_genshin_character_count", "mihoyo_genshin_achievement_count", "mihoyo_genshin_abyss_process", "mihoyo_genshin_legendary_characters_count", "mihoyo_genshin_constellations_count", "mihoyo_genshin_legendary_weapons_count", "mihoyo_genshin_activity_days", "mihoyo_genshin_currency", "mihoyo_honkai_level", "mihoyo_honkai_character_count", "mihoyo_honkai_achievement_count", "mihoyo_honkai_abyss_process", "mihoyo_honkai_legendary_characters_count", "mihoyo_honkai_eidolons_count", "mihoyo_honkai_legendary_weapons_count", "mihoyo_honkai_activity_days", "mihoyo_honkai_currency", "mihoyo_zenless_level", "mihoyo_zenless_character_count", "mihoyo_zenless_achievement_count", "mihoyo_zenless_abyss_process", "mihoyo_zenless_legendary_characters_count", "mihoyo_zenless_cinemas_count", "mihoyo_zenless_legendary_weapons_count", "mihoyo_zenless_activity_days", "mihoyo_zenless_currency", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "mihoyoRegionPhrase", "mihoyoLinkedAccounts", "mihoyoLinkedAccountsString", "honkaiCharacters", "genshinCharacters", "zenlessCharacters", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryMinecraft: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription: {
                    readonly title: "Subscription";
                    readonly type: "string";
                    readonly description: "Name of subscription.";
                    readonly enum: readonly ["PC Game Pass", "Xbox Game Pass Ultimate"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_length: {
                    readonly title: "Subscription Length";
                    readonly type: "integer";
                    readonly description: "Length of subscription.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_period: {
                    readonly title: "Subscription Period";
                    readonly description: "In what notation is time measured.";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly autorenewal: {
                    readonly description: "Is auto renewal enabled.";
                    readonly title: "Autorenewal";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly java: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has java edition.";
                };
                readonly bedrock: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has bedrock edition.";
                };
                readonly dungeons: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has Minecraft Dungeons.";
                };
                readonly legends: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has Minecraft Legends.";
                };
                readonly change_nickname: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Can change nickname.";
                };
                readonly "capes[]": {
                    readonly title: "Capes";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of capes.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly capes_min: {
                    readonly title: "Capes Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of capes.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly capes_max: {
                    readonly title: "Capes Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of capes.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hypixel_ban: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has active Hypixel ban.";
                };
                readonly hypixel_skyblock_api_enabled: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Is API enabled in Hypixel Skyblock.";
                    readonly title: "Hypixel Skyblock Api Enabled";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "rank_hypixel[]": {
                    readonly title: "Rank Hypixel";
                    readonly type: "array";
                    readonly description: "Rank on hypixel.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["MVP", "MVP+", "MVP++", "VIP", "VIP+", "YOUTUBE"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly level_hypixel_min: {
                    readonly title: "Level Hypixel Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of level hypixel.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly level_hypixel_max: {
                    readonly title: "Level Hypixel Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of level hypixel.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly achievement_hypixel_min: {
                    readonly title: "Achievement Hypixel Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of achievement hypixel.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly achievement_hypixel_max: {
                    readonly title: "Achievement Hypixel Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of achievement hypixel.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly level_hypixel_skyblock_min: {
                    readonly title: "Level Hypixel Skyblock Min";
                    readonly type: "integer";
                    readonly description: "Minimum level on Hypixel SkyBlock.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly level_hypixel_skyblock_max: {
                    readonly title: "Level Hypixel Skyblock Max";
                    readonly type: "integer";
                    readonly description: "Maximum level on Hypixel SkyBlock.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly net_worth_hypixel_skyblock_min: {
                    readonly title: "Net Worth Hypixel Skyblock Min";
                    readonly type: "integer";
                    readonly description: "Minimum net worth on Hypixel SkyBlock.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly net_worth_hypixel_skyblock_max: {
                    readonly title: "Net Worth Hypixel Skyblock Max";
                    readonly type: "integer";
                    readonly description: "Maximum net worth on Hypixel SkyBlock.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_login_hypixel: {
                    readonly title: "Last Login Hypixel";
                    readonly type: "integer";
                    readonly description: "How old is the last login account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_login_hypixel_period: {
                    readonly title: "Last Login Hypixel Period";
                    readonly type: "string";
                    readonly description: "In what notation is time measured.";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly can_change_details: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Can change details.";
                };
                readonly nickname_length_min: {
                    readonly description: "Minimum number of characters in nickname.";
                    readonly title: "Nickname Length Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nickname_length_max: {
                    readonly description: "Maximum number of characters in nickname.";
                    readonly title: "Nickname Length Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hypixel_ban_parsed: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Was Hypixel ban parsed by Market.";
                    readonly title: "Hypixel Ban Parsed";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly minecraft_item_id: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_id: {
                                readonly title: "Minecraft";
                                readonly type: "string";
                            };
                            readonly minecraft_nickname: {
                                readonly title: "Minecraft";
                                readonly type: "string";
                            };
                            readonly minecraft_country: {
                                readonly title: "Minecraft";
                                readonly type: "string";
                            };
                            readonly minecraft_skin: {
                                readonly title: "Minecraft";
                                readonly type: "string";
                            };
                            readonly minecraft_java: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_bedrock: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_can_change_nickname: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_created_at: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_hypixel_rank: {
                                readonly title: "Minecraft";
                                readonly type: "string";
                            };
                            readonly minecraft_hypixel_level: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_hypixel_achievement: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_hypixel_last_login: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_hypixel_ban: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_hypixel_ban_reason: {
                                readonly title: "Minecraft";
                                readonly type: "string";
                            };
                            readonly minecraft_hypixel_skyblock_level: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_hypixel_skyblock_net_worth: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_dungeons: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_legends: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_capes_count: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_capes: {
                                readonly title: "Minecraft";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly minecraft_subscription_name: {
                                readonly title: "Minecraft";
                                readonly type: "string";
                            };
                            readonly minecraft_subscription_ends: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_subscription_auto_renew: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly minecraft_email_reset_date: {
                                readonly title: "Minecraft";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly minecraftHasPaidLicense: {
                                readonly title: "Minecraft Has Paid License";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "minecraft_item_id", "minecraft_id", "minecraft_nickname", "minecraft_country", "minecraft_skin", "minecraft_java", "minecraft_bedrock", "minecraft_can_change_nickname", "minecraft_created_at", "minecraft_hypixel_rank", "minecraft_hypixel_level", "minecraft_hypixel_achievement", "minecraft_hypixel_last_login", "minecraft_hypixel_ban", "minecraft_hypixel_ban_reason", "minecraft_hypixel_skyblock_level", "minecraft_hypixel_skyblock_net_worth", "minecraft_dungeons", "minecraft_legends", "minecraft_capes_count", "minecraft_capes", "minecraft_subscription_name", "minecraft_subscription_ends", "minecraft_subscription_auto_renew", "minecraft_email_reset_date", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "minecraftHasPaidLicense", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryParams: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly categoryName: {
                    readonly title: "Category Name";
                    readonly type: "string";
                    readonly default: "steam";
                    readonly enum: readonly ["steam", "fortnite", "genshin-impact", "riot", "telegram", "supercell", "ea", "world-of-tanks", "wot-blitz", "gifts", "epicgames", "escape-from-tarkov", "socialclub", "uplay", "war-thunder", "discord", "tiktok", "instagram", "battlenet", "chatgpt", "vpn", "warface", "minecraft"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Category name.";
                };
            };
            readonly required: readonly ["categoryName"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Category";
            readonly type: "object";
            readonly properties: {
                readonly category: {
                    readonly title: "Category";
                    readonly type: "object";
                    readonly properties: {
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly sub_category_id: {
                            readonly title: "Sub";
                            readonly type: "integer";
                        };
                        readonly category_order: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly category_title: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly category_name: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly category_url: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly category_description_html: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly category_login_url: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly add_item_available: {
                            readonly title: "Add";
                            readonly type: "integer";
                        };
                        readonly mass_upload_item_available: {
                            readonly title: "Mass";
                            readonly type: "integer";
                        };
                        readonly has_guarantee: {
                            readonly title: "Has";
                            readonly type: "integer";
                        };
                        readonly has_account_link: {
                            readonly title: "Has";
                            readonly type: "integer";
                        };
                        readonly require_temp_email: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly recovery_link: {
                            readonly title: "Recovery";
                            readonly type: "string";
                        };
                        readonly check_button_enabled: {
                            readonly title: "Check";
                            readonly type: "integer";
                        };
                        readonly checker_enabled: {
                            readonly title: "Checker";
                            readonly type: "integer";
                        };
                        readonly support_personal_proxy: {
                            readonly title: "Support";
                            readonly type: "integer";
                        };
                        readonly support_email_login_data: {
                            readonly title: "Support";
                            readonly type: "integer";
                        };
                        readonly require_email_login_data: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly display_in_list: {
                            readonly title: "Display";
                            readonly type: "integer";
                        };
                        readonly category_description_html_en: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly category_h1_html_en: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly account_price_min: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly require_video_recording: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly top_queries: {
                            readonly title: "Top";
                            readonly type: "string";
                        };
                        readonly require_eld_for_native_accs: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly can_be_resold: {
                            readonly title: "Can";
                            readonly type: "integer";
                        };
                        readonly support_temp_email: {
                            readonly title: "Support";
                            readonly type: "integer";
                        };
                        readonly cookies: {
                            readonly title: "Cookies";
                            readonly type: "string";
                        };
                        readonly login_type: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly guest_hidden: {
                            readonly title: "Guest";
                            readonly type: "integer";
                        };
                        readonly available_temp_email: {
                            readonly title: "Available";
                            readonly type: "integer";
                        };
                        readonly resale_duration_limit_days: {
                            readonly title: "Resale";
                            readonly type: "integer";
                        };
                        readonly buy_without_validation: {
                            readonly title: "Buy";
                            readonly type: "integer";
                        };
                        readonly max_invalid_upload_tries: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                    };
                    readonly required: readonly ["category_id", "sub_category_id", "category_order", "category_title", "category_name", "category_url", "category_description_html", "category_login_url", "add_item_available", "mass_upload_item_available", "has_guarantee", "has_account_link", "require_temp_email", "recovery_link", "check_button_enabled", "checker_enabled", "support_personal_proxy", "support_email_login_data", "require_email_login_data", "display_in_list", "category_description_html_en", "category_h1_html_en", "account_price_min", "require_video_recording", "top_queries", "require_eld_for_native_accs", "can_be_resold", "support_temp_email", "cookies", "login_type", "guest_hidden", "available_temp_email", "resale_duration_limit_days", "buy_without_validation", "max_invalid_upload_tries"];
                };
                readonly params: {
                    readonly title: "Params";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly title: "Name";
                                readonly type: "string";
                            };
                            readonly input: {
                                readonly title: "Input";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly values: {
                                readonly title: "Values";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["name", "input", "description", "values"];
                    };
                };
                readonly base_params: {
                    readonly title: "Base";
                    readonly type: "object";
                    readonly properties: {
                        readonly "0": {
                            readonly title: "";
                            readonly type: "object";
                            readonly properties: {
                                readonly name: {
                                    readonly title: "Name";
                                    readonly type: "string";
                                };
                                readonly input: {
                                    readonly title: "Input";
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly title: "Description";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["name", "input", "description"];
                        };
                    };
                    readonly required: readonly ["0"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryRiot: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rmin: {
                    readonly title: "R Min";
                    readonly type: "integer";
                    readonly description: "Minimum valorant rank.";
                    readonly "x-enumDescriptions": {
                        readonly "3": "Iron 1";
                        readonly "4": "Iron 2";
                        readonly "5": "Iron 3";
                        readonly "6": "Bronze 1";
                        readonly "7": "Bronze 2";
                        readonly "8": "Bronze 3";
                        readonly "9": "Silver 1";
                        readonly "10": "Silver 2";
                        readonly "11": "Silver 3";
                        readonly "12": "Gold 1";
                        readonly "13": "Gold 2";
                        readonly "14": "Gold 3";
                        readonly "15": "Platinum 1";
                        readonly "16": "Platinum 2";
                        readonly "17": "Platinum 3";
                        readonly "18": "Diamond 1";
                        readonly "19": "Diamond 2";
                        readonly "20": "Diamond 3";
                        readonly "21": "Ascendant 1";
                        readonly "22": "Ascendant 2";
                        readonly "23": "Ascendant 3";
                        readonly "24": "Immortal 1";
                        readonly "25": "Immortal 2";
                        readonly "26": "Immortal 3";
                        readonly "27": "Radiant";
                    };
                    readonly minimum: 3;
                    readonly maximum: 27;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rmax: {
                    readonly title: "R Max";
                    readonly type: "integer";
                    readonly description: "Maximum valorant rank.";
                    readonly "x-enumDescriptions": {
                        readonly "3": "Iron 1";
                        readonly "4": "Iron 2";
                        readonly "5": "Iron 3";
                        readonly "6": "Bronze 1";
                        readonly "7": "Bronze 2";
                        readonly "8": "Bronze 3";
                        readonly "9": "Silver 1";
                        readonly "10": "Silver 2";
                        readonly "11": "Silver 3";
                        readonly "12": "Gold 1";
                        readonly "13": "Gold 2";
                        readonly "14": "Gold 3";
                        readonly "15": "Platinum 1";
                        readonly "16": "Platinum 2";
                        readonly "17": "Platinum 3";
                        readonly "18": "Diamond 1";
                        readonly "19": "Diamond 2";
                        readonly "20": "Diamond 3";
                        readonly "21": "Ascendant 1";
                        readonly "22": "Ascendant 2";
                        readonly "23": "Ascendant 3";
                        readonly "24": "Immortal 1";
                        readonly "25": "Immortal 2";
                        readonly "26": "Immortal 3";
                        readonly "27": "Radiant";
                    };
                    readonly minimum: 3;
                    readonly maximum: 27;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_rmin: {
                    readonly title: "Last R Min";
                    readonly type: "integer";
                    readonly description: "Last minimum valorant rank.";
                    readonly "x-enumDescriptions": {
                        readonly "3": "Iron 1";
                        readonly "4": "Iron 2";
                        readonly "5": "Iron 3";
                        readonly "6": "Bronze 1";
                        readonly "7": "Bronze 2";
                        readonly "8": "Bronze 3";
                        readonly "9": "Silver 1";
                        readonly "10": "Silver 2";
                        readonly "11": "Silver 3";
                        readonly "12": "Gold 1";
                        readonly "13": "Gold 2";
                        readonly "14": "Gold 3";
                        readonly "15": "Platinum 1";
                        readonly "16": "Platinum 2";
                        readonly "17": "Platinum 3";
                        readonly "18": "Diamond 1";
                        readonly "19": "Diamond 2";
                        readonly "20": "Diamond 3";
                        readonly "21": "Ascendant 1";
                        readonly "22": "Ascendant 2";
                        readonly "23": "Ascendant 3";
                        readonly "24": "Immortal 1";
                        readonly "25": "Immortal 2";
                        readonly "26": "Immortal 3";
                        readonly "27": "Radiant";
                    };
                    readonly minimum: 3;
                    readonly maximum: 27;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_rmax: {
                    readonly title: "Last R Max";
                    readonly type: "integer";
                    readonly description: "Last maximum valorant rank.";
                    readonly "x-enumDescriptions": {
                        readonly "3": "Iron 1";
                        readonly "4": "Iron 2";
                        readonly "5": "Iron 3";
                        readonly "6": "Bronze 1";
                        readonly "7": "Bronze 2";
                        readonly "8": "Bronze 3";
                        readonly "9": "Silver 1";
                        readonly "10": "Silver 2";
                        readonly "11": "Silver 3";
                        readonly "12": "Gold 1";
                        readonly "13": "Gold 2";
                        readonly "14": "Gold 3";
                        readonly "15": "Platinum 1";
                        readonly "16": "Platinum 2";
                        readonly "17": "Platinum 3";
                        readonly "18": "Diamond 1";
                        readonly "19": "Diamond 2";
                        readonly "20": "Diamond 3";
                        readonly "21": "Ascendant 1";
                        readonly "22": "Ascendant 2";
                        readonly "23": "Ascendant 3";
                        readonly "24": "Immortal 1";
                        readonly "25": "Immortal 2";
                        readonly "26": "Immortal 3";
                        readonly "27": "Radiant";
                    };
                    readonly minimum: 3;
                    readonly maximum: 27;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly previous_rmin: {
                    readonly title: "Previous Rmin";
                    readonly type: "integer";
                    readonly "x-enumDescriptions": {
                        readonly "3": "Iron 1";
                        readonly "4": "Iron 2";
                        readonly "5": "Iron 3";
                        readonly "6": "Bronze 1";
                        readonly "7": "Bronze 2";
                        readonly "8": "Bronze 3";
                        readonly "9": "Silver 1";
                        readonly "10": "Silver 2";
                        readonly "11": "Silver 3";
                        readonly "12": "Gold 1";
                        readonly "13": "Gold 2";
                        readonly "14": "Gold 3";
                        readonly "15": "Platinum 1";
                        readonly "16": "Platinum 2";
                        readonly "17": "Platinum 3";
                        readonly "18": "Diamond 1";
                        readonly "19": "Diamond 2";
                        readonly "20": "Diamond 3";
                        readonly "21": "Ascendant 1";
                        readonly "22": "Ascendant 2";
                        readonly "23": "Ascendant 3";
                        readonly "24": "Immortal 1";
                        readonly "25": "Immortal 2";
                        readonly "26": "Immortal 3";
                        readonly "27": "Radiant";
                    };
                    readonly description: "Previous minimum rank.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly previous_rmax: {
                    readonly title: "Previous Rmax";
                    readonly type: "integer";
                    readonly "x-enumDescriptions": {
                        readonly "3": "Iron 1";
                        readonly "4": "Iron 2";
                        readonly "5": "Iron 3";
                        readonly "6": "Bronze 1";
                        readonly "7": "Bronze 2";
                        readonly "8": "Bronze 3";
                        readonly "9": "Silver 1";
                        readonly "10": "Silver 2";
                        readonly "11": "Silver 3";
                        readonly "12": "Gold 1";
                        readonly "13": "Gold 2";
                        readonly "14": "Gold 3";
                        readonly "15": "Platinum 1";
                        readonly "16": "Platinum 2";
                        readonly "17": "Platinum 3";
                        readonly "18": "Diamond 1";
                        readonly "19": "Diamond 2";
                        readonly "20": "Diamond 3";
                        readonly "21": "Ascendant 1";
                        readonly "22": "Ascendant 2";
                        readonly "23": "Ascendant 3";
                        readonly "24": "Immortal 1";
                        readonly "25": "Immortal 2";
                        readonly "26": "Immortal 3";
                        readonly "27": "Radiant";
                    };
                    readonly description: "Previous maximum rank.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "weaponSkin[]": {
                    readonly title: "Weaponskin";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of weapon skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "buddy[]": {
                    readonly title: "Buddy";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of buddies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "agent[]": {
                    readonly title: "Agent";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of agents.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "champion[]": {
                    readonly title: "Champion";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of champions.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "skin[]": {
                    readonly title: "Skin";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of LoL skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly valorant_level_min: {
                    readonly title: "Valorant Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level in Valorant.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly valorant_level_max: {
                    readonly title: "Valorant Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level in Valorant.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lol_level_min: {
                    readonly title: "Lol Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level in LoL.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lol_level_max: {
                    readonly title: "Lol Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level in LoL.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly inv_min: {
                    readonly title: "Inv Min";
                    readonly type: "integer";
                    readonly description: "Minimum inventory value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly inv_max: {
                    readonly title: "Inv Max";
                    readonly type: "integer";
                    readonly description: "Maximum inventory value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly vp_min: {
                    readonly title: "Vp Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Valorant points.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly vp_max: {
                    readonly title: "Vp Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Valorant points.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly valorant_smin: {
                    readonly title: "Valorant Smin";
                    readonly type: "integer";
                    readonly description: "Minimum number of skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly valorant_smax: {
                    readonly title: "Valorant Smax";
                    readonly type: "integer";
                    readonly description: "Maximum number of skins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "valorant_rank_type[]": {
                    readonly title: "Valorant Rank Type";
                    readonly type: "array";
                    readonly description: "List of allowed rank types.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["ranked", "ranked_ready", "unrated"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly amin: {
                    readonly title: "Amin";
                    readonly type: "integer";
                    readonly description: "Minimum amount of agents.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly amax: {
                    readonly title: "Amax";
                    readonly type: "integer";
                    readonly description: "Maximum amount of agents.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "valorant_region[]": {
                    readonly title: "Valorant Region";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of allowed regions in Valorant.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "valorant_not_region[]": {
                    readonly title: "Valorant Not Region";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of disallowed regions in Valorant.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "lol_region[]": {
                    readonly title: "Lol Region";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of allowed regions in LoL.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "lol_not_region[]": {
                    readonly title: "Lol Not Region";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of disallowed regions in LoL.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly knife: {
                    readonly title: "Knife";
                    readonly type: "boolean";
                    readonly description: "Has any knife.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lol_smin: {
                    readonly title: "Lol Smin";
                    readonly type: "integer";
                    readonly description: "Minimum number of skins in LoL.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lol_smax: {
                    readonly title: "Lol Smax";
                    readonly type: "integer";
                    readonly description: "Maximum number of skins in LoL.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly champion_min: {
                    readonly title: "Champion Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of champions.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly champion_max: {
                    readonly title: "Champion Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of champions.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_rate_min: {
                    readonly title: "Win Rate Min";
                    readonly type: "integer";
                    readonly description: "Minimum win-rate.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_rate_max: {
                    readonly title: "Win Rate Max";
                    readonly type: "integer";
                    readonly description: "Maximum win-rate.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly blue_min: {
                    readonly title: "Blue Min";
                    readonly type: "integer";
                    readonly description: "Minimum wallet blue balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly blue_max: {
                    readonly title: "Blue Max";
                    readonly type: "integer";
                    readonly description: "Maximum wallet blue balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly orange_min: {
                    readonly title: "Orange Min";
                    readonly type: "integer";
                    readonly description: "Minimum wallet orange balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly orange_max: {
                    readonly title: "Orange Max";
                    readonly type: "integer";
                    readonly description: "Maximum wallet orange balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly mythic_min: {
                    readonly title: "Mythic Min";
                    readonly type: "integer";
                    readonly description: "Minimum wallet mythic balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly mythic_max: {
                    readonly title: "Mythic Max";
                    readonly type: "integer";
                    readonly description: "Maximum wallet mythic balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly riot_min: {
                    readonly title: "Riot Min";
                    readonly type: "integer";
                    readonly description: "Minimum wallet riot balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly riot_max: {
                    readonly title: "Riot Max";
                    readonly type: "integer";
                    readonly description: "Maximum wallet riot balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email: {
                    readonly title: "Email";
                    readonly type: "string";
                    readonly description: "Has linked email.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly riot_item_id: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_id: {
                                readonly title: "Riot";
                                readonly type: "string";
                            };
                            readonly riot_account_verified: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_email_verified: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_country: {
                                readonly title: "Riot";
                                readonly type: "string";
                            };
                            readonly riot_password_change: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_phone_verified: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_last_activity: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_wallet_vp: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_wallet_rp: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_wallet_fa: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_level: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_username: {
                                readonly title: "Riot";
                                readonly type: "string";
                            };
                            readonly riot_valorant_rank: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_region: {
                                readonly title: "Riot";
                                readonly type: "string";
                            };
                            readonly riot_valorant_skin_count: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_agent_count: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_previous_rank: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_last_rank: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_rank_type: {
                                readonly title: "Riot";
                                readonly type: "string";
                            };
                            readonly riot_valorant_inventory_value: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_valorant_knife: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_region: {
                                readonly title: "Riot";
                                readonly type: "string";
                            };
                            readonly riot_lol_skin_count: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_champion_count: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_level: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_wallet_blue: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_wallet_orange: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_wallet_mythic: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_wallet_riot: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly riot_lol_rank: {
                                readonly title: "Riot";
                                readonly type: "string";
                            };
                            readonly riot_lol_rank_win_rate: {
                                readonly title: "Riot";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly valorantRegionPhrase: {
                                readonly title: "Valorant Region Phrase";
                                readonly type: "string";
                            };
                            readonly valorantRankTitle: {
                                readonly title: "Valorant Rank Title";
                                readonly type: "string";
                            };
                            readonly valorantRankImgPath: {
                                readonly title: "Valorant Rank Img Path";
                                readonly type: "string";
                            };
                            readonly valorantPreviousRankTitle: {
                                readonly title: "Valorant Previous Rank Title";
                                readonly type: "string";
                            };
                            readonly valorantLastRankTitle: {
                                readonly title: "Valorant Last Rank Title";
                                readonly type: "string";
                            };
                            readonly lolRegionPhrase: {
                                readonly title: "Lol Region Phrase";
                                readonly type: "string";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly valorantInventory: {
                                readonly title: "Valorant Inventory";
                                readonly type: "object";
                                readonly properties: {
                                    readonly WeaponSkins: {
                                        readonly title: "Weapon Skins";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly Agent: {
                                        readonly title: "Agent";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly Buddy: {
                                        readonly title: "Buddy";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["WeaponSkins", "Agent", "Buddy"];
                            };
                            readonly lolInventory: {
                                readonly title: "Lol Inventory";
                                readonly type: "object";
                                readonly properties: {
                                    readonly Champion: {
                                        readonly title: "Champion";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly Skin: {
                                        readonly title: "Skin";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "integer";
                                        };
                                    };
                                };
                                readonly required: readonly ["Champion", "Skin"];
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "riot_item_id", "riot_id", "riot_account_verified", "riot_email_verified", "riot_country", "riot_password_change", "riot_phone_verified", "riot_last_activity", "riot_valorant_wallet_vp", "riot_valorant_wallet_rp", "riot_valorant_wallet_fa", "riot_valorant_level", "riot_username", "riot_valorant_rank", "riot_valorant_region", "riot_valorant_skin_count", "riot_valorant_agent_count", "riot_valorant_previous_rank", "riot_valorant_last_rank", "riot_valorant_rank_type", "riot_valorant_inventory_value", "riot_valorant_knife", "riot_lol_region", "riot_lol_skin_count", "riot_lol_champion_count", "riot_lol_level", "riot_lol_wallet_blue", "riot_lol_wallet_orange", "riot_lol_wallet_mythic", "riot_lol_wallet_riot", "riot_lol_rank", "riot_lol_rank_win_rate", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "valorantRegionPhrase", "valorantRankTitle", "valorantRankImgPath", "valorantPreviousRankTitle", "valorantLastRankTitle", "lolRegionPhrase", "isSmallExf", "account_last_activity", "valorantInventory", "lolInventory", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryRoblox: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has verified email.";
                };
                readonly robux_min: {
                    readonly title: "Robux Min";
                    readonly type: "integer";
                    readonly description: "Minimum robux.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly robux_max: {
                    readonly title: "Robux Max";
                    readonly type: "integer";
                    readonly description: "Maximum robux.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly friends_min: {
                    readonly title: "Friends Min";
                    readonly type: "integer";
                    readonly description: "Minimum friends.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly friends_max: {
                    readonly title: "Friends Max";
                    readonly type: "integer";
                    readonly description: "Maximum friends.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly followers_min: {
                    readonly title: "Followers Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of followers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly followers_max: {
                    readonly title: "Followers Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of followers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly country: {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly not_country: {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription: {
                    readonly title: "Subscription";
                    readonly type: "string";
                    readonly description: "Name of subscription.";
                    readonly enum: readonly ["RobloxPremium1000", "RobloxPremium100012Months", "RobloxPremium1000OneMonth", "RobloxPremium2200", "RobloxPremium2200OneMonth", "RobloxPremium450", "RobloxPremium450OneMonth"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_length: {
                    readonly title: "Subscription Length";
                    readonly type: "integer";
                    readonly description: "Length of subscription.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_period: {
                    readonly title: "Subscription Period";
                    readonly description: "In what notation is time measured.";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly autorenewal: {
                    readonly description: "Is auto renewal enabled.";
                    readonly title: "Autorenewal";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly xbox_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Xbox connected to account.";
                };
                readonly psn_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "PSN connected to account.";
                };
                readonly verified: {
                    readonly title: "Verified";
                    readonly description: "Has verified.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly age_verified: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Account is age verified via documents.";
                };
                readonly incoming_robux_total_min: {
                    readonly title: "Incoming Robux Total Min";
                    readonly type: "integer";
                    readonly description: "Minimum amount of incoming robux.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly incoming_robux_total_max: {
                    readonly title: "Incoming Robux Total Max";
                    readonly type: "integer";
                    readonly description: "Maximum amount of incoming robux.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly limited_price_min: {
                    readonly title: "Limited Price Min";
                    readonly type: "integer";
                    readonly description: "Minimum limited items value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly limited_price_max: {
                    readonly title: "Limited Price Max";
                    readonly type: "integer";
                    readonly description: "Maximum limited items value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gamepass_min: {
                    readonly title: "Gamepass Min";
                    readonly type: "integer";
                    readonly description: "Minimum total Robux cost of all game passes in popular Roblox games..";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gamepass_max: {
                    readonly title: "Gamepass Max";
                    readonly type: "integer";
                    readonly description: "Maximum total Robux cost of all game passes in popular Roblox games..";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly game_donations: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has game donations.";
                };
                readonly inv_min: {
                    readonly title: "Inv Min";
                    readonly type: "integer";
                    readonly description: "Minimum inventory value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly inv_max: {
                    readonly title: "Inv Max";
                    readonly type: "integer";
                    readonly description: "Maximum inventory value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly ugc_limited_price_min: {
                    readonly title: "Ugc Limited Price Min";
                    readonly type: "integer";
                    readonly description: "Minimum UGC limited items value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly ugc_limited_price_max: {
                    readonly title: "Ugc Limited Price Max";
                    readonly type: "integer";
                    readonly description: "Maximum UGC limited items value.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly credit_balance_min: {
                    readonly description: "Minimum credit balance.";
                    readonly title: "Credit Balance Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly credit_balance_max: {
                    readonly description: "Maximum credit balance.";
                    readonly title: "Credit Balance Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly offsale_min: {
                    readonly description: "Minimum offsale items count.";
                    readonly title: "Offsale Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly offsale_max: {
                    readonly description: "Maximum offsale items count.";
                    readonly title: "Offsale Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly roblox_item_id: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_id: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_email_verified: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_robux: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_username: {
                                readonly title: "Roblox";
                                readonly type: "string";
                            };
                            readonly roblox_country: {
                                readonly title: "Roblox";
                                readonly type: "string";
                            };
                            readonly roblox_register_date: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_friends: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_followers: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_subscription: {
                                readonly title: "Roblox";
                                readonly type: "string";
                            };
                            readonly roblox_subscription_end_date: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_xbox_connected: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_incoming_robux_total: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_limited_price: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_verified: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_age_verified: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_psn_connected: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_subscription_auto_renew: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_game_pass_total_robux: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_game_donations: {
                                readonly title: "Roblox";
                                readonly type: "string";
                            };
                            readonly roblox_inventory_price: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_ugc_limited_price: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly roblox_credit_balance: {
                                readonly title: "Roblox";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly robloxLinkedAccounts: {
                                readonly title: "Roblox Linked Accounts";
                                readonly type: "string";
                            };
                            readonly creditBalance: {
                                readonly title: "Credit Balance";
                                readonly type: "string";
                            };
                            readonly robloxGameDonations: {
                                readonly title: "Roblox Game Donations";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly amount: {
                                            readonly title: "Amount";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["id", "title", "amount"];
                                };
                            };
                            readonly robloxGameDonationsDetails: {
                                readonly title: "Roblox Game Donations Details";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly product: {
                                            readonly title: "Product";
                                            readonly type: "string";
                                        };
                                        readonly amount: {
                                            readonly title: "Amount";
                                            readonly type: "integer";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["product", "amount", "type"];
                                };
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "roblox_item_id", "roblox_id", "roblox_email_verified", "roblox_robux", "roblox_username", "roblox_country", "roblox_register_date", "roblox_friends", "roblox_followers", "roblox_subscription", "roblox_subscription_end_date", "roblox_xbox_connected", "roblox_incoming_robux_total", "roblox_limited_price", "roblox_verified", "roblox_age_verified", "roblox_psn_connected", "roblox_subscription_auto_renew", "roblox_game_pass_total_robux", "roblox_game_donations", "roblox_inventory_price", "roblox_ugc_limited_price", "roblox_credit_balance", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "robloxLinkedAccounts", "creditBalance", "robloxGameDonations", "robloxGameDonationsDetails", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategorySocialClub: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly level_min: {
                    readonly type: "integer";
                    readonly description: "Minimum number of Social Club level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly level_max: {
                    readonly type: "integer";
                    readonly description: "Maximum number of Social Club level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cash_min: {
                    readonly type: "integer";
                    readonly description: "Minimum number of GTA V cash";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cash_max: {
                    readonly type: "integer";
                    readonly description: "Maximum number of GTA V cash";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly bank_cash_min: {
                    readonly type: "integer";
                    readonly description: "Minimum number of GTA V bank cash";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly bank_cash_max: {
                    readonly type: "integer";
                    readonly description: "Maximum number of GTA V bank cash";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "game[]": {
                    readonly title: "Game";
                    readonly type: "array";
                    readonly description: "List of games.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly socialclub_item_id: {
                                readonly title: "Socialclub";
                                readonly type: "integer";
                            };
                            readonly socialclub_level: {
                                readonly title: "Socialclub";
                                readonly type: "integer";
                            };
                            readonly socialclub_cash: {
                                readonly title: "Socialclub";
                                readonly type: "integer";
                            };
                            readonly socialclub_bank_cash: {
                                readonly title: "Socialclub";
                                readonly type: "integer";
                            };
                            readonly socialclub_games: {
                                readonly title: "Socialclub";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "integer";
                                        };
                                        readonly name: {
                                            readonly title: "Name";
                                            readonly type: "string";
                                        };
                                        readonly defaultPlatform: {
                                            readonly title: "Default Platform";
                                            readonly type: "string";
                                        };
                                        readonly platform: {
                                            readonly title: "Platform";
                                            readonly type: "string";
                                        };
                                        readonly lastSeen: {
                                            readonly title: "Last Seen";
                                            readonly type: "string";
                                        };
                                        readonly internal_game_id: {
                                            readonly title: "Internal";
                                            readonly type: "integer";
                                        };
                                        readonly app_id: {
                                            readonly title: "App";
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly abbr: {
                                            readonly title: "Abbr";
                                            readonly type: "string";
                                        };
                                        readonly category_id: {
                                            readonly title: "Category";
                                            readonly type: "integer";
                                        };
                                        readonly img: {
                                            readonly title: "Img";
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly title: "Url";
                                            readonly type: "string";
                                        };
                                        readonly ru: {
                                            readonly title: "Ru";
                                        };
                                    };
                                    readonly required: readonly ["id", "name", "defaultPlatform", "platform", "lastSeen", "internal_game_id", "app_id", "title", "abbr", "category_id", "img", "url", "ru"];
                                };
                            };
                            readonly socialclub_last_activity: {
                                readonly title: "Socialclub";
                                readonly type: "integer";
                            };
                            readonly socialclub_has_gtav: {
                                readonly title: "Socialclub";
                                readonly type: "integer";
                            };
                            readonly socialclub_has_rdr2: {
                                readonly title: "Socialclub";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "socialclub_item_id", "socialclub_level", "socialclub_cash", "socialclub_bank_cash", "socialclub_games", "socialclub_last_activity", "socialclub_has_gtav", "socialclub_has_rdr2", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategorySteam: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no", "no_market"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "game[]": {
                    readonly title: "Game";
                    readonly type: "array";
                    readonly description: "List of games.";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hours_played: {
                    readonly title: "Hours Played";
                    readonly type: "object";
                    readonly description: "List of minimum hours played by game.";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - game id\nValue - minimum hours played";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hours_played_max: {
                    readonly title: "Hours Played Max";
                    readonly type: "object";
                    readonly description: "List of maximum hours played by game.";
                    readonly additionalProperties: {
                        readonly type: "integer";
                        readonly description: "Key - game id\nValue - maximum hours played";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly eg: {
                    readonly title: "Extended Guarantee";
                    readonly type: "integer";
                    readonly description: "Guarantee type.";
                    readonly enum: readonly [-1, 0, 1];
                    readonly "x-enumDescriptions": {
                        readonly "0": "24 hours";
                        readonly "1": "3 days";
                        readonly "-1": "12 hours";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "vac[]": {
                    readonly title: "Vac";
                    readonly type: "array";
                    readonly description: "List of VAC bans by game.";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly vac_skip_game_check: {
                    readonly title: "Vac";
                    readonly type: "boolean";
                    readonly description: "Don't check game existence while checking for vac.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rt: {
                    readonly title: "Rt";
                    readonly description: "Has community ban.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly default: "no";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly trade_ban: {
                    readonly title: "Trade Ban";
                    readonly description: "Has lifetime trade ban.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly trade_limit: {
                    readonly title: "Trade Limit";
                    readonly description: "Has temporary trade limit.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly limit: {
                    readonly title: "Limit";
                    readonly description: "Has 5 $ limit.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly mafile: {
                    readonly title: "Mafile";
                    readonly description: "Has .mafile (Steam Guard Authenticator).";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lmin: {
                    readonly title: "Lmin";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lmax: {
                    readonly title: "Lmax";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rmin: {
                    readonly title: "Rmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 18;
                    readonly description: "Minimum rank in CS2 Matchmaking.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rmax: {
                    readonly title: "Rmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 18;
                    readonly description: "Maximum rank in CS2 Matchmaking.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly wingman_rmin: {
                    readonly title: "Wingman Rmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 18;
                    readonly description: "Minimum rank in CS2 Wingman.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly wingman_rmax: {
                    readonly title: "Wingman Rmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 18;
                    readonly description: "Maximum rank in CS2 Wingman.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly no_vac: {
                    readonly title: "No Vac";
                    readonly description: "Has no VAC ban.";
                    readonly type: "boolean";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly mm_ban: {
                    readonly title: "Mm Ban";
                    readonly description: "Has CS2 Matchmaking ban.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly balance_min: {
                    readonly title: "Balance Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly balance_max: {
                    readonly title: "Balance Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum balance.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly inv_game: {
                    readonly title: "Inv Game";
                    readonly type: "integer";
                    readonly description: "Game ID to check inventory price.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly inv_min: {
                    readonly title: "Inv Min";
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly description: "Minimum inventory price for game.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly inv_max: {
                    readonly title: "Inv Max";
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly description: "Maximum inventory price for game.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly friends_min: {
                    readonly title: "Friend Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of friends.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly friends_max: {
                    readonly title: "Friend Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of friends.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmin: {
                    readonly title: "Gmin";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmax: {
                    readonly title: "Gmax";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_count_min: {
                    readonly title: "Win Count Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_count_max: {
                    readonly title: "Win Count Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "medal_id[]": {
                    readonly title: "Medal Ids";
                    readonly type: "array";
                    readonly description: "List of medal IDs.";
                    readonly items: {
                        readonly type: "integer";
                        readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 189, 190, 191, 193, 194, 225, 226, 228, 229, 233, 234, 239, 267, 270, 271, 280, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 326, 327, 329, 330];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly medal_operator_or: {
                    readonly title: "Medal Operator Or";
                    readonly type: "boolean";
                    readonly description: "Search for medals using \"OR\" instead of \"AND\".";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly medal_min: {
                    readonly title: "Medal Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of medals.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly medal_max: {
                    readonly title: "Medal Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of medals.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "gift[]": {
                    readonly title: "Gift";
                    readonly type: "array";
                    readonly description: "List of gifts.";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["//N.P.P.D. RUSH//- The milk of Ultraviolet_cis", "1... 2... 3... KICK IT! (Drop That Beat Like an Ugly Baby)", "100 Asian Cats Deluxe Edition", "100% Orange Juice", "100% Orange Juice_cis", "12 Labours of Hercules", "12 Labours of Hercules II: The Cretan Bull", "12 Labours of Hercules II: The Cretan Bull_cis", "12 Labours of Hercules III: Girl Power", "12 Labours of Hercules III: Girl Power_cis", "12 Labours of Hercules_cis", "16bit Trader", "6.0", "7 Days to Die", "7 Days to Die_cis", "8-Bit Hordes - Soundtrack", "8BitBoy™", "911 Operator", "99 Levels to Hell Soundtrack", "A Druid's Duel", "A Game About Digging A Hole", "A Game of Dwarves", "A Gay Love Story About Gay Love", "A New Beginning - Final Cut", "A New Beginning - Final Cut_cis", "A Story About My Uncle", "A Total War Saga: FALL OF THE SAMURAI", "A Valley Without Wind 1 &amp; 2", "A Way Out", "A Year Of Rain 2Pack Gift", "A.R.E.S.: Berzerker Suit", "ACE COMBAT™ 7: SKIES UNKNOWN", "AI2U: With You 'Til The End", "AMOK", "ARK: Genesis Season Pass", "ARK: Scorched Earth - Expansion Pack", "ARK: Survival Ascended", "ARK: Survival Evolved", "ARMA: Cold War Assault", "ARMA: Cold War Assault_cis", "ARMORED KITTEN", "ATLAS", "AXYOS", "AXYOS_cis", "AaAaAA!!! - A Reckless Disregard for Gravity", "Abiotic Factor", "Abyss Odyssey", "Ace of Spades: Battle Builder", "Ace of Spades: Battle Builder_cis", "Achron", "Action Henk", "Action! - Gameplay Recording and Streaming", "Additional Playable Character RAVEN", "Aerannis", "Aerena", "Afterfall Insanity -  Dirty Arena Edition", "Age of Empires II (2013)", "Age of Empires II (2013): Rise of the Rajas", "Age of Empires II (2013): The African Kingdoms", "Age of Empires II (2013): The Forgotten", "Age of Empires II (Retired)", "Age of Empires II (Retired)_cis", "Age of Empires II: Definitive Edition", "Age of Empires III: DE - The African Royals", "Age of Empires III: Definitive Edition - Knights of the Mediterranean", "Age of Empires III: Definitive Edition - Mexico Civilization", "Age of Empires III: Definitive Edition - United States Civilization", "Age of Mythology EX: Tale of the Dragon", "Age of Mythology: Extended Edition", "Air Brawl", "Air Conflicts: Pacific Carriers", "Air Conflicts: Pacific Carriers_cis", "Air Conflicts: Secret Wars", "Air Conflicts: Vietnam", "AirMech 2 [NO LONGER VALID]", "Airscape - The Fall of Gravity", "Airscape - The Fall of Gravity_cis", "Alan Wake", "Alan Wake Franchise", "Alan Wake's American Nightmare", "Alice: Madness Returns", "Alien Breed 2: Assault", "Alien Breed 3: Descent", "Alien Breed™ Trilogy", "Alien Rage - Unlimited", "Aliens versus Predator Classic 2000", "Aliens vs. Predator Swarm Map Pack", "Aliens vs. Predator™", "Aliens: Colonial Marines Collection", "Aliens: Colonial Marines Limited Edition Pack", "Amazing Frog?", "American Conquest", "American Conquest: Fight Back", "American Truck Simulator", "Amnesia: The Dark Descent", "Among Us", "Ampersand", "Ampersand_cis", "An Alternative Reality: The Football Manager Documentary", "An Alternative Reality: The Football Manager Documentary_cis", "Anno 1800", "Anno 2070 Complete Edition", "Anno 2070™  - The E.V.E. Package", "Anno 2070™  - The Nordamark Complete Package", "Anno 2070™ - Deep Ocean", "Anno 2070™ - The Financial Crisis Package", "Anno 2070™: The Keeper Package", "Anomaly 2", "Anomaly 2_cis", "Another Try 2", "Apewar", "Apollo Justice: Ace Attorney Trilogy", "Approaching Blocks", "Arctico", "Arena Wars 2", "Arma 2", "Arma 2 Complete Collection", "Arma 2: Army of the Czech Republic", "Arma 2: British Armed Forces", "Arma 2: Combined Operations", "Arma 2: Operation Arrowhead", "Arma 2: Private Military Company", "Arma 3", "Arma 3 Alpha Lite - Gift Copy - Expired", "Arma 3 Alpha Lite Gift Copy - Expired", "Arma 3 Apex", "Arma 3 DLC Bundle 1", "Arma 3 Karts", "Arma Reforger", "Arma Tactics", "Arma X Gift Copy", "Artemis Spaceship Bridge Simulator", "Assassin's Creed 2", "Assassin's Creed Freedom Cry", "Assassin's Creed Syndicate Season Pass", "Assassin's Creed® III Tyranny of King Washington: The Infamy", "Assassin's Creed® Odyssey", "Assassin’s Creed Shadows", "Assassin’s Creed Unity Revolutionary Armaments Pack", "Assassin’s Creed® Brotherhood", "Assassin’s Creed® III", "Assassin’s Creed® III - The Tyranny of King Washington: The Redemption", "Assassin’s Creed® III – The Battle Hardened Pack", "Assassin’s Creed® III – The Hidden Secrets Pack", "Assassin’s Creed® III: The Betrayal", "Assassin’s Creed® IV Black Flag™", "Assassin’s Creed® IV Black Flag™ – Freedom Cry", "Assassin’s Creed® IV Black Flag™ – Guild of Rogues_cis", "Assetto Corsa", "Assetto Corsa - Dream Pack 1_cis", "Assetto Corsa_cis", "Asteria", "Asteroid Bounty Hunter", "At Your Feet", "Attack on Titan - Episode 1", "Attack on Titan - Episode 2", "Attack on Titan - Episode 3", "AudioSurf", "Avadon: The Black Fortress", "Avernum Bundle", "Avernum: Escape From the Pit", "Awesomenauts - Ahrpl Skin", "Awesomenauts - Cynical Vinnie & Total Spike Skin", "Awesomenauts - Desperado Penny Skin", "Awesomenauts Gift", "Awesomenauts Gift_cis", "Axis Game Factory's AGFPRO + PREMIUM Bundle", "BBQ Simulator: The Squad", "BEEP", "BEEP_cis", "BIT.TRIP BEAT", "BIT.TRIP Presents... Runner2: Future Legend of Rhythm Alien", "BIT.TRIP Presents... Runner2: Future Legend of Rhythm Alien_cis", "BIT.TRIP RUNNER", "BOKURA", "BRINK", "Back 4 Blood", "Backgammon Blitz", "Backrooms: Escape Together", "Bad Bots", "Bad Rats Show", "Bad Rats: the Rats' Revenge", "Bad Rats: the Rats' Revenge_cis", "Balatro", "Baldur's Gate 3", "Baldur's Gate II: Enhanced Edition", "Baldur's Gate: Enhanced Edition", "Banished_cis", "Barbie™ Dreamhouse Party™", "Barony", "Barony_cis", "Barotrauma", "Barro", "Barro 22", "Barro F", "Barro F22", "Barro GT", "Barro Racing", "Barro Racing - GT", "Barro T23", "Bastion", "Bastion_cis", "Batman Arkham City: Harley Quinn's Revenge", "Batman: Arkham Asylum Game of the Year Edition", "Batman: Arkham City - Game of the Year Edition", "Batman: Arkham Collection", "Batman: Arkham Knight Premium Edition", "Batman: Arkham Origins - Black Mask Challenge Pack", "Batman™: Arkham Knight - A Matter of Family_cis", "Batman™: Arkham Knight - Harley Quinn Story Pack_cis", "Batman™: Arkham Origins", "BattleBlock Theater®", "BattleBlock Theater®_cis", "Battlefield 4™", "Battlefield Bad Company 2: SPECACT Kit Upgrade", "Battlefield: Bad Company™ 2", "Battlefield: Bad Company™ 2_cis", "Battlefield™ 1", "Battlefield™ V", "Battlepillars Gold Edition", "Battlepillars Gold Edition_cis", "BeamNG.drive", "Bean Battles", "Beasts of Prey", "Beat Hazard Ultra", "Before the Echo", "Bejeweled Deluxe", "Bejeweled® 3", "Besiege", "Besiege_cis", "Betrayer", "Beyond Gravity", "Beyond: Two Souls", "Big Journey to Home - Official Soundtrack", "Bighead Runner: Original Soundtrack", "Binding of Isaac: Wrath of the Lamb", "Binding of Isaac: Wrath of the Lamb_cis", "BioShock Infinite", "BioShock Infinite - Season Pass", "BioShock Infinite: Burial at Sea - Episode One", "Biodrone Battle_cis", "Bioshock", "Bioshock 2", "Bioshock DE", "Bit.Trip.Runner 2 Giftable", "Bizarre Earthquake", "Black Desert", "Black Ice", "Black Mesa", "Black Myth: Wukong", "Blackwake", "Blade Symphony", "Blade Symphony Original Soundtrack", "Blade Symphony_cis", "Blasphemous", "Blasphemous 2", "Blaster Shooter GunGuy!", "BlazeRush", "BlazeRush_cis", "Bless Online", "Blightbound", "Blitzkrieg 2 Anthology", "Blitzkrieg Anthology", "Block King", "Block N Load", "Blockland", "Blocks That Matter", "Blockstorm", "Blockstorm_cis", "Blood and Bacon", "Blood and Bacon_cis", "Blood and Ice", "Bloodsports Gift", "Bloodsports Gift_cis", "Bloody Trapland", "Bloody Trapland_cis", "Bloons TD 6", "Blue Estate The Game", "Blue Toad Murder Files™: The Mysteries of Little Riddle", "Bodycam", "Boid Gift", "Bombernauts", "Bombernauts_cis", "Booster Trooper", "Boot Hill Heroes - The Hangman's Ballad", "Boot Hill Heroes - The Hangman's Ballad_cis", "Borderlands", "Borderlands 2", "Borderlands 2 Game of the Year", "Borderlands 2 Pre-Order Gift", "Borderlands 2 Season Pass", "Borderlands 2: Assassin Domination Pack", "Borderlands 2: Commando Domination Pack", "Borderlands 2: Commando Haggard Hunter Pack", "Borderlands 2: Commando Madness Pack", "Borderlands 2: Commando Supremacy Pack", "Borderlands 2: Headhunter 1: Bloody Harvest", "Borderlands 2: Headhunter 2: Wattle Gobbler", "Borderlands 2: Headhunter 3: Mercenary Day", "Borderlands 2: Headhunter 4: Wedding Day Massacre", "Borderlands 2: Headhunter 5: Son of Crawmerax", "Borderlands 2: Mechromancer Domination Pack", "Borderlands 2: Mechromancer Madness Pack", "Borderlands 2: Mechromancer Steampunk Slayer Pack", "Borderlands 2: Mechromancer Supremacy Pack", "Borderlands 2: Psycho Supremacy Pack_cis", "Borderlands 2: Tiny Tina's Assault on Dragon Keep", "Borderlands 2: Ultimate Vault Hunter Upgrade Pack 2", "Borderlands 2: Ultimate Vault Hunters Upgrade Pack", "Borderlands 3", "Borderlands GOTY", "Borderlands: Mad Moxxi's Underdome Riot", "Borderlands: The Pre-Sequel + Season Pass", "Borderlands: The Pre-Sequel Season Pass_cis", "Borderlands: The Zombie Island of Dr. Ned", "Borderlands_cis", "Boring Man: Premium!", "Boson X", "Botology - Map \"Zerex\" for Survival Mode_cis", "Boundel: The Second Era", "Braid", "Brawlhalla", "Brawlhalla - Spring Esports 2025 Pack", "Brawlhalla - Summer Esports 2025 Pack", "Breach & Clear: Deadline Rebirth (2016)", "Breach - Four Gifts", "Breath of Death VII", "Brick Rigs", "Broforce", "Broforce_cis", "Broken Age", "Broken Dreams", "Broken Sword 4 - the Angel of Death (2006)", "Broken Sword 5 - the Serpent's Curse", "Brothers - A Tale of Two Sons", "Brutal Force", "Brutal Legend", "Buckshot Roulette", "Bully: Scholarship Edition", "Bunch of Heroes", "Burnout Paradise: The Ultimate Box", "Bus World", "Butsbal", "CBT With Yuuka Kazami", "CHUCHEL", "COH 2 - British Commander: Tactical Support Regiment", "CS:GO Prime Status Upgrade", "CS:GO Prime Status Upgrade_cis", "Cactus Simulator", "Caesar™ IV", "Calibre 10 Racing", "Call of Duty: Black Ops III - Multiplayer Starter Pack", "Call of Duty: Black Ops III Beta GIFT", "Call of Duty: Black Ops III Beta GIFT_cis", "Call of Duty: World at War", "Call of Duty® 2", "Call of Duty® 4: Modern Warfare® (2007)", "Call of Duty®: Advanced Warfare - Havoc", "Call of Duty®: Advanced Warfare - Season Pass", "Call of Duty®: Advanced Warfare - Season Pass_cis", "Call of Duty®: Black Ops - Rezurrection Content Pack", "Call of Duty®: Black Ops - Rezurrection Content Pack_cis", "Call of Duty®: Black Ops First Strike Content Pack_cis", "Call of Duty®: Black Ops II - African Flags of the World Calling Card Pack", "Call of Duty®: Black Ops II - Afterlife Personalization Pack", "Call of Duty®: Black Ops II - Kawaii Personalization Pack", "Call of Duty®: Black Ops II - Nuketown Zombies Map", "Call of Duty®: Black Ops II - Octane Personalization Pack", "Call of Duty®: Black Ops II - Party Rock Personalization Pack", "Call of Duty®: Black Ops II - Revolution_cis", "Call of Duty®: Black Ops II - Rogue Personalization Pack", "Call of Duty®: Black Ops II - Vengeance_cis", "Call of Duty®: Black Ops II - Weaponized 115 Personalization Pack", "Call of Duty®: Black Ops II Season Pass", "Call of Duty®: Black Ops III", "Call of Duty®: Black Ops III - Der Eisendrache Zombies Map", "Call of Duty®: Ghosts", "Call of Duty®: Ghosts - Blunt Force Pack", "Call of Duty®: Modern Warfare® 2 (2009)", "Call of Duty®: Modern Warfare® 2 (2009)_cis", "Call of Duty®: Modern Warfare® 2 Resurgence Pack", "Call of Duty®: Modern Warfare® 2 Stimulus Package", "Call of Duty®: Modern Warfare® 2 Stimulus Package_cis", "Call of Duty®: Modern Warfare® 3 (2011)", "Call of Duty®: Modern Warfare® 3 (2011) Collection 1", "Call of Duty®: Modern Warfare® 3 (2011) Collection 2", "Call of Juarez: Bound in Blood", "Call of Tomsk-7", "Camera Obscura Soundtrack", "Camera Obscura Soundtrack_cis", "Cannon Brawl", "Canyon Capers - Rio Fever", "Car Mechanic Simulator 2014", "Car Mechanic Simulator 2015", "Car Mechanic Simulator 2015 Gold Edition", "CarX Street - DLC Sunset Speedway", "Carmageddon 1 and 2", "Carmageddon 1 and 2_cis", "Carmageddon TDR 2000", "Carmageddon TDR 2000_cis", "Carnage Racing", "Carton", "Caster", "Caster_cis", "Castle Crashers - Blacksmith Pack", "Castle Crashers - Pink Knight Pack", "Castle Crashers®", "Castle Crashers®_cis", "Castle of Illusion", "CastleMiner Z", "CastleMiner Z_cis", "CastleStorm - From Outcast to Savior", "Catch a Lover", "Catlateral Damage Soundtrack", "Cats Hidden in Japan", "Cave Story+", "Caveman World: Mountains of Unga Boonga", "Caveman World: Mountains of Unga Boonga_cis", "Celebrat10n TrackMania Complete Pack", "Chained Together", "Chantelise - A Tale of Two Sisters", "Chaos on Deponia", "Chasing Tails ~A Promise in the Snow~", "Cheap Golf", "Chess 2: The Sequel", "Chicken Shoot Gold", "Child of Light", "Child of Light_cis", "Children of the Nile: Alexandria", "Chip", "Chivalry: Complete Pack", "Chivalry: Complete Pack_cis", "Chivalry: Deadliest Warrior", "Chivalry: Medieval Warfare", "Chivalry: Medieval Warfare_cis", "Chronicles of Mystery: The Scorpio Ritual", "Cities XL 2012", "Cities XXL", "Cities in Motion: Design Classics", "Cities in Motion: Design Marvels", "Cities in Motion: Design Now", "Cities: Skylines", "Cities: Skylines - Content Creator Pack: Art Deco", "Cities: Skylines - Mass Transit", "Cities: Skylines - Snowfall", "Cities: Skylines_cis", "City Car Driving", "Civilization IV: Beyond the Sword", "Civilization IV®: Warlords", "Civilization V - Civ and Scenario Double Pack: Spain and Inca", "Civilization V - Civ and Scenario Pack: Korea", "Civilization V - Civ and Scenario Pack: Polynesia", "Civilization V - Cradle of Civilization Map Pack: Americas", "Civilization V - Cradle of Civilization Map Pack: Asia", "Civilization V - Cradle of Civilization Map Pack: Mediterranean", "Civilization V - Cradle of Civilization Map Pack: Mesopotamia", "Civilization V - Scenario Pack: Wonders of the Ancient World", "Civilization V - Scrambled Continents Map Pack", "Civilization V: Cradle of Civilization - DLC Bundle", "Civilization V: Korea and Wonders of the Ancient World - Combo Pack ", "Clans_cis", "Claptastic Voyage and Ultimate Vault Hunter Upgrade Pack 2", "Class of '09", "Clergy Splode", "Clock Rogue", "Clones_cis", "Cloudberry Kingdom™", "Clue/Cluedo: Classic Edition", "Clustertruck OST", "CoH 2 - German Commander: Elite Troops Doctrine", "CoH 2 - Soviet Commander: Soviet Industry Tactics", "Cobi Treasure Deluxe", "Coconut Simulator", "Codename Panzers Phase Two Soundtrack", "Cogs", "Colonies Online", "Colt Canyon", "Coma: Mortuary_cis", "Comedy Night", "Command & Conquer 3 Tiberium Wars™_cis", "Command & Conquer™ 3: Kane’s Wrath", "Commandos 2: Men of Courage", "Commandos 3: Destination Berlin", "Commandos 3: Destination Berlin_cis", "Commandos Pack", "Commandos: Behind Enemy Lines", "Company of Heroes", "Company of Heroes (DE)", "Company of Heroes 2", "Company of Heroes 2 - Ardennes Assault_cis", "Company of Heroes 2 - Single Player Bundle", "Company of Heroes Complete Pack", "Company of Heroes: Opposing Fronts", "Company of Heroes: Opposing Fronts (DE)", "Company of Heroes: Tales of Valor", "Company of Heroes: Tales of Valor (DE)", "Concord™ Beta", "Condition Zero", "Congo", "Congo_cis", "Construction Simulator 2 US - Pocket Edition", "Construction Simulator 2015: Liebherr 150 EC-B", "Contagion", "Content Warning", "Contraption Maker", "Contraption Maker_cis", "Control Ultimate Edition", "Core Keeper", "Coreborn", "Corgi Warlock_cis", "Cosmic Star Heroine", "Cossacks II: Battle for Europe", "Cossacks II: Napoleonic Wars", "Cossacks II: Napoleonic Wars_cis", "Cossacks: Art of War", "Cossacks: Back to War", "Cossacks: Back to War_cis", "Cossacks: European Wars", "Cossacks: European Wars_cis", "Counter Spell", "Counter-Strike", "Counter-Strike 2", "Counter-Strike Nexon: Zombies - Rivals DLC", "Counter-Strike: Condition Zero", "Counter-Strike: Condition Zero_cis", "Counter-Strike: Global Offensive", "Counter-Strike: Source", "Cradle of Nightmare : Flowers to you", "Crash Drive 2", "Crash Drive 2_cis", "CrashMetal - Cyberpunk", "Crea", "Creativerse", "Cries of Rage Deck Unlock", "Crime Boss: Rockay City", "Crime Simulator: Playgrounds", "CrossCode", "Crosshair X", "Crusader Kings II Gift", "Crusader Kings III", "Crypt of the NecroDancer", "Crypto Mining Simulator", "Crysis 2 - Maximum Edition", "Crysis Warhead®", "Cthulhu Saves the World", "Cthulhu Saves the World & Breath of Death VII Double Pack", "Cube Destroyer", "Cubemen", "Cubemen 2", "Cubicle Quest", "Cubicle Quest_cis", "Cult of the Lamb", "Cultures: Northland + 8th Wonder of the World", "Cuphead", "Cyberpunk 2077", "D.W.A.R.F.S.", "DARK SOULS™ II - Season Pass_cis", "DARK SOULS™ III - Ashes of Ariandel™", "DARK SOULS™ III - The Ringed City™", "DARK SOULS™: Prepare To Die™ Edition", "DARK SOULS™: Prepare To Die™ Edition_cis", "DARK SOULS™: REMASTERED", "DEADCRAFT", "DEFCON", "DETOUR", "DETOUR_cis", "DEVOUR", "DJMAX RESPECT V", "DLC \"New Edition\" - Escape Game Fort Boyard", "DLC - Crusader Kings II: Europa Universalis IV Converter", "DLC Quest", "DOOM", "DOOM Eternal Standard Edition", "DRAGON BALL XENOVERSE Season Pass", "DRAGON BALL XENOVERSE_cis", "DRAGON: A Game About a Dragon", "Daedalus - No Escape", "Damned", "Damned_cis", "Danganronpa 2: Goodbye Despair", "Danganronpa S: Ultimate Summer Camp", "Dangerous Waters", "Dark Forester", "Dark Frame", "Dark Messiah of Might & Magic", "Darkest Dungeon®", "Darkest Dungeon®_cis", "Darkness Assault - Soundtrack_cis", "Darksiders", "Darksiders II", "Darksiders II - Season Pass", "Darksiders II Deathinitive Edition", "Darkspore (preorder)", "Darwinia", "Data Hacker: Reboot", "Date Everything! - Lavish Edition", "David.", "Dawn of Defiance", "Dawn of War II", "Dawn of War II - Retribution - The Last Standalone", "Dawn of War II - Retribution - The Last Standalone_cis", "Day of Defeat", "Day of Defeat: Source", "Day of Dragons", "Day of the Tentacle Remastered", "DayZ", "Dead Bits", "Dead Bits_cis", "Dead Cells", "Dead Cells: Fatal Falls", "Dead Cells: The Bad Seed", "Dead Effect", "Dead Horde", "Dead Island (JP)", "Dead Island (NA)", "Dead Island (RoW)", "Dead Island GOTY Gift", "Dead Island: Epidemic", "Dead Island: Epidemic Beta Gift", "Dead Island: Epidemic Beta Gift_cis", "Dead Island: Epidemic_cis", "Dead Pixels", "Dead Rising 3 Apocalypse Edition_cis", "Dead Sky", "Dead Space Pack", "Dead by Daylight", "Dead by Daylight - Sadako Rising Chapter", "Dead by Daylight - The Halloween® Chapter", "Dead by Daylight: BETA Gift - Expired", "Dead by Daylight: BETA Gift - Expired_cis", "Dead by Daylight: Five Nights at Freddy’s", "Dead by Daylight_cis", "Deadlight", "Deadlight Original Soundtrack", "Deadly Days", "Deadly Premonition: The Director's Cut", "Death and Taxes", "Deathgarden: BLOODHARVEST Gift", "Deathgarden: BLOODHARVEST Gift (2)", "Deathgarden: BLOODHARVEST Gift_cis", "Deathmatch Classic", "Deep Rock Galactic", "Defender's Quest: Valley of the Forgotten (DX edition)", "Defense Grid 2 Special Edition", "Defense Grid: Containment Bundle", "Defense Grid: Containment DLC", "Defense Grid: The Awakening", "Defiance", "Defy Gravity Extended", "Defy Gravity Extended_cis", "Degrees of Separation", "Delve Deeper", "Delve Deeper: Treasures and Tunnels", "Demigod", "Demigod_cis", "Deponia", "Deponia Doomsday_cis", "Deponia: The Complete Journey", "Deponia_cis", "Depth", "Depth_cis", "Despair", "Despair_cis", "Desperados 2: Cooper's Revenge", "Destiny 2: The Final Shape + Annual Pass", "Detroit: Become Human", "Deus Ex: Game of the Year Edition", "Devil May Cry 5", "DiRT 1", "DiRT Rally 2.0", "DiRT Showdown GIFT", "Dig or Die", "Dino D-Day", "Dino D-Day: Last Stand DLC", "Dino D-Day_cis", "Dinosaur Hunt - Brontosaurus Expansion Pack", "Dinosaur Hunt - Carnotaurus Expansion Pack", "Dinosaur Hunt - Dragon Hunter Expansion Pack", "Dinosaur Hunt - Giant Spiders Hunter Expansion Pack", "Dinosaur Hunt - Guns Expansion Pack", "Dinosaur Hunt - Medieval Knights Hunter Expansion Pack", "Dinosaur Hunt - Vampires, Gargoyles, Mutants Hunter Expansion Pack", "Dinosaur Hunt - WW2 War Expansion Pack", "Dinosaur Hunt - Wild West Guns Expansion Pack", "Dirt 2", "Disco Elysium - The Final Cut", "Dishonored", "Dishonored - Definitive Edition", "Dishonored: The Brigmore Witches", "Disney Princess: Enchanted Journey", "Disney Winnie the Pooh", "Divekick", "Divine Divinity", "Divinity Anthology", "Divinity: Dragon Commander", "Divinity: Original Sin", "Divinity: Original Sin - Enhanced Edition", "Divinity: Original Sin 2 - Definitive Edition", "Divinity: Original Sin Enhanced Edition Gift", "Divinity: Original Sin Enhanced Edition Gift_cis", "DmC Devil May Cry: Weapon Bundle", "DmC: Devil May Cry Complete Pack", "DogFighter", "DogFighter_cis", "Don't Starve", "Don't Starve Gift", "Don't Starve Soundtrack", "Don't Starve Soundtrack_cis", "Don't Starve Together", "Don't Starve Together_cis", "Don't Starve: Reign of Giants", "Don't Starve: Shipwrecked", "Dota 2", "Double Dragon: Neon", "Down To One", "Down To One_cis", "Dracula's Legacy", "Dracula's Legacy_cis", "Dragon Age II: Ultimate Edition", "Dragon Age: Origins - Ultimate Edition", "Dragon Age™: The Veilguard", "Dragon Climax", "Draw a Stickman: EPIC", "Drawful 2", "Dread Templar", "DreadOut", "DreadOut Soundtrack & Manga DLC", "Drift racing car", "Drift86", "Driver® Parallel Lines", "Dropsy", "Drunken Robot Pornography", "Duck Game", "Duck Game_cis", "Duck Hunting", "Dude Simulator 3", "Due Process", "Duels 2013 \"Collective Might\" Deck Key", "Duels 2013 \"Collective Might\" Foil Conversion", "Duke Nukem 3D Gift", "Duke Nukem Forever", "Dungeon Bar: Gachi Puzzles", "Dungeon Defenders", "Dungeon Defenders - Quest for the Lost Eternia Shards Part 1", "Dungeon Defenders Collection Gift Copy", "Dungeon Defenders Eternity", "Dungeon Defenders Halloween Costume Pack", "Dungeon Defenders Halloween Costume Pack_cis", "Dungeon Defenders Halloween Mission Pack", "Dungeon Defenders Halloween Mission Pack_cis", "Dungeon Defenders II", "Dungeon Defenders Lost Eternia Shards Complete DLC", "Dungeon Defenders New Heroes DLC", "Dungeon Defenders New Heroes DLC_cis", "Dungeon Defenders Ultimate Collection", "Dungeon Defenders Warping Core Challenge Mission Pack", "Dungeon Defenders: Assault Mission Pack", "Dungeon Defenders: Barbarian Hero DLC", "Dungeon Defenders: Summoner Hero DLC", "Dungeon Defenders: Summoner Hero DLC_cis", "Dungeon Siege", "Dungeon Siege Collection", "Dungeon Siege II", "Dungeonbowl - Knockout Edition", "Dungeonland Gift", "Dungeons", "Dungeons & Dragons: Chronicles of Mystara", "Dungeons - The Dark Lord", "Dungeons 2", "Dungeons 2 - A Chance of Dragons", "Dungeons 2 - A Game of Winter", "Dungeons 2 - A Song of Sand and Fire", "Dungeons 2_cis", "Dungeons Gold Gift", "Dust: An Elysian Tail", "Dustoff Heli Rescue", "Dwarf Tower_cis", "Dying Light", "Dying Light - Crash Test Skin Bundle", "Dying Light - Gun Psycho Bundle", "Dying Light - Harran Ranger Bundle", "Dying Light - The Bozak Horde", "Dying Light - The Bozak Horde_cis", "Dying Light - Ultimate Survivor Bundle", "Dying Light - Ultimate Survivor Bundle_cis", "Dying Light - Volatile Hunter Bundle", "Dying Light 2: Reloaded Edition", "Dying Light Definitive Edition", "Dying Light ROW Gift", "Dying Light: Bad Blood", "Dying Light: Bad Blood_cis", "Dying Light: The Following", "Dying Light: The Following_cis", "E.T. Armies", "E.T. Armies_cis", "E.Y.E: Divine Cybermancy", "E.Y.E: Divine Cybermancy_cis", "EA SPORTS FC™ 25", "EDGE", "EDGE&TRIGGER", "ELDEN RING Shadow of the Erdtree", "ENDLESS™ Dungeon – Closed Beta", "ENDLESS™ Space - Definitive Edition", "ENDLESS™ Space - Definitive Edition_cis", "EVE Online", "Earth 2150 Trilogy", "Eaten Alive", "Eaten Alive_cis", "Edge of Space", "Elite Dangerous", "Embr", "Emily Wants To Play", "Empire: Total War™ - Elite Units of America", "Empire: Total War™ - Elite Units of the East", "Empire: Total War™ - Elite Units of the West", "Empire: Total War™ - Elite Units of the West_cis", "Empire: Total War™ - Special Forces Units & Bonus Content", "Empire: Total War™ - The Warpath Campaign", "Empyrion - Galactic Survival", "Enter the Gungeon", "Epic Showdown", "Epigenesis", "Epistory - Typing Chronicles", "Escape Memoirs: Mini Stories - Bunker Scenario", "Escape the Backrooms", "Euro Truck Simulator", "Euro Truck Simulator 2", "Euro Truck Simulator 2 - Brazilian Paint Jobs Pack", "Euro Truck Simulator 2 - Cabin Accessories", "Euro Truck Simulator 2 - Cabin Accessories_cis", "Euro Truck Simulator 2 - Czech Paint Jobs Pack", "Euro Truck Simulator 2 - Fantasy Paint Jobs Pack", "Euro Truck Simulator 2 - Flip Paint Designs", "Euro Truck Simulator 2 - Force of Nature Paint Jobs Pack", "Euro Truck Simulator 2 - French Paint Jobs Pack", "Euro Truck Simulator 2 - German Paint Jobs Pack", "Euro Truck Simulator 2 - Going East!", "Euro Truck Simulator 2 - Goodyear Tyres Pack", "Euro Truck Simulator 2 - Halloween Paint Jobs Pack", "Euro Truck Simulator 2 - Heavy Cargo Pack", "Euro Truck Simulator 2 - High Power Cargo Pack", "Euro Truck Simulator 2 - Ice Cold Paint Jobs Pack_cis", "Euro Truck Simulator 2 - Irish Paint Jobs Pack", "Euro Truck Simulator 2 - Mighty Griffin Tuning Pack", "Euro Truck Simulator 2 - Prehistoric Paint Jobs Pack", "Euro Truck Simulator 2 - Scandinavia", "Euro Truck Simulator 2 - Scandinavia_cis", "Euro Truck Simulator 2 - Scottish Paint Jobs Pack", "Euro Truck Simulator 2 - Special Transport", "Euro Truck Simulator 2 - Turkish Paint Jobs Pack", "Euro Truck Simulator 2 - UK Paint Jobs Pack", "Euro Truck Simulator 2 - USA Paint Jobs Pack", "Euro Truck Simulator 2 - Window Flags", "Euro Truck Simulator 2_cis", "Euro Truck Simulator_cis", "Europa Universalis III: Enlightenment SpritePack", "Europa Universalis III: Heir to the Throne", "Europa Universalis III: Revolution SpritePack", "Europa Universalis IV: Guns, Drums and Steel Music Pack", "Europa Universalis IV: Guns, Drums and Steel Music Pack_cis", "Excalibur Sim Bundle", "Exodus from the Earth", "Expansion - Europa Universalis IV: Rights of Man_cis", "Expansion Starter Pack - Guild Wars 2: Heart of Thorns™ and Path of Fire™", "F.E.A.R. 3", "F1 2011", "F1 2012™", "F1 2016", "F1 RACE STARS™", "FATE", "FEZ", "FINAL FANTASY VII", "FORCED 2 Test Access Gift", "FORCED: Slightly Better Edition", "FTL: Faster Than Light", "FTL: Faster Than Light_cis", "FURRY BACKROOMS", "Fable - The Lost Chapters", "Fable Anniversary_cis", "Fabula Mortis", "FaceRig Live2D Module", "Factorio", "Faerie Solitaire", "Faerie Solitaire_cis", "Fallen: A2P Protocol", "Fallout 3: Game of the Year Edition", "Fallout 4", "Fallout 4 - Automatron", "Fallout 4 - Wasteland Workshop", "Fallout 4 Far Harbor", "Fallout 4 Season Pass", "Fallout Classic Collection", "Fallout New Vegas Courier's Stash", "Fallout New Vegas Ultimate", "Fallout New Vegas Ultimate PCR", "Fallout New Vegas: Courier's Stash", "Fallout New Vegas®: Gun Runners’ Arsenal™", "Fallout New Vegas®: Lonesome Road™", "Fallout: New Vegas", "Fantasy Grounds Classic", "Fantasy Wars", "Far Cry 3", "Far Cry®", "Far Cry® 2", "Far Cry® 4", "Far Cry® 4 – Overrun", "Far Cry® 5", "Far Cry® 6", "Far Cry® New Dawn", "Far Cry® Primal", "FarSky", "Farm Manager 2018", "Farm Together", "Farming Simulator 15", "Farming Simulator 15 - HOLMER_cis", "Farming Simulator 15 - ITRunner", "Farming Simulator 15 - JCB", "Farming Simulator 15_cis", "Farming Simulator 17", "Farming Simulator 17 - KUHN Equipment Pack", "Farming Simulator 2013: DLCs Pack", "Fear & Hunger", "Fear & Hunger 2: Termina", "Feed All Monsters", "Feeding Frenzy 2 Deluxe", "Feign", "Femboy Aim Trainer", "Femboy Bangers 2", "Ferrum's Secrets: Where Is Grandpa?", "Fields of Mistria", "Fight The Dragon", "Fight The Dragon_cis", "Final Dusk_cis", "Final Exam", "Final Exam_cis", "Fireburst", "Firewatch", "Firewatch Original Soundtrack", "Five Nights at Freddy's", "Five Nights at Freddy's 2", "Five Nights at Freddy's 2_cis", "Five Nights at Freddy's 3", "Five Nights at Freddy's 4", "FlatOut", "FlatOut 2", "FlatOut 2_cis", "FlatOut 2™", "FlatOut 2™_cis", "FlatOut 3: Chaos & Destruction", "FlatOut: Ultimate Carnage Collector's Edition", "FlatOut: Ultimate Carnage Collector's Edition_cis", "FlatOut_cis", "Flatout Complete Pack", "Flesh Eaters", "Flight Control HD", "Flower", "Flower_cis", "FootLOL: Epic Soccer League", "Foreign Legion: Multi Massacre", "Foreskin Fury", "Forge - Starter Pack", "Forge Quest", "Fortix", "FortressCraft Evolved!_cis", "Forts", "Forza Horizon 4", "Forza Horizon 5", "Forza Horizon 5 European Automotive Car Pack", "Forza Horizon 5 Treasure Map", "Foul Play", "Frankenstein: Master of Death", "Frankenstein: Master of Death_cis", "Freddi Fish and the Case of the Missing Kelp Seeds", "Freedom Force", "From Dust", "Frontlines™: Fuel of War™", "Frozen Cortex", "Frozen Synapse", "Frozen Synapse Prime", "Frozen Synapse Prime_cis", "Frozen Synapse: Red DLC", "Frozen Synapse_cis", "Frozenheim", "Full Mojo Rampage", "Furry Aim Trainer", "Furry Feet", "Furry Femboys", "Furry Killer", "Furry Love", "Furry Orgasm", "Furry Reich 🐺", "Furry Sex", "Furry Shades of Gay 3: Still Gayer", "Fury Unleashed", "Futa Fix Dick Dine and Dash", "Futanari Sex - The Fertility Doctor", "Future Wars", "GRAV", "GRID Autosport", "GRIS", "GTFO Alpha Gift", "GTFO Alpha Gift_cis", "Gal*Gun: Double Peace - 'Sexy Ribbons' Costume Set", "Galactic Civilizations® II: Ultimate Edition", "Game Builder Tycoon", "Game of Thrones", "Game of Thrones - A Telltale Games Series", "Game of Thrones - Dog Pack DLC", "Gang Beasts", "Garfield Kart", "Garry's Mod", "Garry's Mod_cis", "Gas Guzzlers Extreme", "Gas Guzzlers Extreme: Full Metal Zombie", "Gas Guzzlers Extreme_cis", "Gauntlet™ Slayer Edition", "Gauntlet™ Slayer Edition_cis", "GemCraft - Chasing Shadows", "Gemini Rue", "Geometry Dash", "Getting Over It with Bennett Foddy", "Ghost Master®", "Ghostrunner 2", "GiAnt - A GiAnt Soundtrack", "Giana Sisters: Twisted Dreams", "Gigantus DCC-Gogo. Marking", "Girl Amazon Survival", "Girlfriend Rescue", "Girls! Girls! Girls!?", "Gish", "GoD Factory: Wingmen", "Goat Simulator", "Goat Simulator: GoatZ", "God Mode", "God of War Ragnarök", "Gomo", "Goofy Gorillas", "Gorky 17", "Gothic 3: Forsaken Gods Enhanced Edition", "Gothic II: Gold Edition", "Gothic Universe Edition", "Gothic Universe Edition_cis", "Gothic® 3", "Granblue Fantasy: Relink", "Grand Pigeon's Duty_cis", "Grand Theft Auto IV: The Complete Edition", "Grand Theft Auto IV: The Complete Edition_cis", "Grand Theft Auto V", "Grand Theft Auto V Enhanced", "Grand Theft Auto V: Premium Edition", "Grand Theft Auto V_cis", "Grand Theft Auto: San Andreas", "Grand Theft Auto: San Andreas (DE)", "Granny Simulator", "Graviteam Tactics: Operation Star", "Gravity Ghost", "Greed Corp", "Green Hell", "Greyfox RPG", "Greyfox RPG_cis", "Grid Gift", "Grim Dawn", "Grim Dawn_cis", "Grotesque Tactics: Evil Heroes", "Guacamelee! Gold Edition", "Guardians of Middle-earth", "Guardians of Orion", "Guilty as Sock!", "Gumboy Tournament", "Gun Done", "Gun Done_cis", "Gun Monkeys", "Gun Monkeys - 2 Gift sub", "Gun Monkeys_cis", "Gun Rocket", "Guncraft", "Guncraft_cis", "Gunfire Reborn", "Gunpoint", "Guns n Zombies", "Guns of Icarus Alliance", "Guns of Icarus Online", "Guns of Icarus Online_cis", "Guns'N'Zombies: N'Aliens", "Gunsmith Simulator", "HELLDIVERS™ 2", "HITMAN World of Assassination", "HITMAN™: Bonus Episode_cis", "HITMAN™: Episode 4 - Bangkok_cis", "HOARD", "Habitat", "Hack 'n' Slash", "Hacker Evolution Duality: Hardcore Package Part 2 DLC", "Hacker Evolution: Untold", "Hades II", "Half Dead", "Half Minute Hero: The Second Coming", "Half Minute Hero: The Second Coming - Time Goddess' Treasure Pack", "Half Minute Hero: The Second Coming GIFT", "Half-Life", "Half-Life 2", "Half-Life 2 - Gamescon", "Half-Life 2: Deathmatch", "Half-Life 2: Deathmatch_cis", "Half-Life 2: Episode 1", "Half-Life 2: Episode 1_cis", "Half-Life 2: Episode One", "Half-Life 2: Episode One - Gamescon", "Half-Life 2: Episode One_cis", "Half-Life 2: Episode Two", "Half-Life 2: Episode Two - Gamescon", "Half-Life 2_cis", "Half-Life: Blue Shift", "Half-Life: Opposing Force_cis", "Halo Wars: Definitive Edition", "Hamilton's Great Adventure", "Hamilton's Great Adventure - Retro Fever DLC", "Hamilton's Great Adventure - Retro Fever DLC_cis", "Hammerwatch", "Hand Simulator", "Hard Reset Redux", "Hard Truck Apocalypse: Rise Of Clans / Ex Machina: Meridian 113_cis", "Hatoful Boyfriend", "Hearts of Iron III: For the Motherland", "Hearts of Iron III: Semper Fi", "Hearts of Iron III: Their Finest Hour", "Hearts of Iron IV", "Heat Wave DLC - Abby's pack_cis", "Heat Wave DLC - Jack's pack_cis", "Heat Wave DLC - Kenji's pack_cis", "Heavy Bullets", "Heavy Rain", "Heileen 3: New Horizons", "Hell Let Loose", "Hentai Furry", "Hentai Furry 2", "Hentai Furry 3", "Hentai Furry Soundtrack", "Hentai Killer", "Hentai Police", "Hentai Shooter 3D", "Hentai Vs Furries", "Hentai hentai", "Hentai no Hero", "Hero Academy", "Hero Academy - Dark Elves Pack - Hatless Gift", "Hero Academy - Dwarves Pack - Hatless Gift", "Hero Academy - Tribe Pack - Hatless Gift", "Hero Siege", "Hero Siege_cis", "Heroes of Might & Magic V: Hammers of Fate_cis", "Heroes of Might & Magic V_cis", "Heroes of Steel RPG", "Hitler My Friend", "Hitler Waifu", "Hitman: Absolution: Agency HX UMP", "Hitman: Absolution: Deus Ex (Adam Jensen) Disguise", "Hitman: Absolution: Deus Ex (Adam Jensen) Handgun", "Hitman: Absolution: High Tech Disguise", "Hitman: Absolution: Krugermeier 2-2 Gun", "Hitman: Blood Money_cis", "Hitman: Contracts", "Hive", "Hive With Pillbug, Ladybug, Mosquito DLC Gift", "Hob", "Hogs of War", "Hollow Knight", "Holodrive", "Home Design 3D Ultimate", "Homefront: Express 870 Shotgun", "Homefront: The Rock Map Pack", "Homefront®: The Revolution", "Homeworld 1 Remastered Soundtrack", "Homeworld 2 Remastered Soundtrack", "Homeworld Remastered Collection_cis", "Horror inside the forest", "Hot Hentai", "Hot Lava", "Hot Lava_cis", "Hotline Miami", "Hotline Miami 2: Wrong Number", "House Flipper", "House Flipper 2", "House of Caravan_cis", "House of Detention", "How To Survive 2 - Dead Dynamite", "How To Survive 2 - Norse God Skin Pack", "How To Survive 2 - Pirates of the Bayou Skin Pack", "How To Survive: Third Person Standalone", "How to Survive", "How to Survive - Storm Warning Edition", "How to Survive - Storm Warning Edition_cis", "How to Survive_cis", "Human Fall Flat", "Human Resource Machine", "HuniePop", "Hunt the Night", "Hunted: One Step Too Far - Reborn Edition_cis", "Hurtworld_cis", "Hydrophobia: Prophecy", "Hyperdimension Neptunia Re;Birth1", "Hyperdimension Neptunia Re;Birth1 Additional Content1", "Hyperdimension Neptunia Re;Birth1 Additional Content2", "Hyperdimension Neptunia Re;Birth1 Additional Content3", "Hyperdimension Neptunia Re;Birth1 Histoire Battle Entry", "Hyperdimension Neptunia Re;Birth1 Peashy Battle Entry", "Hyperdimension Neptunia Re;Birth1 Plutia Battle Entry", "I Have No Mouth, and I Must Scream", "I am Weapon: Revival", "I, Gladiator", "I, Zombie", "ICARUS", "INDIKA", "INSIDE", "Ib", "Ichi", "Ichi_cis", "Iesabel", "If My Heart Had Wings", "Iggle Pop Deluxe", "Immune - True Survival", "Impire: Black and White Demons", "Impossible Creatures Steam Edition", "Incredibox + Tracks", "Infestation: Survivor Stories 2020", "Infestation: The New Beginning", "Initial Drift Online", "Injustice: Gods Among Us Ultimate Edition_cis", "Inner Demons Pack - Face It + Soul Gambler", "Innocent Girl", "Insecticide Part 1", "Insurgency", "Insurgency: Sandstorm - Gold Edition", "Insurgency_cis", "Intergalactic Bubbles", "Interloper", "Interplanetary GIFT", "Interstellar Marines", "Interstellar Marines_cis", "Intrusion 2", "Invite the Dwarves to Dinner_cis", "Iron Brigade", "Iron Grip: Warlord", "Iron Warriors: T - 72 Tank Command ", "Ironclad Tactics", "It Takes Two", "JRPG Bundle", "Jagged Alliance 2 - Wildfire", "Jagged Alliance: Back in Action DLC: Urban Specialist Kit", "Jigsaw Puzzle Pack - Pixel Puzzles Ultimate: Savanna", "JumpJet Rex", "Jurassic World Evolution 2", "Just Cause", "Just Cause 2", "Just Cause 2: Agency Hovercraft", "Just Cause 2: Bull's Eye Assault Rifle", "Just Cause 2: Chevalier Classic", "Just Cause 2: Monster Truck DLC", "Just Cause 2: Rico's Signature Gun DLC", "Just Cause 2_cis", "KAMI", "Kandidatos", "Kane & Lynch 2: Dog Days", "Keep Talking and Nobody Explodes", "Kerbal Space Program", "Kerbal Space Program_cis", "KeyWe", "Khet 2.0", "Kholat: Original Soundtrack", "Killer Queen Black", "Killer is Dead - Nightmare Edition", "Killing Floor", "Killing Floor 2", "Killing Floor 2 Ultimate Edition", "Killing Floor 2_cis", "Killing Floor Gift", "Killing Floor Gift_cis", "Killing Floor Outbreak Character Pack", "Killing Floor: Nightfall Character Pack", "Killing Floor: PostMortem Character Pack", "Killsquad", "Kinetic Void", "King Arthur II: Dead Legions", "King Arthur's Gold", "King Arthur's Gold_cis", "Kingdom Come: Deliverance", "Kingdom Wars - All Access", "Kingdom Wars - Starter Pack", "Kingdoms Rise", "Knight Adventure", "KnightShift", "Knights and Merchants", "Kohan Warchest", "Kopanito All-Stars Soccer", "Krater", "Kung Fu Strike - The Warrior's Rise", "Kung Fu Strike: The Warrior's Rise - Master Level", "L.A. Noire", "L.A. Noire: DLC Bundle", "L4D2 Gift", "LARA CROFT AND THE TEMPLE OF OSIRIS™", "LARA CROFT AND THE TEMPLE OF OSIRIS™_cis", "LEGO Jurassic World: Jurassic Park Trilogy DLC Pack 1", "LEGO Jurassic World: Jurassic Park Trilogy DLC Pack 2", "LEGO Jurassic World: Jurassic World DLC Pack", "LEGO Marvel Super Heroes DLC: Asgard Pack", "LEGO® Batman™ 2: DC Super Heroes", "LEGO® Batman™: The Videogame", "LEGO® Batman™: The Videogame_cis", "LEGO® MARVEL's Avengers - The Avengers Adventurer Character Pack", "LEGO® MARVEL's Avengers DLC - Classic Captain Marvel Pack", "LEGO® MARVEL's Avengers DLC - Marvel’s Agents of S.H.I.E.L.D. Pack", "LEGO® MARVEL's Avengers DLC - Marvel’s Captain America: Civil War Character Pack", "LEGO® MARVEL's Avengers Season Pass", "LEGO® Marvel Super Heroes DLC: Super Pack", "LEGO® Star Wars™ III - The Clone Wars™", "LEGO® Star Wars™: The Skywalker Saga", "LEGO® The Hobbit™_cis", "LEGO® The Lord of the Rings™", "LEGO® The Lord of the Rings™_cis", "LEGO® Worlds", "LEGO® Worlds_cis", "LIMBO", "LIZARDS MUST DIE", "LOCKDOWN Protocol", "LOST PLANET® 3 - Assault Pack", "Labyronia RPG", "Labyronia RPG 2", "Labyronia RPG 2_cis", "Landmark - Trailblazer Buddy Gift", "Lara Croft GoL: Raziel and Kain Character Pack", "Lara Croft and the Guardian of Light", "Larva Mortus", "Last Epoch", "Layers of Fear (2016)", "Lead and Gold: Gangs of the Wild West", "Left 4 Dead", "Left 4 Dead 2", "Left 4 Dead 2 (DE)", "Left 4 Dead 2 (preorder)", "Left 4 Dead 2 - Gamescon", "Left 4 Dead 2_cis", "Legend of Dungeon", "Legend of Grimrock", "Legend of Mysteria RPG", "Legendary", "Legendary_cis", "Lethal Company", "Lethal League", "Lethal League Blaze", "Liar's Bar", "Life is Feudal: Your Own Gift (2-pack)", "Life is Strange - Episode 1", "Life is Strange Complete Season (Episodes 1-5)", "Lightfish", "Lilly and Sasha: Curse of the Immortals", "Lilly and Sasha: Curse of the Immortals_cis", "Little Inferno", "Little Misfortune", "Little Nightmares II", "Little Racers STREET", "Little Racers STREET_cis", "Lords of the Fallen - The Arcane Boost", "Lost Planet™: Extreme Condition", "Lucius", "Lucius_cis", "Lucy Got Problems - Artbook and Wallpapers (Silver Edition)", "Lunar Flight", "Luxor 3", "Lycans", "MAGIX PC Check & Tuning 2015", "METAL GEAR RISING: REVENGEANCE_cis", "METAL GEAR SOLID V: GROUND ZEROES", "METAL GEAR SOLID V: GROUND ZEROES_cis", "METAL GEAR SOLID V: THE PHANTOM PAIN", "METAL GEAR SOLID V: THE PHANTOM PAIN_cis", "METAL GEAR SOLID V: The Definitive Experience", "METAL SLUG", "METAL SLUG 3", "METAL SLUG 3_cis", "METAL SLUG X", "METAL SLUG X_cis", "METAL SLUG_cis", "MONOPOLY® PLUS", "MQEL Founders Pack Gift", "MX Bikes", "MX vs. ATV Unleashed", "MXGP - The Official Motocross Videogame", "Machinarium", "Machines At War 3", "Madballs in Babo:Invasion", "Mafia", "Mafia II DLC: Jimmy's Vendetta", "Magic 2012 Deck Pack 2", "Magic 2013 \"Act of War\" Deck Key", "Magic 2013 “Born of Flame” Deck Key ", "Magic 2013 “Born of Flame” Foil Conversion ", "Magic 2013 “Celestial Light” Deck Key ", "Magic 2013 “Celestial Light” Foil Conversion ", "Magic 2013 “Dream Puppets” Deck Key ", "Magic 2013 “Dream Puppets” Foil Conversion ", "Magic 2013 “Exalted Darkness” Deck Key ", "Magic 2013 “Goblin Gangland” Deck Key ", "Magic 2013 “Goblin Gangland” Foil Conversion ", "Magic 2013 “Obedient Dead” Deck Key ", "Magic 2013 “Obedient Dead” Foil Conversion ", "Magic 2013 “Pack Instinct” Foil Conversion ", "Magic 2014 — Duels of the Planeswalkers", "Magic: The Gathering - Duels of the Planeswalkers 2013 Expansion", "Magical Battle Festa", "Magicite", "Magicite_cis", "Magicka", "Magicka 2", "Magicka 2 Sneak Peek Gift", "Magicka 2 Sneak Peek Gift_cis", "Magicka: Aspiring Musician Robes", "Magicka: Wizard Wars - Alpha Gift", "Magicka: Wizard's Survival Kit", "Magicka_cis", "Magnetis ", "Mainframe Defenders", "Make America Great Again: The Trump Presidency", "Making History: The Calm & the Storm", "Manhunter_cis", "Manor Lords", "Marble Mayhem: Fragile Ball", "Marble Mayhem: Fragile Ball_cis", "Marc Eckō's Getting Up: Contents Under Pressure", "Marine Sharpshooter II: Jungle Warfare", "Mark of the Ninja", "Master of Orion, Collector's Edition Upgrade", "Max Payne 3", "Max Payne 3: Classic Max Payne Character", "Max Payne 3: Pill Bottle Item", "Max Payne 3_cis", "McDROID", "MechWarrior Online™ - Desperada Legendary Mech Pack", "Medieval Dynasty", "Medieval Engineers", "Medieval Engineers Deluxe Gift", "Medieval Engineers_cis", "Mega Man Legacy Collection", "Meltdown", "Men of War: Assault Squad", "Men of War: Assault Squad 2_cis", "Men of War: Vietnam", "Men of War: Vietnam Special Edition Upgrade Pack", "Men of War™", "Mercenary Kings: Reloaded Edition", "Merchants of Kaidan", "Meridian: New World", "Metal Drift", "Metro 2033", "Metro 2033 Redux", "Metro Exodus", "Metro: Last Light - Ranger Mode", "Metro: Last Light Redux", "MiSide", "Microsoft Flight Simulator X: Steam Edition", "Microsoft Flight Simulator X: Steam Edition_cis", "Middle-earth: Shadow of Mordor - Lord of the Hunt", "Middle-earth: Shadow of Mordor - The Bright Lord", "Middle-earth: Shadow of Mordor Game of the Year Edition", "Middle-earth™: Shadow of War™", "Middle-earth™: The Shadow Bundle", "Midnight Murder Club", "Might & Magic: Clash of Heroes - I Am the Boss DLC", "Miko Gakkou: Second Year", "Milk inside a bag of milk inside a bag of milk", "Milk outside a bag of milk outside a bag of milk", "Mindustry", "Minecraft Legends", "Minecraft: Story Mode - A Telltale Games Series", "Mineirinho Hoversurf DC", "Miner Wars 2081", "Mini Ninjas", "Miniature Gods_cis", "Minimon", "Minimum", "Mining Mechs", "Minion Masters", "Minion Masters_cis", "Mirage: Arcane Warfare Beta", "Mirror's Edge™", "Miscreated", "Miscreated_cis", "Mister Furry", "Mister Furry: Hot Muscles", "Modern Warfare® III or Call of Duty®: Warzone™ Points", "Monaco: What's Yours Is Mine", "Monday Night Combat", "Monster Hunter Rise + Sunbreak", "Monster Hunter World: Iceborne Master Edition", "Monster Loves You!", "Monsti", "Montaro", "Moorhuhn (Crazy Chicken)_cis", "Moribund", "Morphopolis", "Morphopolis_cis", "Mortal Shell", "Mortal Shell: The Virtuous Cycle", "Mosaique Neko Waifus 5", "Mother Russia Bleeds", "Mother Russia Bleeds_cis", "MotoGP™13: MotoGP™ Champions", "Mount & Blade", "Mount & Blade: Warband", "Mount & Blade: Warband - Napoleonic Wars", "Mount & Blade: Warband - Viking Conquest Reforged Edition", "Mount & Blade: With Fire & Sword", "Mount Your Friends", "Mount Your Friends_cis", "Mountain", "Move or Die", "Move or Die_cis", "Mr. Prepper", "MudRunner", "Multiwinia", "Murder Miners", "Murder Miners_cis", "Murky Divers", "Muse Dash", "My Bestie is a Femboy Streamer", "My Dream Setup", "My Ex-Boyfriend the Space Tyrant", "My Furry Dictator 🐾", "My Name is Mayo", "My Sexy Neighbor 🔞", "My Sexy Waitress Soundtrack", "My Stepbro is a Femboy", "NARUTO SHIPPUDEN: Ultimate Ninja STORM 3 Full Burst HD", "NARUTO SHIPPUDEN: Ultimate Ninja STORM 4 - Season Pass", "NARUTO SHIPPUDEN: Ultimate Ninja STORM Revolution - DLC4 Jinchuriki Costume Pack 1", "NARUTO SHIPPUDEN: Ultimate Ninja STORM Revolution - DLC5 Jinchuriki Costume Pack 2", "NARUTO SHIPPUDEN: Ultimate Ninja STORM Revolution - DLC9 Variety Pack 3", "NARUTO SHIPPUDEN: Ultimate Ninja STORM Revolution_cis", "NBA 2K16", "NBA 2K25", "NBA 2K25 MyCAREER Bonus Offer: Season 5", "NBA 2K25 MyTEAM Bonus Offer: Season 5", "NEKOPARA Vol. 0", "NEKOPARA Vol. 2", "NEStalgia Gift", "Napoleon: Total War™ - Coalition Battle Pack", "Napoleon: Total War™ - The Peninsular Campaign", "Narco Terror Gift", "Nation Red", "Nation Red_cis", "National Zombie Park Gift", "Natural Selection 2", "Natural Selection 2_cis", "Naval Warfare", "Naviros Samurai Pack", "Ne no Kami - The Two Princess Knights of Kyoto Extra Story", "Need For Speed: Hot Pursuit", "Need for Speed Undercover", "Need for Speed: Shift", "Need for Speed™ Heat", "Nephise", "Nephise Begins", "Nether: Resurrected", "Never Alone (Kisima Ingitchuna)", "Nevermind", "New kind of adventure", "Nexuiz", "Nidhogg", "NieR:Automata™", "Nightingale", "Nightmares from the Deep: The Cursed Heart", "Nihilumbra", "Nikopol: Secrets of the Immortals", "Nimbus", "No Man's Sky", "No Time To Live", "No Time to Relax", "Northgard - Hræsvelg, Clan of the Eagle", "Nosferatu: The Wrath of Malachi", "NotTheNameWeWanted", "Nuclear Dawn", "Nuclear Dawn_cis", "Nuclear Nightmare", "Nuclear Throne", "NukGames Pack", "Nyakori's Rabbit Doll Full Collection", "OBEY", "OCEAN CITY RACING", "OMORI", "OMSI 2 Add-on Citybus o530", "OMSI 2 Add-on Three Generations", "ORION: Prelude", "ORION: Prelude_cis", "OUTBRK", "Oblivion Game of the Year Deluxe", "Octodad: Dadliest Catch", "Octodad: Dadliest Catch + Soundtrack", "Oddworld: Abe's Exoddus®", "Oddworld: Munch's Oddysee", "Oddworld: Stranger's Wrath HD", "Offworld Trading Company Gift Copy", "Offworld Trading Company Gift Copy_cis", "Oh Deer", "Oh...Sir!! The Insult Simulator", "Omerta - City of Gangsters", "Omerta - City of Gangsters - GOLD EDITION", "Omerta City of Gangsters Gift Package (KR)", "One Piece Pirate Warriors 3 Story Pack_cis", "One Shot Escape DLC", "One-armed Cook: Drinks and bars", "Onikira - Demon Killer", "Only Up: SKIBIDI TOGETHER", "Oozi: Earth Adventure", "Operation Flashpoint: Dragon Rising", "Orbital Gear", "Orc Attack: Flatulent Rebellion", "Orcs Must Die 2 - Complete Pack 2 Gift", "Orcs Must Die 2 - Complete Pack 2 Gift_cis", "Orcs Must Die! - Artifacts of Power", "Orcs Must Die! - Lost Adventures", "Orcs Must Die! 2", "Orcs Must Die! 2 - Are We There Yeti?", "Orcs Must Die! 2 - Complete Pack", "Orcs Must Die! 2 - Family Ties Booster Pack", "Orcs Must Die! 2 - Fire and Water Booster Pack", "Orcs Must Die! 2 - Soundtrack", "Orcs Must Die! 3", "Orcs Must Die! Complete Pack", "Orcs Must Die! Unchained - Starter Bundle", "Ori and the Will of the Wisps", "Original War", "Orwell: Keeping an Eye On You", "Ostrich Island", "Ostrich Island_cis", "Our Wonderful World_cis", "Out There Somewhere", "Out There Somewhere_cis", "Out There: Ω Edition", "Out of Reach", "Outer Wilds", "Outland", "Outlast", "Outlast 2", "Outlast: Whistleblower DLC", "Outlast: Whistleblower DLC_cis", "Outlast_cis", "Outward Definitive Edition", "Over 9000 Zombies!", "Over 9000 Zombies!_cis", "Over The Void_cis", "Overcast - Walden and the Werewolf", "Overcast - Walden and the Werewolf_cis", "Overcooked", "Overcooked! 2", "Overcooked! 2 - Gourmet Edition", "Overkill's The Walking Dead - BETA Gift - Retired", "Overkill's The Walking Dead - BETA Gift - Retired_cis", "Overlord II_cis", "Overlord: Fellowship of Evil", "Overlord™", "Overlord™: Raising Hell", "Overlord™_cis", "Overture", "Overwatch® 2 - Ultimate Battle Pass Bundle: Season 11", "Overwatch® 2 Starter Pack: Season 11", "Oxenfree", "Oxygen Not Included", "PAC-MAN 256", "PAC-MAN Championship Edition DX+ All You Can Eat Edition Bundle", "PANICORE", "PARTICLE MACE", "PARTICLE MACE_cis", "PAYDAY 2", "PAYDAY 2 Beta Gift", "PAYDAY 2: A Merry Payday Christmas Soundtrack", "PAYDAY 2: A Merry Payday Christmas Soundtrack_cis", "PAYDAY 2: Armored Transport", "PAYDAY 2: Clover Character Pack", "PAYDAY 2: GOTY Edition_cis", "PAYDAY 2: Gage Assault Pack", "PAYDAY 2: Gage Historical Pack", "PAYDAY 2: Gage Mod Courier", "PAYDAY 2: Gage Ninja Pack", "PAYDAY 2: Gage Shotgun Pack", "PAYDAY 2: Gage Shotgun Pack_cis", "PAYDAY 2: Gage Sniper Pack", "PAYDAY 2: Gage Weapon Pack #01", "PAYDAY 2: Gage Weapon Pack #02", "PAYDAY 2: Gage Weapon Pack #02_cis", "PAYDAY 2: Hotline Miami", "PAYDAY 2: John Wick Heists", "PAYDAY 2: The Alesso Heist", "PAYDAY 2: The Big Bank Heist", "PAYDAY 2: The Bomb Heists_cis", "PAYDAY 2: The Butcher's BBQ Pack", "PAYDAY 2: The Diamond Heist", "PAYDAY 2: The OVERKILL B-Sides Soundtrack", "PAYDAY 2: The OVERKILL Pack", "PAYDAY 2: The OVERKILL Pack_cis", "PAYDAY 2: The Official Soundtrack", "PAYDAY 2: The Point Break Heists", "PAYDAY 2: Wolf Pack_cis", "PAYDAY 2: Yakuza Character Pack", "PAYDAY: The Heist Soundtrack", "PAYDAY™ The Heist", "PAYDAY™ The Heist: Wolfpack DLC", "PAYDAY™ The Heist: Wolfpack DLC_cis", "PAYDAY™ The Heist_cis", "PC Building Simulator", "PEAK", "POSTAL", "POSTAL 2", "POSTAL 2: Paradise Lost", "PUBG: BATTLEGROUNDS", "PULSAR: Lost Colony", "Pacify", "Painkiller Hell & Damnation", "Painkiller Redemption", "Painkiller: Black Edition", "Paintball 707", "Pajama Sam: No Need to Hide When It's Dark Outside", "Palworld", "Pandemic Express - Zombie Escape", "Pandemic Express - Zombie Escape_cis", "Panzer Corps: Grand Campaign '39", "Panzermadels: Tank Dating Simulator", "Papers, Please", "Paradox Grand Strategy Collection", "Particula", "Particula_cis", "Pat & Mat", "Path of Exile 2", "Payday 2 Gift", "Payday 2 Gift Pre-Order", "Payday 2 Gift from John Wick", "Payday 2 Gift from John Wick_cis", "Peekaboo", "Peggle Deluxe", "Penny Arcade's On the Rain-Slick Precipice of Darkness 3_cis", "Phasmophobia", "Pianistic", "Pinball Arcade: Season Four Pack", "Pixel Piracy", "PixelJunk™ Eden", "Placid Plastic Duck Simulator", "Plague Inc: Evolved_cis", "Planet Coaster", "Planet Explorers", "Planetary Annihilation: TITANS", "Planets Under Attack", "Plants vs. Zombies GOTY Edition", "Plants vs. Zombies™ Garden Warfare 2: Deluxe Edition", "PlateUp!", "Plazma Being_cis", "Please, Don't Touch Anything Soundtrack", "Plug & Play", "Poker Night 2", "Poker Night at the Inventory", "Polarity", "Polarity_cis", "Poly Bridge", "Pool Nation", "Port Royale 3", "Port Royale 3 Gold and Patrician IV Gold - Double Pack", "Portal", "Portal 2", "Portal 2 - The Final Hours", "Portal 2_cis", "Portal_cis", "Post Apocalyptic Mayhem", "Post Apocalyptic Mayhem: DLC - Chaos Pack", "Post Master", "Postal 2 Complete", "Postal 2 Complete_cis", "Power of Love", "Pressured", "Pressured_cis", "Pride of Nations: The Scramble for Africa", "Primal Carnage", "Primal Carnage - Agent Trapper DLC", "Primal Carnage Skin Bundle", "Primal Carnage: Extinction", "Primal Carnage_cis", "Primal Fears", "Prime Status Upgrade", "Prime Status Upgrade_cis", "Prime World: Defenders", "Prince of Persia®: The Sands of Time", "Prison Architect", "Project CARS - Limited Edition Upgrade", "Project Zomboid", "Project Zomboid_cis", "Projekt: Passion - Season 1", "Propagation VR - Co-op", "Psi Cards - Soundtrack", "Psychonauts", "Pummel Party", "Punch Club", "Punch Club OST and Artbook", "Putt-Putt® Joins the Parade", "Puzzle Agent", "Puzzle Chronicles", "Puzzle Dimension", "Puzzle Scenery", "Puzzler World", "Puzzler World 2", "Puzzline", "Pyre", "Pyre_cis", "QR Champions: Jump Start Tournament_cis", "Quadrober Simulator", "Quake Live", "Quantum Conundrum: IKE-aramba!", "Quest of Dungeons", "R.E.P.O.", "RACE 07", "REKA", "REMNANT II®", "RIFT", "RIP - Trilogy™", "RIPD: The Game (ROW) Gift", "RISK™: Factions", "ROUNDS", "RPG Maker MV", "RPG Maker VX Ace", "RPG Maker VX Ace - High Fantasy Main Party Pack II", "RUNNING WITH RIFLES", "RUSH", "RUSH_cis", "RUSSIA BATTLEGROUNDS", "RUSSIAPHOBIA", "RWBY: Grimm Eclipse", "RWBY: Grimm Eclipse - JNPR", "Raft", "Ragdoll Runners", "Rain Blood Chronicles: Mirage", "Rain World", "Rampage Knights", "Ranch Simulator: Build, Hunt, Farm", "Ranch Simulator: Southwest Ranch & Farm Expansion Pack", "Rats - Time is running out!", "Ratty Catty", "Ratz Instagib", "Ratz Instagib_cis", "Ravaged", "Ready or Not", "Real Horror Stories Ultimate Edition", "Real World Racing", "Reassembly_cis", "Red Dead Redemption 2", "Red Faction: Armageddon Path to War DLC", "Red Faction: Guerrilla", "Red Orchestra 2: Heroes of Stalingrad with Rising Storm", "Red Orchestra 2: Heroes of Stalingrad with Rising Storm_cis", "Reflex", "Reflex Arena", "Reign Of Kings", "Reign Of Kings_cis", "Rekoil Gift", "Remnant: From the Ashes", "Remnant: From the Ashes - Swamps of Corsus Bundle", "Renegade Ops", "Reset 1-1", "Resident Evil 4", "Resident Evil 5", "Resident Evil 6", "Resident Evil 7 Biohazard", "Resident Evil Re:Verse - Hunk Skin: Grim Reaper (The Mercenaries 3D)", "Resident Evil Revelations 2", "Resident Evil: Operation Raccoon City", "Resident Evil: Revelations Jessica's G18 + Custom Part:", "Resident Evil: Revelations Jill's Samurai Edge + Custom Part:", "Resident Evil_cis", "Retro City Rampage™ DX", "Retro Game Crunch", "Retrovirus", "Retrovirus_cis", "Return to Castle Wolfenstein", "Revelations 2012", "Revenge of the Titans", "Reversion - The Meeting (2nd Chapter)", "Revolution Ace", "Revolution Ace_cis", "Ricochet", "Ridge Racer™ Unbounded_cis", "Rig n Roll", "Ring Runner: Flight of the Sages", "Riptide GP2", "Rise of Nations: Extended Edition", "Rise of Nations: Extended Edition_cis", "Rise of the Tomb Raider - Season Pass", "Rise of the Tomb Raider - Season Pass_cis", "Rise of the Tomb Raider 20 Year Celebration Pack_cis", "Rise of the Triad", "Rising Storm Beta Extra Copy", "Rising Storm Beta Extra Copy (DE)", "Rising Storm Game of the Year Edition", "Rising Storm Gift", "Rising Storm Gift (DE)", "Rising Storm Gift_cis", "Risk of Rain (2013)", "Risk of Rain (2013)_cis", "Risk of Rain 2", "Risk of Rain 2_cis", "Rivals of Aether", "Road Redemption", "RoboBlitz", "Roboquest", "Robot Roller-Derby Disco Dodgeball", "Robotex", "Robotex_cis", "Rochard: Hard Times", "Rocket League Gift", "Rocket League Gift_cis", "Rocket League&amp;reg;", "Rocket League®  - The Fate of the Furious™ Ice Charger", "Rocket League® - Back to the Future™ Car Pack", "Rocket League® - Batman v Superman: Dawn of Justice Car Pack", "Rocket League® - Chaos Run DLC Pack", "Rocket League® - Chaos Run DLC Pack_cis", "Rocket League® - Hot Wheels® Bone Shaker™", "Rocket League® - Hot Wheels® Twin Mill™ III", "Rocket League® - Marauder", "Rocket League® - Masamune", "Rocket League® - Supersonic Fury DLC Pack", "Rocksmith® 2014 – Oasis - “Live Forever”", "Rocksmith® 2014 – Poison - “Every Rose Has Its Thorn”", "Rocksmith® 2014 – R.E.M. - “Everybody Hurts”", "Rogue Stormers", "Rome: Total War™ - Alexander", "Rome: Total War™ - Alexander_cis", "Rome: Total War™ - Collection", "Roogoo", "Rubber Bandits", "Runestone Keeper - Soundtrack", "Rush Bros.", "Russian Life Simulator", "Rust", "Rust - Instruments Pack", "Rust - Sunburn Pack", "Rust_cis", "Rusty Lake Hotel_cis", "Ryse: Son of Rome", "Ryse: Son of Rome_cis", "S.T.A.L.K.E.R.: Shadow of Chernobyl", "SAMOLIOTIK_cis", "SCUM Charms pack", "SCUM Female Hair Pack", "SCUM Luis Moncada character pack", "SCUM Supporter Pack", "SCUM Supporter Pack 2", "SCUM Weapon Skins pack", "SCUM: Danny Trejo Character Pack", "SEX with HITLER", "SEX with HITLER 3D", "SEXDIVERS 🔞", "SKIBIDI BACKROOMS", "SMITE® - Ultimate God Pack", "SNOW - The Ultimate Edition", "SNOW - The Ultimate Edition_cis", "SONIC X SHADOW GENERATIONS", "SPACECOM", "SPACECOM_cis", "SPORE™", "SPORE™ Creepy & Cute Parts Pack", "SSHDFE ROW Gift", "SSHDSE ROW Gift", "STAR WARS Jedi: Fallen Order™", "STAR WARS™ Battlefront II (Classic, 2005)", "STAR WARS™ Battlefront™ II", "STAR WARS™ Jedi Knight - Jedi Academy™", "STAR WARS™ Jedi Knight - Mysteries of the Sith™", "STAR WARS™ Jedi Knight II - Jedi Outcast™", "STAR WARS™ Knights of the Old Republic™", "STAR WARS™ Knights of the Old Republic™ II - The Sith Lords™", "STEINS;GATE 0", "SURVIVAL: Postapocalypse Now", "Sable", "Sacred Citadel", "Saints Row 2", "Saints Row IV: Commander-In-Chief Pack", "Saints Row IV: Re-Elected", "Saints Row: Gat out of Hell - Devil’s Workshop pack", "Saints Row: The Third", "Saints Row: The Third - The Full Package", "Saints Row: The Third Season Pass DLC Pack", "Sakura Clicker - Striped Bikini", "Sam & Max: The Devil's Playhouse", "Samudai Gift", "Sanctum", "Sanctum 2", "Sanctum 2: Britech Skin Pack", "Sanctum 2_cis", "Sanctum_cis", "Sang-Froid - Tales of Werewolves", "Satisfactory", "Saturday Morning RPG", "Savage Lands", "Savage Lands_cis", "Save Jesus", "Savior's Grace Token Pack", "Say No! More", "Sayonara Wild Hearts", "Schedule I", "School Labyrinth", "Scourge: Outbreak Gift", "Scrap Mechanic_cis", "Screencheat", "Scribblenauts Unlimited", "Scribblenauts Unmasked: A DC Comics Adventure", "Sea of Thieves: 2024 Edition", "Sea of Thieves: 2025 Edition", "Secret Neighbor: Hello Neighbor Multiplayer", "Secret Of Magia", "Secret Of Magia_cis", "Secret Pie", "Secret Ponchos", "Secret World Legends", "Secret of the Magic Crystals", "Section 8: Prejudice", "See No Evil", "See No Evil_cis", "Seed of Evil", "Seen", "Sentinels of the Multiverse", "Serious Sam 2", "Serious Sam 2_cis", "Serious Sam 3 Bonus Content DLC", "Serious Sam 3 Standard", "Serious Sam 3: BFE", "Serious Sam 3: BFE Gift", "Serious Sam 3: BFE Gift_cis", "Serious Sam 3: Jewel of the Nile", "Serious Sam Classic: Second Edition", "Serious Sam Classics: Revolution", "Serious Sam Double D XXL", "Serious Sam Gold Pack", "Serious Sam HD", "Serious Sam HD: Firest Encounter (ROW)", "Serious Sam HD: Firest Encounter (ROW)_cis", "Serious Sam HD: The First Encounter Gift", "Serious Sam HD: The Second  Encounter Gift", "Serious Sam HD: The Second Encounter", "Serious Sam HD: The Second Encounter - Legend of the Beast", "Serious Sam HD: The Second Encounter - Serious 8 DLC", "Serious Sam: The Random Encounter", "Seven Kingdoms 2 HD", "Sex Simulator", "Sex with Stalin", "Sex with the Devil", "Shadow Harvest: Phantom Ops", "Shadow Warrior", "Shadowgate", "Shadowgrounds", "Shadowgrounds Pack", "Shadowrun Returns", "Shank", "Shank 2", "Shark Attack Deathmatch 2", "Shark Attack Deathmatch 2_cis", "Shattered Horizon", "She Will Shoot", "ShellShock Live", "ShellShock Live_cis", "Shelter 2 Mountains", "Shenmue I & II", "Shift Happens", "Ship Simulator Extremes: Ferry Pack", "Ship of Fools", "ShipLord", "Shoot Many Robots", "Shoot Many Robots Pre-order", "ShootMania Storm", "Shower With Your Dad Simulator 2015: Do You Still Shower With Your Dad", "Shredders", "Sid Meier's Civilization IV", "Sid Meier's Civilization V: Gods and Kings", "Sid Meier's Civilization: Beyond Earth Exoplanets Map Pack", "Sid Meier's Civilization® III Complete", "Sid Meier's Civilization® V", "Sid Meier's Civilization® VI: Gathering Storm", "Sid Meier's Civilization® V_cis", "Sid Meier’s Civilization® VI", "Sid Meier’s Civilization® VI: Rise and Fall", "Signal Ops", "Silver Chains", "SimCity™ 4 Deluxe Edition", "Simple Fish Adventure", "Sinister City_cis", "Sins of a Dark Age - Early Access Gift", "Sins of a Solar Empire®: Rebellion", "Sir, You Are Being Hunted", "Sixtieth Kilometer", "Skoof Simulator", "Skullgirls 2nd Encore", "Skullgirls 2nd Encore_cis", "Skullgirls: Beowulf", "Skullgirls: Big Band", "Skullgirls: Color Palette Bundle", "Skullgirls: Eliza", "Skullgirls: Robo-Fortune", "Skullgirls: Squigly", "Skulls of the Shogun", "SkyDrift: Extreme Fighters Premium Airplane Pack", "Slain: Back from Hell", "Slain: Back from Hell_cis", "Slash It", "Sleeping Dogs", "Sleeping Dogs: Retro Triad Pack", "Sleeping Dogs: Square Enix Character Pack", "Sleeping Dogs: The Red Envelope Pack", "Sleeping Dogs: Wheels of Fury", "Slime Rancher", "Slime Rancher 2", "Small World", "Smalland: Survive the Wilds", "Smart Factory Tycoon", "Sneaky Sneaky", "Sniper Elite 3", "Sniper Elite 3 - Camouflage Weapons Pack", "Sniper Elite 3 Season Pass", "Sniper Elite 3_cis", "Sniper Elite 5: Target Führer - Wolf Mountain", "Sniper Elite V2 - Kill Hitler + 2 Rifles", "Sniper Elite: Nazi Zombie Army", "Sniper Elite: Nazi Zombie Army 2", "Sniper Ghost Warrior (LV) + 2 DLC Gift", "Sniper Ghost Warrior 2: Siberian Strike", "Sniper Ghost Warrior Gold (base + 2 DLC) Gift", "Sniper Ghost Warrior Gold Edition", "Sniper: Ghost Warrior - Map Pack", "Sniper: Ghost Warrior - Second Strike", "Sniper: Ghost Warrior 2", "SnowRunner - 1-Year Anniversary Edition", "Soccer Online: Ball 3D", "Sol Survivor", "Solar 2", "Sonic & SEGA All-Stars Racing", "Sonic 3D Blast", "Sonic Mania", "Sonic The Hedgehog Gift Copy", "Sonic and All-Stars Racing Transformed Gift", "Sonic and All-Stars Racing Transformed: Metal Sonic & Outrun DLC", "Sons Of The Forest", "Soul Gambler: Dark Arts Edition", "Soulmask", "Soundpad", "South Park™: The Stick of Truth™", "South Park™: The Stick of Truth™ - Super Samurai Spaceman Pack", "South Park™: The Stick of Truth™ - Ultimate Fellowship Pack", "South Park™: The Stick of Truth™_cis", "Space Beast Terror Fright", "Space Empires V", "Space Engineers", "Space Engineers_cis", "Space Farmers", "Space Farmers_cis", "Space Forerunner Fleet Pack Gift", "Space Hack", "Space Hack_cis", "Space Hulk", "Space Pilgrim Episode I: Alpha Centauri", "Space Pilgrim Episode II: Epsilon Indi", "Space Pirates and Zombies", "Space Ribbon - Slipstream to the Extreme", "SpaceChem", "SpaceChem: 63 Corvi", "Spacebase DF-9", "Spacebase DF-9_cis", "Sparkle 2 Evo", "Spec Ops: The Line", "Spec Ops: The Line_cis", "Spectraball", "SpeedRunners", "SpeedRunners - Youtuber Pack 2", "SpeedRunners_cis", "Spin Rush", "Spirit Animal Pack", "Spirit of the North", "Spiritfarer®: Farewell Edition", "Splatter - Zombiecalypse Now", "Square Heroes", "Squirrel with a Gun", "Squishy the Suicidal Pig", "Squishy the Suicidal Pig_cis", "Star Saviors", "Star Saviors_cis", "Star Wolves", "StarForge Founders Club Gift", "StarForge Gift", "StarMade", "StarMade_cis", "Starbound", "Starbound_cis", "Stardew Valley", "Stargazer Christmas", "Starpoint Gemini", "Starpoint Gemini 2", "Starvoid Gift", "State of Decay - Breakdown", "State of Decay - Lifeline", "State of Decay 2: Juggernaut Edition", "State of Decay: YOSE", "State of Decay_cis", "Steam Community Beta Access", "Steam Mobile Access", "Steam Trading Card Beta Access - Extra Copy", "SteamWorld Heist_cis", "Steel Storm: Burning Retribution_cis", "Steep™", "Stellar 2D", "Stellar Blade™ Complete Edition", "Stellar Impact - Artillery Ship DLC", "Stellar Impact - Science Vessel DLC", "Stellaris", "Stick Fight: The Game", "Still Life Collection", "Stonerid", "Storm United Gift", "Stranded Deep_cis", "Strange Night", "Stray", "Street Fighter V Beta Gift", "Street Fighter V Beta Gift_cis", "Street Fighter X Tekken", "Street Fighter X Tekken: Akuma (Swap Costume)", "Street Fighter™ 6", "Strike Vector", "Stronghold Crusader 2", "Stronghold Crusader 2_cis", "Stronghold Crusader HD", "Stronghold Crusader HD (2012)", "Stronghold Crusader HD_cis", "Stronghold HD (2012)", "Styx: Shards of Darkness_cis", "Sultan's Game", "Summer Memories", "Sun Blast: Star Fighter", "Sun Blast: Star Fighter_cis", "SunAge: Battle for Elysium", "Super Amazing Wagon Adventure", "Super Bunny Man", "Super Hexagon", "Super Hipster Lumberjack", "Super House of Dead Ninjas", "Super Kaiju", "Super Lolicon Puzzle Simulator 2019", "Super Meat Boy", "Super Meat Boy_cis", "Super Monday Night Combat", "Super Monday Night Combat Gift", "Super Monday Night Combat Gift_cis", "Super Panda Adventures", "Super Time Force Ultra", "SuperPower 2 Steam Edition", "Supermarket Simulator", "Supermarket Together - The Cool Pack", "Supreme Commander 2", "Supreme Commander: Forged Alliance", "Surgeon Simulator", "Surgeon Simulator + I Am Bread", "Surgeon Simulator_cis", "Survive the Nights", "Swaying Girl", "Sweet SKY", "Sword Coast Legends - Gift", "Sword With Sauce", "Swords and Soldiers HD", "Syberia II", "Syder Arcade", "Symphonia", "System Shock 2", "TCG Card Shop Simulator", "THE GAME OF LIFE", "THE KING OF FIGHTERS '98 ULTIMATE MATCH FINAL EDITION", "THE KING OF FIGHTERS 2002 UNLIMITED MATCH", "THE KING OF FIGHTERS XIII STEAM EDITION", "THIEF DLC: Booster Pack - Opportunist", "THIEF DLC: Booster Pack - Predator", "THIEF DLC: The Forsaken - Challenge Map", "THIEF: The Bank Heist", "TIEBREAK: Official game of the ATP and WTA", "TOME: Starter Pack Gift", "TOXIKK - Triple Gift", "TOXIKK Gift", "TRISTOY", "TRISTOY_cis", "TRON RUN/r Ultimate Edition - Gift Base Game", "TRON RUN/r Ultimate Edition - Gift Base Game_cis", "TUNIC", "Tabletop Simulator", "Tabletop Simulator_cis", "Tactical Breach Wizards", "Take On Mars", "Takedown: Red Sabre", "Tales of Maj'Eyal", "Tales of Zestiria", "Tales of Zestiria - School Costume Set", "Talisman: Digital Classic Edition", "Talisman: Digital Classic Edition_cis", "Talisman: Digital Edition", "Talisman: Digital Edition_cis", "Talisman: Prologue", "Talismania Deluxe", "Tango Fiesta", "Tattletail", "Team Fortress 2", "Team Fortress Classic", "Teddy Floppy Ear - Mountain Adventure", "Terra Incognita Chapter One: The Descendant", "Terra Incognita Chapter One: The Descendant_cis", "TerraTech", "TerraTech: R&D Labs", "Terraria", "Terraria_cis", "Terrorhedron Tower Defense", "Tesla Effect: A Tex Murphy Adventure", "That Time I Got Reincarnated as an Orc", "The Albino Hunter (Original)_cis", "The Ball", "The Banner Saga", "The Banner Saga_cis", "The Binding of Isaac", "The Binding of Isaac: Afterbirth", "The Binding of Isaac: Rebirth", "The Binding of Isaac: Rebirth - Soundtrack", "The Binding of Isaac_cis", "The Bureau: XCOM Declassified - Light Plasma Pistol", "The Chaos Engine", "The Chosen RPG", "The Collider", "The Crew Wild Run - Beta Gift Copy", "The Crew Wild Run - Beta Gift Copy_cis", "The Crew™ 2", "The Crew™ Calling All Units", "The Crew™ Extreme Car Pack", "The Crew™ Speed Car Pack", "The Crew™ Street Edition Pack", "The Daedalic Armageddon Bundle", "The Darkness II", "The Deed", "The Deed: Dynasty", "The Elder Scrolls IV: Oblivion® Game of the Year Edition (2009)", "The Elder Scrolls Online: Gold Road", "The Elder Scrolls V: Skyrim", "The Elder Scrolls V: Skyrim - Hearthfire", "The Elder Scrolls V: Skyrim Special Edition", "The Elder Scrolls® Online", "The Escapists", "The Escapists - Alcatraz", "The Escapists - Duct Tapes are Forever", "The Escapists - Escape Team", "The Escapists 2", "The Evil Within_cis", "The Executive - Movie Industry Tycoon", "The First Templar - Steam Special Edition", "The Forest", "The Forest_cis", "The Hat Man: Shadow Ward", "The Hat Man: Shadow Ward_cis", "The Haunted: Hells Reach", "The Headliners", "The Henry Stickmin Collection", "The Howler", "The Howler_cis", "The I of the Dragon", "The Incredible Adventures of Van Helsing - Complete Pack", "The Incredible Adventures of Van Helsing II", "The Journey Down: Chapter One", "The Last of Us™ Part I", "The Long Dark", "The Long Dark_cis", "The Long Drive", "The Longest Journey + Dreamfall", "The Misadventures of P.B. Winterbottom", "The Next Door", "The Odyssey: Winds of Athena", "The Odyssey: Winds of Athena_cis", "The Old City: Leviathan", "The Orange Box", "The Past Within", "The Path", "The Planet Crafter", "The Planet Crafter - Planet Humble", "The Political Machine", "The Polynomial - Space of the music", "The Quinfall", "The Red Solstice", "The Room", "The Room Two", "The Secret of Monkey Island: Special Edition", "The Ship - 2 Pack Gift", "The Ship - 2 Pack Gift_cis", "The Ship Gift", "The Ship: Murder Party_cis", "The Showdown Effect Digital Deluxe Gift", "The Showdown Effect Standard Gift", "The Silent Age", "The Sims 3 - Movie Stuff", "The Sims 3: Island Paradise", "The Sims 3: Seasons", "The Sims™ 3", "The Sims™ 3 Generations", "The Sims™ 3 Master Suite Stuff", "The Sims™ 3 Pets", "The Sims™ 3 Showtime", "The Sims™ 4", "The Sims™ 4 Cats & Dogs", "The Stanley Parable", "The Stronghold Collection", "The Survivalists", "The Talos Principle_cis", "The Technomancer", "The Testament of Sherlock Holmes", "The Void", "The Walking Dead", "The Walking Dead: 400 Days", "The Walking Dead: Season Two", "The Walking Dead_cis", "The Witcher 2: Assassins of Kings Enhanced Edition", "The Witcher 2: Assassins of Kings Enhanced Edition_cis", "The Witcher 3: Wild Hunt", "The Witcher 3: Wild Hunt - Blood and Wine", "The Witcher 3: Wild Hunt - Complete Edition", "The Witcher 3: Wild Hunt - Complete Edition_cis", "The Witcher 3: Wild Hunt - Expansion Pass_cis", "The Witcher 3: Wild Hunt - Game of the Year Edition", "The Witcher 3: Wild Hunt - Hearts of Stone", "The Witcher 3: Wild Hunt - Hearts of Stone_cis", "The Witcher Adventure Game", "The Witcher: Enhanced Edition Director's Cut", "The Witcher: Enhanced Edition Director's Cut_cis", "The Witcher: Enhanced Edition Gift", "The Witcher: Enhanced Edition Gift_cis", "The Wolf Among Us", "The Wonderful End of the World", "Theatre of War 2: Africa 1943", "There's Poop In My Soup", "Thief Simulator", "Thief Town", "Thief™ Gold", "ThinkToDie - Supporter Package_cis", "This War of Mine", "This War of Mine: The Little Ones_cis", "This War of Mine_cis", "ThreadSpace: Hyperbol", "Three Heroes", "Three Heroes_cis", "Tick Tock: A Tale for Two", "Tidalis", "Timberman", "Time Gentlemen, Please! and Ben There, Dan That! Special Edition  Double Pack", "Timen runner", "Tiny Brains", "Tiny Bridge: Ratventure", "Tiny Bridge: Ratventure_cis", "Titan Quest Anniversary Edition", "Titan Quest Anniversary Edition_cis", "To The Moon Game and Soundtrack Bundle", "To The Moon Game and Soundtrack Bundle_cis", "To the Moon", "Toilet Tycoon", "Toki Tori", "Toki Tori_cis", "Tom Clancy's  The Division™ -  Military Specialists Outfits Pack", "Tom Clancy's EndWar™", "Tom Clancy's Ghost Recon Phantoms - EU Infinite Pack", "Tom Clancy's Ghost Recon®", "Tom Clancy's Rainbow Six Siege - Beta Gift", "Tom Clancy's Rainbow Six Siege - Beta Gift_cis", "Tom Clancy's Rainbow Six® 3 Gold", "Tom Clancy's Rainbow Six® Siege", "Tom Clancy's Rainbow Six® Siege - Cyan Weapon Skin", "Tom Clancy's Rainbow Six® Siege - Ruby Weapon Skin", "Tom Clancy's Rainbow Six® Siege - The Safari Bundle", "Tom Clancy's Rainbow Six® Siege – Ops Icon Charm Bundle", "Tom Clancy's Rainbow Six® Vegas", "Tom Clancy's Rainbow Six® Vegas 2", "Tom Clancy's Rainbow Six® Vegas_cis", "Tom Clancy's Splinter Cell Blacklist - Homeland DLC", "Tom Clancy's Splinter Cell®", "Tom Clancy's Splinter Cell®_cis", "Tom Clancy's The Division™ - Frontline Outfits Pack", "Tom Clancy's The Division™ - Season Pass", "Tom Clancy’s Rainbow Six® Extraction", "Tom Clancy’s Splinter Cell Blacklist", "Tom Clancy’s Splinter Cell Blacklist - High Power Pack DLC", "Tom Clancy’s The Division 2 - Bargain Bundle", "Tom Clancy’s The Division™", "Tomb Raider", "Tomb Raider VI: The Angel of Darkness", "Tomb Raider: Adventure Pack", "Tomb Raider: Anniversary", "Tomb Raider: Legend", "Tomb Raider: STG 58 Elite", "Tomb Raider: Scavenger Executioner", "Tomb Raider: Shipwrecked Multiplayer Map Pack", "Tomb Raider: Tomb of the Lost Adventurer", "Tomb Raider: Underworld", "Tomb Raider_cis", "Torchlight", "Torchlight II", "Total Annihilation", "Total War Saga: FALL OF THE SAMURAI – The Obama Faction Pack", "Total War Saga: FALL OF THE SAMURAI – The Saga Faction Pack", "Total War Saga: FALL OF THE SAMURAI – The Sendai Faction Pack", "Total War Saga: FALL OF THE SAMURAI – The Tsu Faction Pack", "Total War Saga: FALL OF THE SAMURAI – The Tsu Faction Pack_cis", "Total War: ATTILA - Blood & Burning", "Total War: ATTILA - Celts Culture Pack", "Total War: MEDIEVAL II - Definitive Edition", "Total War: PHARAOH", "Total War: ROME II - Beasts of War Unit Pack", "Total War: ROME II - Blood & Gore", "Total War: ROME II - Caesar in Gaul Campaign Pack", "Total War: ROME II - Daughters of Mars Unit Pack", "Total War: ROME II - Emperor Edition", "Total War: ROME II - Greek States Culture Pack", "Total War: ROME II - Hannibal at the Gates Campaign Pack", "Total War: ROME II - Nomadic Tribes Culture Pack", "Total War: ROME II - Pirates and Raiders Culture Pack", "Total War: SHOGUN 2 - Rise of the Samurai Campaign", "Total War: SHOGUN 2 - Sengoku Jidai Unit Pack", "Total War: SHOGUN 2 - The Hattori Clan Pack", "Total War: SHOGUN 2 - The Ikko Ikki Clan Pack", "Total War: SHOGUN 2 – Otomo Clan Pack DLC", "Total War: SHOGUN 2: Saints and Heroes Unit Pack", "Total War: Shogun 2 - Blood Pack DLC", "Total War: WARHAMMER - Call of the Beastmen", "Total War: WARHAMMER - Chaos Warriors", "Total War: WARHAMMER - Realm of The Wood Elves", "Total War: WARHAMMER - The Grim and the Grave", "Total War: WARHAMMER - The King and the Warlord", "Total War: WARHAMMER III - Elspeth – Thrones of Decay", "Totally Accurate Battle Simulator", "Touhou Mystia's Izakaya", "Touhou Mystia's Izakaya DLC2 Pack - Former Hell & Chireiden", "Tower Wars", "Town of Salem", "Toybox Turbos", "TrackMania² Stadium", "TrackMania² Valley", "Trailmakers", "Train Simulator: Metro-North Kawasaki M8 EMU Add-On", "Train Simulator: NEC: New York-New Haven Route Add-On", "Trainz™ Simulator 12", "Transistor", "Trapped Dead", "Trapped Dead: Lockdown", "Tree of Life", "Tree of Savior (English Ver.)", "Trials Fusion Season Pass", "Trine 2: Complete Story", "Trine 2: Complete Story Gift", "Trine 2: Complete Story Gift_cis", "Trine 2: Goblin Menace", "Trine 3: The Artifacts of Power", "Trine 3: The Artifacts of Power_cis", "Trine Enchanted Edition", "Triple Town", "Tropico 4", "Tropico 4 Collector's Bundle", "Tropico 5", "Tropico 5 - Gone Green", "Tropico Trilogy", "Truco", "Tryst: Survival DLC_cis", "Turtle Odyssey", "Twin Sector", "Two Worlds Collection", "Two Worlds II HD", "UBERMOSH + Original Soundtrack", "UBERMOSH Collection", "UFO 50", "UNO", "USFIV: All-in 2011 Costume Pack", "USFIV: Wild Costume Pack", "Ultimate Chicken Horse", "Ultimate Monkey Race", "Ultimate Zombie Defense 2", "Ultra Street Fighter® IV Digital Upgrade", "Ultratron", "UnEpic", "Undertale", "Undertale_cis", "Uninvited Guest", "Universe Sandbox Legacy", "Universe at War", "Unknown package (66117)", "Unknown package 101060", "Unknown package 105713", "Unknown package 1065", "Unknown package 109208", "Unknown package 11157", "Unknown package 111601", "Unknown package 11274", "Unknown package 11443", "Unknown package 116091", "Unknown package 11664", "Unknown package 11754", "Unknown package 117639", "Unknown package 118358", "Unknown package 12036", "Unknown package 12072", "Unknown package 12111", "Unknown package 12163", "Unknown package 12184", "Unknown package 123216", "Unknown package 12323", "Unknown package 12436", "Unknown package 12529", "Unknown package 12610", "Unknown package 12624", "Unknown package 12669", "Unknown package 12670", "Unknown package 12671", "Unknown package 126791", "Unknown package 12704", "Unknown package 12706", "Unknown package 12717", "Unknown package 12721", "Unknown package 12736", "Unknown package 12749", "Unknown package 12754", "Unknown package 12764", "Unknown package 12766", "Unknown package 12797", "Unknown package 12798", "Unknown package 12799", "Unknown package 12825", "Unknown package 12893", "Unknown package 12897", "Unknown package 12898", "Unknown package 12905", "Unknown package 12935", "Unknown package 129360", "Unknown package 12943", "Unknown package 13093", "Unknown package 13094", "Unknown package 13095", "Unknown package 13151", "Unknown package 13152", "Unknown package 13408", "Unknown package 13499", "Unknown package 135549_cis", "Unknown package 13743", "Unknown package 13900", "Unknown package 140146", "Unknown package 14221", "Unknown package 14270", "Unknown package 1438", "Unknown package 14455", "Unknown package 146302_cis", "Unknown package 148686", "Unknown package 14907", "Unknown package 15190", "Unknown package 15408", "Unknown package 15630", "Unknown package 1579", "Unknown package 1580", "Unknown package 16223", "Unknown package 16429", "Unknown package 16535", "Unknown package 16540", "Unknown package 16917", "Unknown package 16919", "Unknown package 1693", "Unknown package 17284", "Unknown package 17285", "Unknown package 17285_cis", "Unknown package 17286", "Unknown package 17287", "Unknown package 17288", "Unknown package 17289", "Unknown package 17290", "Unknown package 17291", "Unknown package 17410", "Unknown package 17728", "Unknown package 17736", "Unknown package 17741", "Unknown package 17881", "Unknown package 17881_cis", "Unknown package 18018", "Unknown package 18192", "Unknown package 18246", "Unknown package 18251", "Unknown package 18259", "Unknown package 18261", "Unknown package 18397", "Unknown package 18456", "Unknown package 18777", "Unknown package 1884", "Unknown package 18844", "Unknown package 18845", "Unknown package 2103", "Unknown package 2105", "Unknown package 219", "Unknown package 2377", "Unknown package 2487", "Unknown package 2536", "Unknown package 25543", "Unknown package 25544", "Unknown package 25569", "Unknown package 25601", "Unknown package 2573", "Unknown package 2574", "Unknown package 26017", "Unknown package 26082_cis", "Unknown package 26313", "Unknown package 26486", "Unknown package 26509", "Unknown package 26622", "Unknown package 27281", "Unknown package 27281_cis", "Unknown package 27282", "Unknown package 27530", "Unknown package 27888", "Unknown package 27975", "Unknown package 28187", "Unknown package 28188_cis", "Unknown package 2824_cis", "Unknown package 2832", "Unknown package 2833", "Unknown package 28539", "Unknown package 28637", "Unknown package 28637_cis", "Unknown package 28987", "Unknown package 29106", "Unknown package 29144_cis", "Unknown package 2916", "Unknown package 29176", "Unknown package 29177", "Unknown package 29177_cis", "Unknown package 29197", "Unknown package 29197_cis", "Unknown package 29360", "Unknown package 30033", "Unknown package 30130", "Unknown package 30182", "Unknown package 30274", "Unknown package 30307", "Unknown package 30582", "Unknown package 30948", "Unknown package 30948_cis", "Unknown package 31186_cis", "Unknown package 31520", "Unknown package 31562", "Unknown package 31771", "Unknown package 31982_cis", "Unknown package 32159", "Unknown package 33318", "Unknown package 33495", "Unknown package 33961", "Unknown package 34366", "Unknown package 34431", "Unknown package 34680_cis", "Unknown package 35969", "Unknown package 36009", "Unknown package 36075", "Unknown package 36425", "Unknown package 36990", "Unknown package 370167", "Unknown package 370168", "Unknown package 37360", "Unknown package 38003", "Unknown package 38500_cis", "Unknown package 391", "Unknown package 39133", "Unknown package 39286", "Unknown package 39448", "Unknown package 39646", "Unknown package 39877", "Unknown package 40024_cis", "Unknown package 4025", "Unknown package 40649", "Unknown package 4090", "Unknown package 41", "Unknown package 41305_cis", "Unknown package 41328", "Unknown package 4193", "Unknown package 42337", "Unknown package 42337_cis", "Unknown package 42480", "Unknown package 42480_cis", "Unknown package 426", "Unknown package 43381", "Unknown package 44169_cis", "Unknown package 44220", "Unknown package 4433", "Unknown package 45019", "Unknown package 45183", "Unknown package 45320", "Unknown package 459", "Unknown package 4638", "Unknown package 46384", "Unknown package 46504", "Unknown package 46740", "Unknown package 470", "Unknown package 471", "Unknown package 47509", "Unknown package 47804", "Unknown package 4829", "Unknown package 48977", "Unknown package 49728_cis", "Unknown package 49774_cis", "Unknown package 49800", "Unknown package 49903", "Unknown package 49905_cis", "Unknown package 49974_cis", "Unknown package 51149", "Unknown package 51150_cis", "Unknown package 51211_cis", "Unknown package 51297", "Unknown package 51499", "Unknown package 516", "Unknown package 51669", "Unknown package 51669_cis", "Unknown package 52292", "Unknown package 52597", "Unknown package 52597_cis", "Unknown package 53326", "Unknown package 54017", "Unknown package 54030", "Unknown package 54030_cis", "Unknown package 54109", "Unknown package 54109_cis", "Unknown package 54408", "Unknown package 54408_cis", "Unknown package 54410", "Unknown package 54471", "Unknown package 54909", "Unknown package 54910_cis", "Unknown package 55833", "Unknown package 55833_cis", "Unknown package 55834", "Unknown package 56484", "Unknown package 56486_cis", "Unknown package 56709", "Unknown package 57675_cis", "Unknown package 58514", "Unknown package 58514_cis", "Unknown package 593", "Unknown package 59393_cis", "Unknown package 594", "Unknown package 6003_cis", "Unknown package 60639", "Unknown package 6219", "Unknown package 62267_cis", "Unknown package 62412_cis", "Unknown package 6249", "Unknown package 6250", "Unknown package 62701_cis", "Unknown package 62896_cis", "Unknown package 63446", "Unknown package 6346", "Unknown package 63681", "Unknown package 6381", "Unknown package 6447", "Unknown package 6487", "Unknown package 64902", "Unknown package 64902_cis", "Unknown package 65039_cis", "Unknown package 65204", "Unknown package 66255_cis", "Unknown package 6639", "Unknown package 66404", "Unknown package 66404_cis", "Unknown package 66703", "Unknown package 6685", "Unknown package 66904", "Unknown package 66904_cis", "Unknown package 67071", "Unknown package 67071_cis", "Unknown package 67613", "Unknown package 67613_cis", "Unknown package 67652_cis", "Unknown package 68063_cis", "Unknown package 68154", "Unknown package 68616", "Unknown package 68943", "Unknown package 6970", "Unknown package 72017", "Unknown package 72159_cis", "Unknown package 72161", "Unknown package 72593_cis", "Unknown package 73706", "Unknown package 7432", "Unknown package 74582", "Unknown package 74582_cis", "Unknown package 75200", "Unknown package 76760", "Unknown package 76760_cis", "Unknown package 77059", "Unknown package 783", "Unknown package 79015", "Unknown package 7926", "Unknown package 7932", "Unknown package 79549_cis", "Unknown package 8013", "Unknown package 80561", "Unknown package 81441_cis", "Unknown package 81557", "Unknown package 8171", "Unknown package 8256", "Unknown package 83202_cis", "Unknown package 83256", "Unknown package 83886_cis", "Unknown package 84206", "Unknown package 8672", "Unknown package 86905", "Unknown package 8796", "Unknown package 89583", "Unknown package 90424", "Unknown package 90463", "Unknown package 91065", "Unknown package 91065_cis", "Unknown package 93107", "Unknown package 93107_cis", "Unknown package 95019", "Unknown package 95683", "Unknown package 96788", "Unknown package 99222", "Unpacking", "Unreal Tournament 2004: Editor's Choice Edition", "Unstoppable Gorg", "Untitled Goose Game", "Unturned - Permanent Gold Upgrade", "Upgrade to Magnetic: Cage Closed Collector's Edition", "Upgrade to Trine 2 Collector's Edition", "Uplink", "Urban Trial Freestyle", "VEGAS Pro 14 Edit Steam Edition", "VERGE:Lost chapter", "VVVVVV", "Valheim", "Valiant Hearts: The Great War™ / Soldats Inconnus : Mémoires de la Grande Guerre™_cis", "Valkyria Chronicles™", "Vampire Survivors", "Vampire Survivors: Ode to Castlevania", "Van Helsing II : Complete Pack", "Vegas: Make It Big™", "Velocity®Ultra", "Velvet Assassin", "Velvet Sundown - Originals Bundle Gift", "Verdun", "Verdun_cis", "Victor Vran 2- pack gift", "Victor Vran 4- pack gift", "Victoria II", "Viscera Cleanup Detail - House of Horror", "Viscera Cleanup Detail Gift", "Viscera Cleanup Detail Gift_cis", "Viscera Cleanup Detail: Santa's Rampage", "Vlad the Impaler", "Voice of Pripyat_cis", "Void Crew", "VoidExpanse", "Volcano Princess", "Volgarr the Viking", "WEBFISHING", "WRC 7 FIA World Rally Championship", "Wallpaper Engine", "Wallpaper Engine_cis", "Wanderlust: Rebirth", "Wanderlust: Rebirth_cis", "War of the Roses Gift Sub", "War of the Roses Gift Sub Pre-Order", "War of the Vikings: Bonus Coins", "Warface Sniper Starter Pack", "Wargame: Airland Battle", "Wargame: Red Dragon_cis", "Warhammer 40,000: Dawn of War - Master Collection", "Warhammer 40,000: Dawn of War II", "Warhammer 40,000: Dawn of War II - Retribution", "Warhammer 40,000: Dawn of War II - Retribution Ork Race Pack", "Warhammer 40,000: Dawn of War II: Chaos Rising", "Warhammer 40,000: Eternal Crusade", "Warhammer 40,000: Eternal Crusade_cis", "Warhammer 40,000: Rogue Trader", "Warhammer 40,000: Space Marine - Chaos Unleashed Map Pack", "Warhammer 40,000: Space Marine - Emperor’s Elite Pack", "Warhammer 40,000: Space Marine 2", "Warhammer: Vermintide 2", "Warlocks vs Shadows", "Warlocks vs Shadows_cis", "Watch_Dogs™", "Waveform", "Waveform_cis", "Wayout", "We Are The Dwarves", "We Were Here Expeditions: The FriendShip", "We Were Here Together", "Wedding Witch", "Welcome to the Game - Hacker Mode", "WhaleGameOnline", "When Ski Lifts Go Wrong - Deluxe Edition", "White Noise Online", "White Noise Online_cis", "Who Wants to Be a Millionaire", "Who's Your Daddy?!", "Who's Your Daddy?!_cis", "Wickland", "Wild Frontera 4pack gift", "Windblown", "Windborne", "Windward", "Windward_cis", "Witch It", "Wolfpack", "Wonky Pigeon!", "Woodle Tree Adventures", "Woodle Tree Adventures_cis", "World Basketball Manager 2010", "World War Z", "World of Diving", "World of Goo", "Worlds Adrift - Standard Edition GIFT", "Worms Armageddon", "Worms Clan Wars", "Worms Crazy Golf", "Worms Reloaded", "Worms Reloaded: The \"Pre-order Forts and Hats\" DLC Pack", "Worms Revolution", "Worms Revolution Pre-Order Gift", "Worms Revolution_cis", "Worms Ultimate Mayhem", "Worms Ultimate Mayhem - Deluxe Edition", "Worms Ultimate Mayhem_cis", "Worms W.M.D", "X-COM: Apocalypse", "X-COM: Complete Pack", "X-COM: Enforcer", "X-COM: Interceptor", "X-COM: Terror From the Deep", "X-COM: UFO Defense", "XCOM: Enemy Unknown", "XCOM: Enemy Unknown - Elite Soldier Pack", "XCOM: Enemy Unknown - Slingshot Pack", "XCOM: Enemy Unknown_cis", "XCOM: Enemy Within", "XCOM: Enemy Within_cis", "XenoRaptor", "YOU DON'T KNOW JACK Vol. 6 The Lost Gold_cis", "Yakuza 0", "Yet Another Zombie Defense", "Yet Another Zombie Defense_cis", "Your Mother", "Your Only Move Is HUSTLE", "Youtubers Life", "Ys Origin", "Z_cis", "Zeno Clash 2", "Zero Gear", "Zero Hour", "Zolg", "Zombie Army Trilogy", "Zombie Army Trilogy_cis", "Zombie Driver HD", "Zombie Driver HD Brutal Car Skins", "Zombie Driver HD Brutal Car Skins_cis", "Zombie Driver HD_cis", "Zombie Hunter, Inc.", "Zombie Kill of the Week - Reborn", "Zombie Kill of the Week - Reborn_cis", "Zombie Tycoon 2: Brainhov's Revenge", "Zombie Tycoon 2: Brainhov's Revenge_cis", "Zort", "Zueirama", "Zuma Deluxe", "iDigging", "ibb & obb", "ibb & obb_cis", "ibb &amp; obb - Gift  Luxurious Friends Forever", "nail'd", "oO_cis", "theHunter: Call of the Wild™", "theHunter: Call of the Wild™ - ATV SABER 4X4", "your wife", "怕不怕趴喵霸霸 Ghost Party Nyanbaba", "拯救大魔王重生 Falsemen: Demon Rebirth"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gift_min: {
                    readonly title: "Gift Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of gifts.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gift_max: {
                    readonly title: "Gift Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of gifts.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly recently_hours_min: {
                    readonly title: "Recently Hours Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of recently played hours.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly recently_hours_max: {
                    readonly title: "Recently Hours Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of recently played hours.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cs2_profile_rank_min: {
                    readonly title: "Cs2 Profile Rank Min";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 40;
                    readonly description: "Minimum CS2 rank.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cs2_profile_rank_max: {
                    readonly title: "Cs2 Profile Rank Max";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 40;
                    readonly description: "Maximum CS2 rank.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly solommr_min: {
                    readonly title: "SoloMMR Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of Dota 2 MMR.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly solommr_max: {
                    readonly title: "SoloMMR Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of Dota 2 MMR.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_game_count_min: {
                    readonly title: "D2 Game Count Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of Dota 2 games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_game_count_max: {
                    readonly title: "D2 Game Count Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of Dota 2 games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_win_count_min: {
                    readonly title: "D2 Win Count Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of Dota 2 wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_win_count_max: {
                    readonly title: "D2 Win Count Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of Dota 2 wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_behavior_min: {
                    readonly title: "D2 Behavior Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly maximum: 12000;
                    readonly description: "Minimum number of Dota 2 behavior.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_behavior_max: {
                    readonly title: "D2 Behavior Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly maximum: 12000;
                    readonly description: "Maximum number of Dota 2 behavior.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly faceit_lvl_min: {
                    readonly title: "Faceit Lvl Min";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 10;
                    readonly description: "Minimum FACEIT level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly faceit_lvl_max: {
                    readonly title: "Faceit Lvl Max";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 10;
                    readonly description: "Maximum FACEIT level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly points_min: {
                    readonly title: "Points Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of Steam points.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly points_max: {
                    readonly title: "Points Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of Steam points.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly relevant_gmin: {
                    readonly title: "Relevant Gmin";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of relevant games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly relevant_gmax: {
                    readonly title: "Relevant Gmax";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of relevant games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_trans_date: {
                    readonly title: "Last Trans Date";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is last transaction.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_trans_date_period: {
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_trans_date_later: {
                    readonly title: "Last Trans Date Later";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How new is last transaction.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly last_trans_date_period_later: {
                    readonly title: "Last Trans Date Period Later";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly no_trans: {
                    readonly title: "No Trans";
                    readonly type: "boolean";
                    readonly description: "Has no transactions.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly trans: {
                    readonly title: "Trans";
                    readonly type: "boolean";
                    readonly description: "Has transactions.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gifts_purchase_min: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Minimum amount spent on gifts.";
                };
                readonly gifts_purchase_max: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Maximum amount spent on gifts.";
                };
                readonly refunds_purchase_min: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Minimum amount of refunds.";
                };
                readonly refunds_purchase_max: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Minimum amount of refunds.";
                };
                readonly ingame_purchase_min: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Minimum spend amount on in-game purchases.";
                };
                readonly ingame_purchase_max: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Maximum spend amount on in-game purchases.";
                };
                readonly games_purchase_min: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Minimum spend amount on all purchases.";
                };
                readonly games_purchase_max: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Maximum spend amount on all purchases.";
                };
                readonly purchase_min: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Minimum spend amount on all purchases.";
                };
                readonly purchase_max: {
                    readonly type: "number";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Maximum spend amount on all purchases.";
                };
                readonly has_activated_keys: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has activated keys.";
                };
                readonly elo_min: {
                    readonly title: "Elo Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly maximum: 50000;
                    readonly description: "Minimum Premier ELO in CS2.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly elo_max: {
                    readonly title: "Elo Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly maximum: 50000;
                    readonly description: "Maximum Premier ELO in CS2.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cs2_map_rank: {
                    readonly title: "Cs2 Map Rank";
                    readonly type: "integer";
                    readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];
                    readonly "x-enumDescriptions": {
                        readonly "1": "Dust II";
                        readonly "2": "Mirage";
                        readonly "3": "Train";
                        readonly "4": "Nuke";
                        readonly "5": "Overpass";
                        readonly "6": "Inferno";
                        readonly "7": "Ancient";
                        readonly "8": "Vertigo";
                        readonly "9": "Anubis";
                        readonly "10": "Office";
                        readonly "11": "Thera";
                        readonly "12": "Mills";
                        readonly "13": "Italy";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Map for rank in CS2.";
                };
                readonly cs2_map_rmin: {
                    readonly title: "Cs2 Map Rank Min";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 18;
                    readonly description: "Minimum rank in CS2 on a certain map.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cs2_map_rmax: {
                    readonly title: "Cs2 Map Rank Max";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly maximum: 18;
                    readonly description: "Maximum rank in CS2 on a certain map.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly has_faceit: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has FACEIT account.";
                    readonly title: "Has Faceit";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly faceit_csgo_lvl_min: {
                    readonly description: "Minimum FACEIT level.";
                    readonly title: "Faceit Csgo Lvl Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly faceit_csgo_lvl_max: {
                    readonly description: "Maximum FACEIT level.";
                    readonly title: "Faceit Csgo Lvl Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rust_deaths_min: {
                    readonly type: "integer";
                    readonly description: "Minimum number of Rust deaths";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rust_deaths_max: {
                    readonly type: "integer";
                    readonly description: "Maximum number of Rust deaths";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rust_kills_min: {
                    readonly type: "integer";
                    readonly description: "Minimum number of Rust kills";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rust_kills_max: {
                    readonly type: "integer";
                    readonly description: "Maximum number of Rust kills";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_last_match_date: {
                    readonly title: "D2 Last Match Date";
                    readonly type: "integer";
                    readonly description: "How old is last match of Dota 2.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly d2_last_match_date_period: {
                    readonly title: "D2 Last Match Date Period";
                    readonly type: "string";
                    readonly description: "In what notation is time measured.";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cards_min: {
                    readonly title: "Cards Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of available to collect trading cards.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cards_max: {
                    readonly title: "Cards Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of available to collect trading cards.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cards_games_min: {
                    readonly title: "Cards Games Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of available games with available to collect trading cards.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cards_games_max: {
                    readonly title: "Cards Games Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of available games with available to collect trading cards.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly steam_item_id: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_country: {
                                readonly title: "Steam";
                                readonly type: "string";
                            };
                            readonly steam_register_date: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_last_activity: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_full_games: {
                                readonly title: "Steam";
                                readonly type: "object";
                                readonly properties: {
                                    readonly list: {
                                        readonly title: "List";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly "730": {
                                                readonly title: "";
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly appid: {
                                                        readonly title: "Appid";
                                                        readonly type: "integer";
                                                    };
                                                    readonly playtime_forever: {
                                                        readonly title: "Playtime";
                                                        readonly type: "number";
                                                    };
                                                    readonly internal_game_id: {
                                                        readonly title: "Internal";
                                                        readonly type: "integer";
                                                    };
                                                    readonly abbr: {
                                                        readonly title: "Abbr";
                                                        readonly type: "string";
                                                    };
                                                    readonly title: {
                                                        readonly title: "Title";
                                                        readonly type: "string";
                                                    };
                                                    readonly parentGameId: {
                                                        readonly title: "Parent Game Id";
                                                        readonly type: "integer";
                                                    };
                                                    readonly img: {
                                                        readonly title: "Img";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["appid", "playtime_forever", "internal_game_id", "abbr", "title", "parentGameId", "img"];
                                            };
                                        };
                                        readonly required: readonly ["730"];
                                    };
                                    readonly total: {
                                        readonly title: "Total";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["list", "total"];
                            };
                            readonly steam_community_ban: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_bans: {
                                readonly title: "Steam";
                                readonly type: "string";
                            };
                            readonly steam_cs2_profile_rank: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_balance: {
                                readonly title: "Steam";
                                readonly type: "string";
                            };
                            readonly steam_cs2_rank_id: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_is_limited: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_level: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_friend_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_last_activity: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_dota2_solo_mmr: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_ban_date: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_converted_balance: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cards_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cards_games: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_pubg_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_dota2_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_tf2_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_rust_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_wingman_rank_id: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_game_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_steam_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_win_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_dota2_game_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_dota2_lose_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_dota2_win_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_hours_played_recently: {
                                readonly title: "Steam";
                                readonly type: "string";
                            };
                            readonly steam_faceit_level: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_points: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_last_transaction_date: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_relevant_game_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_gift_count: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_limit_spent: {
                                readonly title: "Steam";
                                readonly type: "string";
                            };
                            readonly steam_dota2_behavior: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_mfa: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_market: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_market_restrictions: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_market_ban_end_date: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_unturned_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_last_launched: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_kf2_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_dst_inv_value: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_premier_elo: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_has_activated_keys: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_cs2_ban_type: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_rust_kill_player: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_rust_deaths: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_total_gifts_rub: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_total_refunds_rub: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_total_ingame_rub: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_total_games_rub: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_total_purchased_rub: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly steam_dota2_last_match_date: {
                                readonly title: "Steam";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                                readonly type: "object";
                                readonly properties: {
                                    readonly duration: {
                                        readonly title: "Duration";
                                        readonly type: "integer";
                                    };
                                    readonly class: {
                                        readonly title: "Class";
                                        readonly type: "string";
                                    };
                                    readonly durationPhrase: {
                                        readonly title: "Duration Phrase";
                                        readonly type: "string";
                                    };
                                    readonly endDate: {
                                        readonly title: "End Date";
                                    };
                                    readonly active: {
                                        readonly title: "Active";
                                    };
                                    readonly cancelled: {
                                        readonly title: "Cancelled";
                                    };
                                    readonly remainingTime: {
                                        readonly title: "Remaining Time";
                                    };
                                };
                                readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime"];
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly steamData: {
                                readonly title: "Steam Data";
                                readonly type: "object";
                                readonly properties: {
                                    readonly steam_ban_type_id: {
                                        readonly title: "Steam";
                                        readonly type: "array";
                                        readonly items: {};
                                    };
                                };
                                readonly required: readonly ["steam_ban_type_id"];
                            };
                            readonly steamRelevantGameCount: {
                                readonly title: "Steam Relevant Game Count";
                                readonly type: "integer";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly hasCs2: {
                                readonly title: "Has Cs";
                                readonly type: "boolean";
                            };
                            readonly hasDota2: {
                                readonly title: "Has Dota";
                                readonly type: "boolean";
                            };
                            readonly hasPubg: {
                                readonly title: "Has Pubg";
                                readonly type: "boolean";
                            };
                            readonly hasTf2: {
                                readonly title: "Has Tf";
                                readonly type: "boolean";
                            };
                            readonly hasRust: {
                                readonly title: "Has Rust";
                                readonly type: "boolean";
                            };
                            readonly steam_cs2_ban_date_active: {
                                readonly title: "Steam";
                                readonly type: "boolean";
                            };
                            readonly dota2CalibrationWarning: {
                                readonly title: "Dota Calibration Warning";
                                readonly type: "boolean";
                            };
                            readonly displayConvertedBalance: {
                                readonly title: "Display Converted Balance";
                                readonly type: "boolean";
                            };
                            readonly inventoryValue: {
                                readonly title: "Inventory Value";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly steamCs2Medals: {
                                readonly title: "Steam Cs Medals";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly cs2RankExpired: {
                                readonly title: "Cs Rank Expired";
                                readonly type: "boolean";
                            };
                            readonly steamDota2WinRate: {
                                readonly title: "Steam Dota Win Rate";
                                readonly type: "integer";
                            };
                            readonly steamTransactions: {
                                readonly title: "Steam Transactions";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly date: {
                                            readonly title: "Date";
                                            readonly type: "string";
                                        };
                                        readonly product: {
                                            readonly title: "Product";
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                        readonly source: {
                                            readonly title: "Source";
                                            readonly type: "string";
                                        };
                                        readonly amount: {
                                            readonly title: "Amount";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["date", "product", "type", "source", "amount"];
                                };
                            };
                            readonly hasPossibleBanInDota2: {
                                readonly title: "Has Possible Ban In Dota";
                                readonly type: "boolean";
                            };
                            readonly chineseAccount: {
                                readonly title: "Chinese Account";
                                readonly type: "boolean";
                            };
                            readonly cs2MapsRanks: {
                                readonly title: "Cs Maps Ranks";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly cs2PremierElo: {
                                readonly title: "Cs Premier Elo";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly steamLifetimeTradeBan: {
                                readonly title: "Steam Lifetime Trade Ban";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "steam_item_id", "steam_country", "steam_register_date", "steam_last_activity", "steam_full_games", "steam_community_ban", "steam_bans", "steam_cs2_profile_rank", "steam_balance", "steam_cs2_rank_id", "steam_is_limited", "steam_level", "steam_friend_count", "steam_cs2_last_activity", "steam_dota2_solo_mmr", "steam_cs2_ban_date", "steam_converted_balance", "steam_cards_count", "steam_cards_games", "steam_pubg_inv_value", "steam_cs2_inv_value", "steam_dota2_inv_value", "steam_tf2_inv_value", "steam_rust_inv_value", "steam_cs2_wingman_rank_id", "steam_game_count", "steam_steam_inv_value", "steam_inv_value", "steam_cs2_win_count", "steam_dota2_game_count", "steam_dota2_lose_count", "steam_dota2_win_count", "steam_hours_played_recently", "steam_faceit_level", "steam_points", "steam_last_transaction_date", "steam_relevant_game_count", "steam_gift_count", "steam_limit_spent", "steam_dota2_behavior", "steam_mfa", "steam_market", "steam_market_restrictions", "steam_market_ban_end_date", "steam_unturned_inv_value", "steam_cs2_last_launched", "steam_kf2_inv_value", "steam_dst_inv_value", "steam_cs2_premier_elo", "steam_has_activated_keys", "steam_cs2_ban_type", "steam_rust_kill_player", "steam_rust_deaths", "steam_total_gifts_rub", "steam_total_refunds_rub", "steam_total_ingame_rub", "steam_total_games_rub", "steam_total_purchased_rub", "steam_dota2_last_match_date", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "steamData", "steamRelevantGameCount", "isSmallExf", "account_last_activity", "hasCs2", "hasDota2", "hasPubg", "hasTf2", "hasRust", "steam_cs2_ban_date_active", "dota2CalibrationWarning", "displayConvertedBalance", "inventoryValue", "steamCs2Medals", "cs2RankExpired", "steamDota2WinRate", "steamTransactions", "hasPossibleBanInDota2", "chineseAccount", "cs2MapsRanks", "cs2PremierElo", "steamLifetimeTradeBan", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategorySupercell: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly eg: {
                    readonly title: "Extended Guarantee";
                    readonly type: "integer";
                    readonly description: "Guarantee type.";
                    readonly "x-enumDescriptions": {
                        readonly "0": "24 hours";
                        readonly "1": "3 days";
                        readonly "2": "Guarantee at the time of purchase";
                        readonly "-1": "12 hours";
                    };
                    readonly enum: readonly [-1, 0, 1, 2];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has linked mobile.";
                };
                readonly brawl_level_min: {
                    readonly title: "Brawl Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum Brawl Stars level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawl_level_max: {
                    readonly title: "Brawl Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum Brawl Stars level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawl_cup_min: {
                    readonly title: "Brawl Cup Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Brawl Stars trophies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawl_cup_max: {
                    readonly title: "Brawl Cup Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Brawl Stars trophies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawl_wins_min: {
                    readonly title: "Brawl Wins Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Brawl Stars wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawl_wins_max: {
                    readonly title: "Brawl Wins Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Brawl Stars wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawl_pass: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has Brawl Pass.";
                };
                readonly "brawler[]": {
                    readonly title: "Brawler";
                    readonly type: "array";
                    readonly description: "List of brawlers.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["8-BIT", "ALLI", "AMBER", "ANGELO", "ASH", "BARLEY", "BEA", "BELLE", "BERRY", "BIBI", "BO", "BONNIE", "BROCK", "BULL", "BUSTER", "BUZZ", "BUZZ LIGHTYEAR", "BYRON", "CARL", "CHARLIE", "CHESTER", "CHUCK", "CLANCY", "COLETTE", "COLT", "CORDELIUS", "CROW", "DARRYL", "DOUG", "DRACO", "DYNAMIKE", "EDGAR", "EL PRIMO", "EMZ", "EVE", "FANG", "FINX", "FRANK", "GALE", "GENE", "GRAY", "GRIFF", "GROM", "GUS", "HANK", "JACKY", "JAE-YONG", "JANET", "JESSIE", "JUJU", "KAZE", "KENJI", "KIT", "LARRY & LAWRIE", "LEON", "LILY", "LOLA", "LOU", "LUMI", "MAISIE", "MANDY", "MAX", "MEEPLE", "MEG", "MELODIE", "MICO", "MOE", "MORTIS", "MR. P", "NANI", "NITA", "OLLIE", "OTIS", "PAM", "PEARL", "PENNY", "PIPER", "POCO", "R-T", "RICO", "ROSA", "RUFFS", "SAM", "SANDY", "SHADE", "SHELLY", "SPIKE", "SPROUT", "SQUEAK", "STU", "SURGE", "TARA", "TICK", "TRUNK", "WILLOW"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawlers_min: {
                    readonly title: "Brawlers Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of brawlers.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly brawlers_max: {
                    readonly title: "Brawlers Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of brawlers.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly legendary_brawlers_min: {
                    readonly title: "Legendary Brawlers Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of legendary brawlers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly legendary_brawlers_max: {
                    readonly title: "Legendary Brawlers Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of legendary brawlers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly royale_level_min: {
                    readonly title: "Royale Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum Clash Royale level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly royale_level_max: {
                    readonly title: "Royale Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum Clash Royale level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly royale_cup_min: {
                    readonly title: "Royale Cup Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Clash Royale trophies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly royale_cup_max: {
                    readonly title: "Royale Cup Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Clash Royale trophies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly royale_wins_min: {
                    readonly title: "Royale Wins Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Clash Royale wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly royale_wins_max: {
                    readonly title: "Royale Wins Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Clash Royale wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly king_level_min: {
                    readonly title: "King Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum King level in Clash Royale.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly king_level_max: {
                    readonly title: "King Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum King level in Clash Royale.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly royale_pass: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has Royale Pass.";
                };
                readonly clash_level_min: {
                    readonly title: "Clash Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum Clash of Clans level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clash_level_max: {
                    readonly title: "Clash Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum Clash of Clans level.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clash_cup_min: {
                    readonly title: "Clash Cup Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Clash of Clans trophies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clash_cup_max: {
                    readonly title: "Clash Cup Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Clash of Clans trophies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clash_wins_min: {
                    readonly title: "Clash Wins Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of Clash of Clans wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clash_wins_max: {
                    readonly title: "Clash Wins Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of Clash of Clans wins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clash_pass: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Has Battle Pass.";
                };
                readonly total_heroes_level_min: {
                    readonly title: "Total Heroes Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum total heroes level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_heroes_level_max: {
                    readonly title: "Total Heroes Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum total heroes level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_troops_level_min: {
                    readonly title: "Total Troops Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum total troops level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_troops_level_max: {
                    readonly title: "Total Troops Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum total troops level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_spells_level_min: {
                    readonly title: "Total Spells Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum total spells level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_spells_level_max: {
                    readonly title: "Total Spells Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum total spells level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_builder_heroes_level_min: {
                    readonly title: "Total Builder Heroes Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum total builder village heroes level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_builder_heroes_level_max: {
                    readonly title: "Total Builder Heroes Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum total builder village heroes level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_builder_troops_level_min: {
                    readonly title: "Total Builder Troops Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum total builder village troops level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_builder_troops_level_max: {
                    readonly title: "Total Builder Troops Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum total builder village troops level count in Clash of Clans.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly town_hall_level_min: {
                    readonly title: "Town Hall Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level of town hall.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly town_hall_level_max: {
                    readonly title: "Town Hall Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level of town hall.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly builder_hall_level_min: {
                    readonly title: "Builder Hall Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level of builder hall.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly builder_hall_level_max: {
                    readonly title: "Builder Hall Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level of builder hall.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly builder_hall_cup_min: {
                    readonly title: "Builder Hall Cup Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of builder hall cups.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly builder_hall_cup_max: {
                    readonly title: "Builder Hall Cup Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of builder hall cups.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly creation_year_min: {
                    readonly description: "Minimum account creation year (e.g. 2023).";
                    readonly title: "Creation Year Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly creation_year_max: {
                    readonly description: "Maximum account creation year (e.g. 2024).";
                    readonly title: "Creation Year Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly supercell_item_id: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_id: {
                                readonly title: "Supercell";
                                readonly type: "string";
                            };
                            readonly supercell_arena: {
                                readonly title: "Supercell";
                                readonly type: "string";
                            };
                            readonly supercell_brawler_count: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_last_activity: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_legendary_brawler_count: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_town_hall_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_builder_hall_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_builder_hall_cup_count: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_phone: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_laser_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_scroll_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_magic_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_laser_trophies: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_scroll_trophies: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_magic_trophies: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_laser_victories: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_scroll_victories: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_magic_victories: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_laser_battle_pass: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_scroll_battle_pass: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_magic_battle_pass: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_systems: {
                                readonly title: "Supercell";
                                readonly type: "string";
                            };
                            readonly supercell_king_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_total_heroes_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_total_troops_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_total_spells_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_total_builder_heroes_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly supercell_total_builder_troops_level: {
                                readonly title: "Supercell";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly supercellBrawlers: {
                                readonly title: "Supercell Brawlers";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "supercell_item_id", "supercell_id", "supercell_arena", "supercell_brawler_count", "supercell_last_activity", "supercell_legendary_brawler_count", "supercell_town_hall_level", "supercell_builder_hall_level", "supercell_builder_hall_cup_count", "supercell_phone", "supercell_laser_level", "supercell_scroll_level", "supercell_magic_level", "supercell_laser_trophies", "supercell_scroll_trophies", "supercell_magic_trophies", "supercell_laser_victories", "supercell_scroll_victories", "supercell_magic_victories", "supercell_laser_battle_pass", "supercell_scroll_battle_pass", "supercell_magic_battle_pass", "supercell_systems", "supercell_king_level", "supercell_total_heroes_level", "supercell_total_troops_level", "supercell_total_spells_level", "supercell_total_builder_heroes_level", "supercell_total_builder_troops_level", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "supercellBrawlers", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryTelegram: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "dummy", "self_registration"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "dummy", "self_registration"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly spam: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Spam";
                    readonly description: "Has a spam ban.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly password: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Password";
                    readonly description: "Has a cloud password.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium: {
                    readonly title: "Premium";
                    readonly description: "Has a premium subscription.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium_expiration: {
                    readonly title: "Premium Expiration";
                    readonly type: "integer";
                    readonly description: "When premium subscription will be active";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium_expiration_period: {
                    readonly title: "Premium Expiration";
                    readonly type: "string";
                    readonly description: "In what notation is time measured";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_channels: {
                    readonly title: "Min Channels";
                    readonly type: "integer";
                    readonly description: "Minimum number of channels.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_channels: {
                    readonly title: "Max Channels";
                    readonly type: "integer";
                    readonly description: "Maximum number of channels.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_chats: {
                    readonly title: "Min Chats";
                    readonly type: "integer";
                    readonly description: "Minimum number of chats.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_chats: {
                    readonly title: "Max Chats";
                    readonly type: "integer";
                    readonly description: "Maximum number of chats.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_conversations: {
                    readonly title: "Min Conversations";
                    readonly type: "integer";
                    readonly description: "Minimum number of conversations.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_conversations: {
                    readonly title: "Max Conversations";
                    readonly type: "integer";
                    readonly description: "Maximum number of conversations.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_admin: {
                    readonly title: "Min Admin";
                    readonly type: "integer";
                    readonly description: "Minimum number of channels, where account is administrator/owner.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_admin: {
                    readonly title: "Max Admin";
                    readonly type: "integer";
                    readonly description: "Maximum number of channels, where account is administrator/owner.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_admin_sub: {
                    readonly title: "Min Admin Sub";
                    readonly type: "integer";
                    readonly description: "Minimum number of subscribers in channel, where account is administrator/owner.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_admin_sub: {
                    readonly title: "Max Admin Sub";
                    readonly type: "integer";
                    readonly description: "Maximum number of subscribers in channel, where account is administrator/owner.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly dig_min: {
                    readonly title: "Dig Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of digits in ID.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly dig_max: {
                    readonly title: "Dig Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of digits in ID.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_contacts: {
                    readonly title: "Minimum number of contacts";
                    readonly type: "integer";
                    readonly description: "Minimum number of contacts.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_contacts: {
                    readonly title: "Maximum number of contacts";
                    readonly type: "integer";
                    readonly description: "Maximum number of contacts.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_stars: {
                    readonly title: "Min Stars";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Minimum number of Telegram Stars.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_stars: {
                    readonly title: "Max Stars";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Maximum number of Telegram Stars.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly birthday: {
                    readonly title: "Birthday";
                    readonly type: "integer";
                    readonly description: "Birthday was X time before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly birthday_period: {
                    readonly title: "Birthday Period";
                    readonly type: "string";
                    readonly description: "In what notation is time measured.";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly birthday_after: {
                    readonly title: "Birthday After";
                    readonly type: "integer";
                    readonly description: "Birthday was X time after.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly birthday_after_period: {
                    readonly title: "Birthday After Period";
                    readonly type: "string";
                    readonly description: "In what notation is time measured.";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_id: {
                    readonly title: "Min Id";
                    readonly type: "integer";
                    readonly description: "Minimum ID of account, will be rounded down till nearest 10k. Available if your balance is higher than 100000 RUB.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_id: {
                    readonly title: "Max Id";
                    readonly type: "integer";
                    readonly description: "Maximum ID of account, will be rounded down till nearest 10k. Available if your balance is higher than 100000 RUB.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly allow_geo_spamblock: {
                    readonly description: "Allow geo spam block in search with spam=no.";
                    readonly title: "Allow Geo Spamblock";
                    readonly type: "boolean";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_gifts: {
                    readonly description: "Minimum number of Telegram gifts on account.";
                    readonly title: "Min Gifts";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_gifts: {
                    readonly description: "Maximum number of Telegram gifts on account.";
                    readonly title: "Max Gifts";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_nft_gifts: {
                    readonly description: "Minimum number of Telegram NFT gifts on account.";
                    readonly title: "Min Nft Gifts";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_nft_gifts: {
                    readonly description: "Maximum number of Telegram NFT gifts on account.";
                    readonly title: "Max Nft Gifts";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_gifts_stars: {
                    readonly description: "Minimum value of all Stars gifts.";
                    readonly title: "Min Gifts Stars";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_gifts_stars: {
                    readonly description: "Maximum value of all Stars gifts.";
                    readonly title: "Max Gifts Stars";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly min_gifts_convert_stars: {
                    readonly description: "Minimum value of all Stars gifts after convert.";
                    readonly title: "Min Gifts Convert Stars";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_gifts_convert_stars: {
                    readonly description: "Maximum value of all Stars gifts after convert.";
                    readonly title: "Max Gifts Convert Stars";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "dc_id[]": {
                    readonly description: "List of allowed DC ID.";
                    readonly title: "Dc Id";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_dc_id[]": {
                    readonly description: "List of disallowed DC ID.";
                    readonly title: "Not Dc Id";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly telegram_item_id: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_country: {
                                readonly title: "Telegram";
                                readonly type: "string";
                            };
                            readonly telegram_last_seen: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_premium: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_stars_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_birthday: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_password: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_premium_expires: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_spam_block: {
                                readonly title: "Telegram";
                            };
                            readonly telegram_channels_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_chats_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_admin_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_admin_subs_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_conversations_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_id_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly telegram_contacts_count: {
                                readonly title: "Telegram";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly telegram_group_counters: {
                                readonly title: "Telegram";
                                readonly type: "object";
                                readonly properties: {
                                    readonly chats: {
                                        readonly title: "Chats";
                                        readonly type: "integer";
                                    };
                                    readonly channels: {
                                        readonly title: "Channels";
                                        readonly type: "integer";
                                    };
                                    readonly conversations: {
                                        readonly title: "Conversations";
                                        readonly type: "integer";
                                    };
                                    readonly admin: {
                                        readonly title: "Admin";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["chats", "channels", "conversations", "admin"];
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "telegram_item_id", "telegram_country", "telegram_last_seen", "telegram_premium", "telegram_stars_count", "telegram_birthday", "telegram_password", "telegram_premium_expires", "telegram_spam_block", "telegram_channels_count", "telegram_chats_count", "telegram_admin_count", "telegram_admin_subs_count", "telegram_conversations_count", "telegram_id_count", "telegram_contacts_count", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "telegram_group_counters", "canViewAccountLink", "accountLinks", "canChangePassword", "itemOriginPhrase", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryTikTok: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly followers_min: {
                    readonly title: "Followers Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of followers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly followers_max: {
                    readonly title: "Followers Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of followers.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly post_min: {
                    readonly title: "Post Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of posts.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly post_max: {
                    readonly title: "Post Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of posts.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly like_min: {
                    readonly title: "Like Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of likes.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly like_max: {
                    readonly title: "Like Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of likes.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly coins_min: {
                    readonly description: "Minimum number of coins.";
                    readonly title: "Coins Min";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly coins_max: {
                    readonly description: "Maximum number of coins.";
                    readonly title: "Coins Max";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly cookie_login: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Cookie Login";
                    readonly description: "Login by cookies.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly verified: {
                    readonly title: "Verified";
                    readonly description: "Has verified.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email: {
                    readonly title: "Email";
                    readonly type: "string";
                    readonly description: "Has linked email.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly tt_item_id: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_id: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_permalink: {
                                readonly title: "Tt";
                                readonly type: "string";
                            };
                            readonly tt_uniqueId: {
                                readonly title: "Tt Id";
                                readonly type: "string";
                            };
                            readonly tt_verified: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_createTime: {
                                readonly title: "Tt Time";
                                readonly type: "integer";
                            };
                            readonly tt_privateAccount: {
                                readonly title: "Tt Account";
                                readonly type: "integer";
                            };
                            readonly tt_followers: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_following: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_likes: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_videos: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_screen_name: {
                                readonly title: "Tt";
                                readonly type: "string";
                            };
                            readonly tt_hasEmail: {
                                readonly title: "Tt Email";
                                readonly type: "integer";
                            };
                            readonly tt_hasMobile: {
                                readonly title: "Tt Mobile";
                                readonly type: "integer";
                            };
                            readonly tt_top_country: {
                                readonly title: "Tt";
                                readonly type: "string";
                            };
                            readonly tt_countries: {
                                readonly title: "Tt";
                                readonly type: "string";
                            };
                            readonly tt_coins: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly tt_hasLivePermission: {
                                readonly title: "Tt Live Permission";
                                readonly type: "integer";
                            };
                            readonly tt_cookie_login: {
                                readonly title: "Tt";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "tt_item_id", "tt_id", "tt_permalink", "tt_uniqueId", "tt_verified", "tt_createTime", "tt_privateAccount", "tt_followers", "tt_following", "tt_likes", "tt_videos", "tt_screen_name", "tt_hasEmail", "tt_hasMobile", "tt_top_country", "tt_countries", "tt_coins", "tt_hasLivePermission", "tt_cookie_login", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "canViewAccountLink", "accountLinks", "accountLink", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryUplay: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "game[]": {
                    readonly title: "Game";
                    readonly type: "array";
                    readonly description: "List of games.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "country[]": {
                    readonly title: "Country";
                    readonly type: "array";
                    readonly description: "List of allowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_country[]": {
                    readonly title: "Not Country";
                    readonly type: "array";
                    readonly description: "List of disallowed countries.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmin: {
                    readonly title: "Gmin";
                    readonly type: "integer";
                    readonly description: "Minimum count of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gmax: {
                    readonly title: "Gmax";
                    readonly type: "integer";
                    readonly description: "Maximum count of games.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription: {
                    readonly title: "Subscription";
                    readonly type: "string";
                    readonly description: "Name of subscription.";
                    readonly enum: readonly ["basic", "premium", "premiumAnywhere"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_length: {
                    readonly title: "Subscription Length";
                    readonly type: "integer";
                    readonly description: "Length of subscription.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_period: {
                    readonly title: "Subscription Period";
                    readonly description: "In what notation is time measured.";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_level_min: {
                    readonly title: "R6 Level Min";
                    readonly type: "integer";
                    readonly description: "Minimum level in Tom Clancy's Rainbow Six Siege.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_level_max: {
                    readonly title: "R6 Level Max";
                    readonly type: "integer";
                    readonly description: "Maximum level in Tom Clancy's Rainbow Six Siege.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_rank_min: {
                    readonly title: "R6 Rank Min";
                    readonly type: "integer";
                    readonly description: "Minimum rank points in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_rank_max: {
                    readonly title: "R6 Rank Max";
                    readonly type: "integer";
                    readonly description: "Maximum rank points in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_operators_min: {
                    readonly title: "R6 Operators Min";
                    readonly type: "integer";
                    readonly description: "Minimum count of operators in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_operators_max: {
                    readonly title: "R6 Operators Max";
                    readonly type: "integer";
                    readonly description: "Maximum count of operators in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_ban: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Is account banned in Tom Clancy's Rainbow Six Siege";
                };
                readonly r6_smin: {
                    readonly title: "R6 Smin";
                    readonly type: "integer";
                    readonly description: "Minimum number of skins in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly r6_smax: {
                    readonly title: "R6 Smax";
                    readonly type: "integer";
                    readonly description: "Maximum number of skins in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "r6_skin[]": {
                    readonly title: "R6 Skin";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of weapon skins in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "r6_operator[]": {
                    readonly title: "R6 Operator";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly description: "List of operators in Tom Clancy's Rainbow Six Siege.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly xbox_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Xbox connected to account.";
                };
                readonly psn_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "PSN connected to account.";
                };
                readonly steam_connected: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Steam connected to account.";
                };
                readonly balance_min: {
                    readonly description: "Minimum balance.";
                    readonly title: "Balance Min";
                    readonly type: "number";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly balance_max: {
                    readonly description: "Maximum balance.";
                    readonly title: "Balance Max";
                    readonly type: "number";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly transactions: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly description: "Has transactions.";
                    readonly title: "Transactions";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg: {
                    readonly title: "Reg";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "How old is the account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly reg_period: {
                    readonly title: "Reg Period";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly description: "In what notation is time measured.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly uplay_item_id: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_last_activity: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_country: {
                                readonly title: "Uplay";
                                readonly type: "string";
                            };
                            readonly uplay_created_date: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_games: {
                                readonly title: "Uplay";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "ffffffff-ffff-ffff-ffff-ffffffffffff": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly img: {
                                                readonly title: "Img";
                                                readonly type: "string";
                                            };
                                            readonly pvpTimePlayed: {
                                                readonly title: "Pvp Time Played";
                                                readonly type: "integer";
                                            };
                                            readonly pveTimePlayed: {
                                                readonly title: "Pve Time Played";
                                                readonly type: "integer";
                                            };
                                            readonly abbr: {
                                                readonly title: "Abbr";
                                                readonly type: "string";
                                            };
                                            readonly gameId: {
                                                readonly title: "Game Id";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["title", "img", "pvpTimePlayed", "pveTimePlayed", "abbr", "gameId"];
                                    };
                                };
                                readonly required: readonly ["ffffffff-ffff-ffff-ffff-ffffffffffff"];
                            };
                            readonly uplay_game_count: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_r6_level: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_r6_ban: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_r6_operators: {
                                readonly title: "Uplay";
                                readonly type: "string";
                            };
                            readonly uplay_r6_operators_count: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_r6_skins: {
                                readonly title: "Uplay";
                                readonly type: "string";
                            };
                            readonly uplay_r6_skins_count: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_subscription: {
                                readonly title: "Uplay";
                                readonly type: "string";
                            };
                            readonly uplay_subscription_end_date: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_xbox_connected: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_psn_connected: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_steam_connected: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly uplay_r6_rank: {
                                readonly title: "Uplay";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly uplayLinkedAccounts: {
                                readonly title: "Uplay Linked Accounts";
                                readonly type: "string";
                            };
                            readonly uplayR6Rank: {
                                readonly title: "Uplay Rank";
                                readonly type: "string";
                            };
                            readonly uplay_r6_steam_warning: {
                                readonly title: "Uplay";
                                readonly type: "boolean";
                            };
                            readonly uplay_r6_external_warning: {
                                readonly title: "Uplay";
                                readonly type: "boolean";
                            };
                            readonly uplay_r6: {
                                readonly title: "Uplay";
                                readonly type: "boolean";
                            };
                            readonly uplay_r6_ban_active: {
                                readonly title: "Uplay";
                                readonly type: "boolean";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly r6Skins: {
                                readonly title: "Skins";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly r6Operators: {
                                readonly title: "Operators";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly img: {
                                            readonly title: "Img";
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly title: "Name";
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly title: "Url";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["img", "name", "url"];
                                };
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly emailLoginUrl: {
                                readonly title: "Email Login Url";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "uplay_item_id", "uplay_last_activity", "uplay_country", "uplay_created_date", "uplay_games", "uplay_game_count", "uplay_r6_level", "uplay_r6_ban", "uplay_r6_operators", "uplay_r6_operators_count", "uplay_r6_skins", "uplay_r6_skins_count", "uplay_subscription", "uplay_subscription_end_date", "uplay_xbox_connected", "uplay_psn_connected", "uplay_steam_connected", "uplay_r6_rank", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "uplayLinkedAccounts", "uplayR6Rank", "uplay_r6_steam_warning", "uplay_r6_external_warning", "uplay_r6", "uplay_r6_ban_active", "isSmallExf", "account_last_activity", "r6Skins", "r6Operators", "canViewAccountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryVpn: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "service[]": {
                    readonly title: "Service";
                    readonly type: "array";
                    readonly description: "List of allowed VPN services.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["AdguardVPN", "PIAVPN", "cyberghostVPN", "hotspotShieldVPN", "mullvadVPN", "planetVPN", "pureVPN", "tunnelbearVPN", "ultraVPN", "vanishVPN", "vyprVPN", "windscribeVPN"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_length: {
                    readonly title: "Subscription Length";
                    readonly type: "integer";
                    readonly description: "Length of subscription.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly subscription_period: {
                    readonly title: "Subscription Period";
                    readonly description: "In what notation is time measured.";
                    readonly type: "string";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly autorenewal: {
                    readonly description: "Is auto renewal enabled.";
                    readonly title: "Autorenewal";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly vpn_item_id: {
                                readonly title: "Vpn";
                                readonly type: "integer";
                            };
                            readonly vpn_service: {
                                readonly title: "Vpn";
                                readonly type: "string";
                            };
                            readonly vpn_expire_date: {
                                readonly title: "Vpn";
                                readonly type: "integer";
                            };
                            readonly vpn_renewable: {
                                readonly title: "Vpn";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly vpnProductTitle: {
                                readonly title: "Vpn Product Title";
                                readonly type: "string";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "vpn_item_id", "vpn_service", "vpn_expire_date", "vpn_renewable", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "vpnProductTitle", "canViewAccountLink", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryWarThunder: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gold_min: {
                    readonly title: "Gold Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of gold.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gold_max: {
                    readonly title: "Gold Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of gold.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly silver_min: {
                    readonly title: "Silver Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of silver.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly silver_max: {
                    readonly title: "Silver Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of silver.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rank_min: {
                    readonly title: "Rank Min";
                    readonly type: "integer";
                    readonly description: "Minimum rank.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rank_max: {
                    readonly title: "Rank Max";
                    readonly type: "integer";
                    readonly description: "Maximum rank.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly elite_units_min: {
                    readonly title: "Elite Units Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of elite units.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly elite_units_max: {
                    readonly title: "Elite Units Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of elite units.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly played_min: {
                    readonly title: "Played Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of played games.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly played_max: {
                    readonly title: "Played Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of played games.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly wins_min: {
                    readonly title: "Wins Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of wins.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly wins_max: {
                    readonly title: "Wins Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of wins.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email_verified: {
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly title: "Email Verified";
                    readonly description: "Has verified email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium: {
                    readonly title: "Premium";
                    readonly description: "Has a premium subscription.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "unit[]": {
                    readonly description: "List of units.";
                    readonly title: "Unit";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "launcher[]": {
                    readonly description: "Launcher.";
                    readonly title: "Launcher";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["gaijin", "pixelstorm"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_launcher[]": {
                    readonly description: "Exclude launcher.";
                    readonly title: "Not Launcher";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["gaijin", "pixelstorm"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly wt_item_id: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_id: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_nick: {
                                readonly title: "Wt";
                                readonly type: "string";
                            };
                            readonly wt_reg_time_gaijin: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_reg_time_wt: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_last_play: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_email_verified: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_phone_verified: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_played: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_wins: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_exp: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_rank: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_eliteUnits: {
                                readonly title: "Wt Units";
                                readonly type: "integer";
                            };
                            readonly wt_premium: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_gold: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_silver: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly wt_win_count_percents: {
                                readonly title: "Wt";
                                readonly type: "integer";
                            };
                            readonly wt_rank_info: {
                                readonly title: "Wt";
                                readonly type: "object";
                                readonly properties: {
                                    readonly title: {
                                        readonly title: "Title";
                                        readonly type: "string";
                                    };
                                    readonly img: {
                                        readonly title: "Img";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["title", "img"];
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly link: {
                                            readonly title: "Link";
                                            readonly type: "string";
                                        };
                                        readonly text: {
                                            readonly title: "Text";
                                            readonly type: "string";
                                        };
                                        readonly iconClass: {
                                            readonly title: "Icon Class";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["link", "text", "iconClass"];
                                };
                            };
                            readonly accountLink: {
                                readonly title: "Account Link";
                                readonly type: "string";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "wt_item_id", "wt_id", "wt_nick", "wt_reg_time_gaijin", "wt_reg_time_wt", "wt_last_play", "wt_email_verified", "wt_phone_verified", "wt_played", "wt_wins", "wt_exp", "wt_rank", "wt_eliteUnits", "wt_premium", "wt_gold", "wt_silver", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "wt_win_count_percents", "wt_rank_info", "canViewAccountLink", "accountLinks", "accountLink", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryWarface: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rank_min: {
                    readonly title: "Rank Min";
                    readonly type: "integer";
                    readonly description: "Minimum rank.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly rank_max: {
                    readonly title: "Rank Max";
                    readonly type: "integer";
                    readonly description: "Maximum rank.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly bonus_rank_min: {
                    readonly title: "Bonus Rank Min";
                    readonly type: "integer";
                    readonly description: "Minimum bonus rank.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly bonus_rank_max: {
                    readonly title: "Bonus Rank Max";
                    readonly type: "integer";
                    readonly description: "Maximum bonus rank.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly kredits_min: {
                    readonly description: "Minimum amount of Kredits.";
                    readonly title: "Kredits Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly kredits_max: {
                    readonly description: "Maximum amount of Kredits.";
                    readonly title: "Kredits Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_kredits_min: {
                    readonly description: "Minimum total donated Kredits.";
                    readonly title: "Total Kredits Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly total_kredits_max: {
                    readonly description: "Maximum total donated Kredits.";
                    readonly title: "Total Kredits Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly wf_item_id: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_players: {
                                readonly title: "Wf";
                                readonly type: "boolean";
                            };
                            readonly wf_server_1: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_server_2: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_server_3: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_mobile: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_bonus_rank: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_mail_mobile: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_last_game_date: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_loan: {
                                readonly title: "Wf";
                                readonly type: "boolean";
                            };
                            readonly wf_active_loan: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly wf_rank: {
                                readonly title: "Wf";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly wf_servers: {
                                readonly title: "Wf";
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly title: "Id";
                                            readonly type: "integer";
                                        };
                                        readonly rank: {
                                            readonly title: "Rank";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["id", "rank", "title"];
                                };
                            };
                            readonly domain: {
                                readonly title: "Domain";
                                readonly type: "string";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "wf_item_id", "wf_players", "wf_server_1", "wf_server_2", "wf_server_3", "wf_mobile", "wf_bonus_rank", "wf_mail_mobile", "wf_last_game_date", "wf_loan", "wf_active_loan", "wf_rank", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "wf_servers", "domain", "canViewAccountLink", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryWot: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly battles_min: {
                    readonly title: "Battles Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of battles.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly battles_max: {
                    readonly title: "Battles Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of battles.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gold_min: {
                    readonly title: "Gold Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of gold.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gold_max: {
                    readonly title: "Gold Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of gold.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly silver_min: {
                    readonly title: "Silver Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of silver.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly silver_max: {
                    readonly title: "Silver Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of silver.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_min: {
                    readonly title: "Top Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of top tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_max: {
                    readonly title: "Top Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of top tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly prem_min: {
                    readonly title: "Prem Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly prem_max: {
                    readonly title: "Prem Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_prem_min: {
                    readonly title: "Top Prem Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of top premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_prem_max: {
                    readonly title: "Top Prem Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of top premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_pmin: {
                    readonly title: "Win Pmin";
                    readonly type: "integer";
                    readonly description: "Minimum number of wins.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_pmax: {
                    readonly title: "Win Pmax";
                    readonly type: "integer";
                    readonly description: "Maximum number of wins.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tank[]": {
                    readonly title: "Tank";
                    readonly type: "array";
                    readonly description: "List of tanks.";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "region[]": {
                    readonly title: "Region";
                    readonly type: "array";
                    readonly description: "Region.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["asia", "eu", "na", "ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_region[]": {
                    readonly title: "Not Region";
                    readonly type: "array";
                    readonly description: "Exclude region.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["asia", "eu", "na", "ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium: {
                    readonly title: "Premium";
                    readonly description: "Has a premium subscription.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium_expiration: {
                    readonly title: "Premium Expiration";
                    readonly type: "integer";
                    readonly description: "When premium subscription will be active";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium_expiration_period: {
                    readonly title: "Premium Expiration";
                    readonly type: "string";
                    readonly description: "In what notation is time measured";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan: {
                    readonly description: "Has clan.";
                    readonly title: "Clan";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "clan_role[]": {
                    readonly description: "List of allowed clan role.";
                    readonly title: "Clan Role";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["commander", "executive_officer", "personnel_officer", "combat_officer", "intelligence_officer", "quartermaster", "recruitment_officer", "junior_officer", "private", "recruit", "reservist"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_clan_role[]": {
                    readonly description: "List of disallowed clan role.";
                    readonly title: "Not Clan Role";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["commander", "executive_officer", "personnel_officer", "combat_officer", "intelligence_officer", "quartermaster", "recruitment_officer", "junior_officer", "private", "recruit", "reservist"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_gold_min: {
                    readonly description: "Minimum number of gold in clan treasure.";
                    readonly title: "Clan Gold Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_gold_max: {
                    readonly description: "Maximum number of gold in clan treasure.";
                    readonly title: "Clan Gold Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_credits_min: {
                    readonly description: "Minimum number of credits in clan treasure.";
                    readonly title: "Clan Credits Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_credits_max: {
                    readonly description: "Maximum number of credits in clan treasure.";
                    readonly title: "Clan Credits Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_crystal_min: {
                    readonly description: "Minimum number of crystal in clan treasure.";
                    readonly title: "Clan Crystal Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_crystal_max: {
                    readonly description: "Maximum number of crystal in clan treasure.";
                    readonly title: "Clan Crystal Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly wot_item_id: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_last_activity: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_register_date: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_mobile: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_premium: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_premium_expires: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_gold: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_credits: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_battle_count: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_win_count: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_loss_count: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_win_count_percents: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_top_tanks: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_premium_tanks: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_top_premium_tanks: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_region: {
                                readonly title: "Wot";
                                readonly type: "string";
                            };
                            readonly wot_blitz: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly wotRegionPhrase: {
                                readonly title: "Wot Region Phrase";
                                readonly type: "string";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly wotTopPremiumTanks: {
                                readonly title: "Wot Top Premium Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "00000": {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is Premium";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                                readonly required: readonly ["00000"];
                            };
                            readonly wotTanks: {
                                readonly title: "Wot Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "00000": {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is Premium";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                                readonly required: readonly ["00000"];
                            };
                            readonly wotPremiumTanks: {
                                readonly title: "Wot Premium Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "30465": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "43841": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "46097": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "47873": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "50977": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "51233": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "51585": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "55569": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "57377": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "60945": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "62497": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                    readonly "7937025": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "short_name", "tier"];
                                    };
                                };
                                readonly required: readonly ["30465", "60945", "51233", "57377", "62497", "55569", "7937025", "50977", "51585", "46097", "47873", "43841"];
                            };
                            readonly wotTopTanks: {
                                readonly title: "Wot Top Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "00000": {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is Premium";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                        };
                                    };
                                };
                                readonly required: readonly ["00000"];
                            };
                            readonly wotPremiumTankCount: {
                                readonly title: "Wot Premium Tank Count";
                                readonly type: "integer";
                            };
                            readonly wotTankCount: {
                                readonly title: "Wot Tank Count";
                                readonly type: "integer";
                            };
                            readonly wotLauncherTitle: {
                                readonly title: "Wot Launcher Title";
                                readonly type: "string";
                            };
                            readonly wot_has_clan: {
                                readonly title: "Wot";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "wot_item_id", "wot_last_activity", "wot_register_date", "wot_mobile", "wot_premium", "wot_premium_expires", "wot_gold", "wot_credits", "wot_battle_count", "wot_win_count", "wot_loss_count", "wot_win_count_percents", "wot_top_tanks", "wot_premium_tanks", "wot_top_premium_tanks", "wot_region", "wot_blitz", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "wotRegionPhrase", "isSmallExf", "account_last_activity", "wotTopPremiumTanks", "wotTanks", "wotPremiumTanks", "wotTopTanks", "wotPremiumTankCount", "wotTankCount", "wotLauncherTitle", "wot_has_clan", "canViewAccountLink", "accountLinks", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const CategoryWotBlitz: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tag_id[]": {
                    readonly title: "List of tag ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids (Tag list is available via **GET /me**).";
                };
                readonly "not_tag_id[]": {
                    readonly title: "Not Tag Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "List of tag ids that won't be included (Tag list is available via **GET /me**).";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Search accounts of user.";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the cost of the account will be searched.";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Has email login data.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly "not_email_provider[]": {
                    readonly title: "Email Provider";
                    readonly type: "string";
                    readonly uniqueItems: true;
                    readonly enum: readonly ["other", "rambler", "outlook", "firstmail", "notletters", "mail_ru"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Email provider.";
                };
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "email_type[]": {
                    readonly title: "Email Type";
                    readonly description: "Email type.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autoreg", "native", "no"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly item_domain: {
                    readonly title: "Item Domain";
                    readonly type: "string";
                    readonly description: "Domain of native/autoreg email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly tel: {
                    readonly title: "Tel";
                    readonly type: "string";
                    readonly description: "Has linked mobile.";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly daybreak: {
                    readonly title: "Day Break";
                    readonly type: "integer";
                    readonly minimum: 0;
                    readonly description: "Number of days the account has been offline.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly battles_min: {
                    readonly title: "Battles Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of battles.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly battles_max: {
                    readonly title: "Battles Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of battles.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gold_min: {
                    readonly title: "Gold Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of gold.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly gold_max: {
                    readonly title: "Gold Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of gold.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly silver_min: {
                    readonly title: "Silver Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of silver.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly silver_max: {
                    readonly title: "Silver Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of silver.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_min: {
                    readonly title: "Top Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of top tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_max: {
                    readonly title: "Top Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of top tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly prem_min: {
                    readonly title: "Prem Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly prem_max: {
                    readonly title: "Prem Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_prem_min: {
                    readonly title: "Top Prem Min";
                    readonly type: "integer";
                    readonly description: "Minimum number of top premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly top_prem_max: {
                    readonly title: "Top Prem Max";
                    readonly type: "integer";
                    readonly description: "Maximum number of top premium tanks.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_pmin: {
                    readonly title: "Win Pmin";
                    readonly type: "integer";
                    readonly description: "Minimum number of wins.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly win_pmax: {
                    readonly title: "Win Pmax";
                    readonly type: "integer";
                    readonly description: "Maximum number of wins.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "tank[]": {
                    readonly title: "Tank";
                    readonly type: "array";
                    readonly description: "List of tanks.";
                    readonly items: {
                        readonly type: "integer";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "region[]": {
                    readonly title: "Region";
                    readonly type: "array";
                    readonly description: "Region.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["asia", "eu", "na", "ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_region[]": {
                    readonly title: "Not Region";
                    readonly type: "array";
                    readonly description: "Exclude region.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["asia", "eu", "na", "ru"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium: {
                    readonly title: "Premium";
                    readonly description: "Has a premium subscription.";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium_expiration: {
                    readonly title: "Premium Expiration";
                    readonly type: "integer";
                    readonly description: "When premium subscription will be active";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly premium_expiration_period: {
                    readonly title: "Premium Expiration";
                    readonly type: "string";
                    readonly description: "In what notation is time measured";
                    readonly enum: readonly ["day", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan: {
                    readonly description: "Has clan.";
                    readonly title: "Clan";
                    readonly type: "string";
                    readonly enum: readonly ["yes", "no", "nomatter"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "clan_role[]": {
                    readonly description: "List of allowed clan role.";
                    readonly title: "Clan Role";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["commander", "executive_officer", "personnel_officer", "combat_officer", "intelligence_officer", "quartermaster", "recruitment_officer", "junior_officer", "private", "recruit", "reservist"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_clan_role[]": {
                    readonly description: "List of disallowed clan role.";
                    readonly title: "Not Clan Role";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["commander", "executive_officer", "personnel_officer", "combat_officer", "intelligence_officer", "quartermaster", "recruitment_officer", "junior_officer", "private", "recruit", "reservist"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_gold_min: {
                    readonly description: "Minimum number of gold in clan treasure.";
                    readonly title: "Clan Gold Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_gold_max: {
                    readonly description: "Maximum number of gold in clan treasure.";
                    readonly title: "Clan Gold Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_credits_min: {
                    readonly description: "Minimum number of credits in clan treasure.";
                    readonly title: "Clan Credits Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_credits_max: {
                    readonly description: "Maximum number of credits in clan treasure.";
                    readonly title: "Clan Credits Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_crystal_min: {
                    readonly description: "Minimum number of crystal in clan treasure.";
                    readonly title: "Clan Crystal Min";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly clan_crystal_max: {
                    readonly description: "Maximum number of crystal in clan treasure.";
                    readonly title: "Clan Crystal Max";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "hasNextPage", "perPage", "page", "wasCached", "cacheTTL", "lastModified", "serverTime", "searchUrl", "stickyItems", "system_info"];
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly item_id: {
                                readonly title: "Item";
                                readonly type: "integer";
                            };
                            readonly item_state: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly category_id: {
                                readonly title: "Category";
                                readonly type: "integer";
                            };
                            readonly published_date: {
                                readonly title: "Published";
                                readonly type: "integer";
                            };
                            readonly title: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly price: {
                                readonly title: "Price";
                                readonly type: "integer";
                            };
                            readonly update_stat_date: {
                                readonly title: "Update";
                                readonly type: "integer";
                            };
                            readonly refreshed_date: {
                                readonly title: "Refreshed";
                                readonly type: "integer";
                            };
                            readonly edit_date: {
                                readonly title: "Edit";
                                readonly type: "integer";
                            };
                            readonly view_count: {
                                readonly title: "View";
                                readonly type: "integer";
                            };
                            readonly is_sticky: {
                                readonly title: "Is";
                                readonly type: "integer";
                            };
                            readonly item_origin: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly extended_guarantee: {
                                readonly title: "Extended";
                                readonly type: "integer";
                            };
                            readonly nsb: {
                                readonly title: "Nsb";
                                readonly type: "integer";
                            };
                            readonly allow_ask_discount: {
                                readonly title: "Allow";
                                readonly type: "integer";
                            };
                            readonly title_en: {
                                readonly title: "Title";
                                readonly type: "string";
                            };
                            readonly description_en: {
                                readonly title: "Description";
                                readonly type: "string";
                            };
                            readonly email_type: {
                                readonly title: "Email";
                                readonly type: "string";
                            };
                            readonly email_provider: {
                                readonly title: "Email";
                            };
                            readonly item_domain: {
                                readonly title: "Item";
                                readonly type: "string";
                            };
                            readonly resale_item_origin: {
                                readonly title: "Resale";
                                readonly type: "string";
                            };
                            readonly wot_item_id: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_last_activity: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_register_date: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_mobile: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_premium: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_premium_expires: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_gold: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_credits: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_battle_count: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_win_count: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_loss_count: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_win_count_percents: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_top_tanks: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_premium_tanks: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_top_premium_tanks: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly wot_region: {
                                readonly title: "Wot";
                                readonly type: "string";
                            };
                            readonly wot_blitz: {
                                readonly title: "Wot";
                                readonly type: "integer";
                            };
                            readonly feedback_data: {
                                readonly title: "Feedback";
                                readonly type: "string";
                            };
                            readonly isIgnored: {
                                readonly title: "Is Ignored";
                                readonly type: "boolean";
                            };
                            readonly priceWithSellerFee: {
                                readonly title: "Price With Seller Fee";
                                readonly type: "integer";
                            };
                            readonly guarantee: {
                                readonly title: "Guarantee";
                            };
                            readonly canViewLoginData: {
                                readonly title: "Can View Login Data";
                                readonly type: "boolean";
                            };
                            readonly canUpdateItemStats: {
                                readonly title: "Can Update Item Stats";
                                readonly type: "boolean";
                            };
                            readonly canReportItem: {
                                readonly title: "Can Report Item";
                                readonly type: "boolean";
                            };
                            readonly canViewEmailLoginData: {
                                readonly title: "Can View Email Login Data";
                                readonly type: "boolean";
                            };
                            readonly showGetEmailCodeButton: {
                                readonly title: "Show Get Email Code Button";
                                readonly type: "boolean";
                            };
                            readonly canOpenItem: {
                                readonly title: "Can Open Item";
                                readonly type: "boolean";
                            };
                            readonly canCloseItem: {
                                readonly title: "Can Close Item";
                                readonly type: "boolean";
                            };
                            readonly canEditItem: {
                                readonly title: "Can Edit Item";
                                readonly type: "boolean";
                            };
                            readonly canDeleteItem: {
                                readonly title: "Can Delete Item";
                                readonly type: "boolean";
                            };
                            readonly canStickItem: {
                                readonly title: "Can Stick Item";
                                readonly type: "boolean";
                            };
                            readonly canUnstickItem: {
                                readonly title: "Can Unstick Item";
                                readonly type: "boolean";
                            };
                            readonly bumpSettings: {
                                readonly title: "Bump Settings";
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly title: "Can Bump Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly title: "Can Bump Item Globally";
                                        readonly type: "boolean";
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly title: "Short Error Phrase";
                                    };
                                    readonly errorPhrase: {
                                        readonly title: "Error Phrase";
                                    };
                                };
                                readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                            };
                            readonly canBumpItem: {
                                readonly title: "Can Bump Item";
                                readonly type: "boolean";
                            };
                            readonly canBuyItem: {
                                readonly title: "Can Buy Item";
                                readonly type: "boolean";
                            };
                            readonly rub_price: {
                                readonly title: "Rub";
                                readonly type: "integer";
                            };
                            readonly price_currency: {
                                readonly title: "Price";
                                readonly type: "string";
                            };
                            readonly canValidateAccount: {
                                readonly title: "Can Validate Account";
                                readonly type: "boolean";
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly title: "Can Resell Item After Purchase";
                                readonly type: "boolean";
                            };
                            readonly wotRegionPhrase: {
                                readonly title: "Wot Region Phrase";
                                readonly type: "string";
                            };
                            readonly isSmallExf: {
                                readonly title: "Is Small Exf";
                                readonly type: "boolean";
                            };
                            readonly account_last_activity: {
                                readonly title: "Account";
                                readonly type: "integer";
                            };
                            readonly wotTopPremiumTanks: {
                                readonly title: "Wot Top Premium Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "5681": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "15697": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23313": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                };
                                readonly required: readonly ["15697", "5681", "23313"];
                            };
                            readonly wotTanks: {
                                readonly title: "Wot Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "385": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "625": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "641": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "1409": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "2609": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "2625": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "2849": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "2945": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "3121": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "3649": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "3681": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "3937": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "4145": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "4369": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "4481": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "4881": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5137": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5393": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5425": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5489": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5505": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5681": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5745": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6001": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6145": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6209": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6257": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6449": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6753": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6785": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6929": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6993": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7169": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7249": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7281": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7793": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7953": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "8753": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "9073": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "9297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "9489": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10241": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10273": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10289": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10369": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10785": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10881": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "11553": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12049": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12305": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12545": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12673": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13089": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13185": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13345": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13569": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13825": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "14337": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "14609": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "14881": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "15697": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "15953": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "16193": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "16401": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "16705": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "16897": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18001": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18209": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18241": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18513": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18753": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18769": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19025": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19217": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19489": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19537": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19713": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19985": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20001": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20257": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20305": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20481": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20513": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20737": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20817": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "21025": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "21265": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "21329": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "22817": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23057": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23313": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23825": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23841": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "24321": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "24849": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "25361": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "51473": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "51729": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "53025": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "53761": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "54545": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "54785": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "55297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "55889": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "56097": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "57105": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "57361": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "58641": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "58881": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "59137": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "62737": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "64529": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "65377": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                };
                                readonly required: readonly ["12305", "6753", "18001", "6449", "15697", "4481", "13185", "14337", "3681", "6145", "5425", "3649", "7169", "7249", "7297", "19537", "5681", "6209", "58641", "16897", "10369", "22817", "9489", "385", "19217", "9297", "13825", "5505", "13089", "12049", "13569", "4145", "24321", "23313", "20257", "14609", "10289", "14881", "3937", "10785", "6929", "16401", "641", "20001", "12545", "7953", "25361", "20481", "62737", "5137", "18753", "19025", "13345", "2945", "16193", "18209", "19985", "19489", "20305", "20737", "21329", "53025", "18241", "10881", "21265", "20513", "12673", "16705", "6785", "58881", "18513", "2849", "9073", "18769", "15953", "6257", "6001", "55297", "23841", "64529", "21025", "23057", "7281", "23825", "8753", "59137", "10241", "7793", "5745", "11553", "625", "20817", "23297", "2625", "19713", "24849", "56097", "57105", "54785", "2609", "57361", "1409", "55889", "5393", "5489", "53761", "65377", "54545", "51473", "10273", "3121", "4881", "51729", "4369", "6993"];
                            };
                            readonly wotPremiumTanks: {
                                readonly title: "Wot Premium Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "625": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "2609": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "2849": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "2945": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "4881": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5489": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5681": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5745": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6001": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6257": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6785": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7281": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7793": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "8753": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "9073": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12545": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12673": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13345": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "15697": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "15953": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "16193": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "16705": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18241": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18513": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18753": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18769": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19025": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19489": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19713": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19985": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20305": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20481": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20513": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20737": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20817": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "21025": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "21265": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "21329": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23057": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23313": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23825": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23841": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "25361": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "51473": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "51729": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "53025": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "53761": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "54545": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "54785": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "55297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "55889": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "56097": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "57105": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "57361": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "58881": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "59137": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "62737": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "64529": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "65377": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                };
                                readonly required: readonly ["5681", "23313", "15697", "25361", "12545", "62737", "18769", "53025", "20737", "20481", "18753", "58881", "19025", "13345", "2945", "16193", "19985", "19489", "20305", "18241", "21329", "18513", "16705", "9073", "12673", "6785", "21265", "2849", "20513", "23057", "64529", "7793", "23841", "21025", "6001", "55297", "6257", "8753", "23825", "15953", "59137", "7281", "20817", "5745", "625", "19713", "57105", "23297", "57361", "54785", "2609", "55889", "56097", "51473", "65377", "5489", "53761", "54545", "51729", "4881"];
                            };
                            readonly wotTopTanks: {
                                readonly title: "Wot Top Tanks";
                                readonly type: "object";
                                readonly properties: {
                                    readonly "385": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "3649": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "3681": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "3937": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "4145": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "4481": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5425": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5505": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "5681": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6145": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6209": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6449": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6753": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "6929": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7169": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7249": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "7297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "9297": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "9489": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10289": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10369": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "10785": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12049": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "12305": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13089": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13185": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13569": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "13825": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "14337": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "14609": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "14881": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "15697": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "16897": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "18001": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19217": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "19537": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "20257": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "22817": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "23313": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "24321": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                    readonly "58641": {
                                        readonly title: "";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly tank_id: {
                                                readonly title: "Tank";
                                                readonly type: "integer";
                                            };
                                            readonly name: {
                                                readonly title: "Name";
                                                readonly type: "string";
                                            };
                                            readonly is_premium: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly image_url: {
                                                readonly title: "Image";
                                                readonly type: "string";
                                            };
                                            readonly tier: {
                                                readonly title: "Tier";
                                                readonly type: "integer";
                                            };
                                            readonly short_name: {
                                                readonly title: "Short";
                                                readonly type: "string";
                                            };
                                            readonly is_collectible: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["tank_id", "name", "is_premium", "image_url", "tier", "short_name", "is_collectible"];
                                    };
                                };
                                readonly required: readonly ["5505", "13089", "13569", "4145", "10289", "3937", "3649", "18001", "6449", "15697", "12305", "4481", "6145", "7249", "5681", "58641", "16897", "14337", "9489", "385", "10785", "14609", "23313", "6929", "6209", "19537", "7297", "7169", "5425", "6753", "3681", "13185", "10369", "22817", "14881", "20257", "24321", "12049", "13825", "9297", "19217"];
                            };
                            readonly wotPremiumTankCount: {
                                readonly title: "Wot Premium Tank Count";
                                readonly type: "integer";
                            };
                            readonly wotTankCount: {
                                readonly title: "Wot Tank Count";
                                readonly type: "integer";
                            };
                            readonly wotLauncherTitle: {
                                readonly title: "Wot Launcher Title";
                                readonly type: "string";
                            };
                            readonly wot_has_clan: {
                                readonly title: "Wot";
                                readonly type: "boolean";
                            };
                            readonly canViewAccountLink: {
                                readonly title: "Can View Account Link";
                                readonly type: "boolean";
                            };
                            readonly accountLinks: {
                                readonly title: "Account Links";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly canChangePassword: {
                                readonly title: "Can Change Password";
                                readonly type: "boolean";
                            };
                            readonly itemOriginPhrase: {
                                readonly title: "Item Origin Phrase";
                                readonly type: "string";
                            };
                            readonly sold_items_category_count: {
                                readonly title: "Sold";
                                readonly type: "integer";
                            };
                            readonly restore_items_category_count: {
                                readonly title: "Restore";
                                readonly type: "integer";
                            };
                            readonly tags: {
                                readonly title: "Tags";
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly note_text: {
                                readonly title: "Note";
                            };
                            readonly hasPendingAutoBuy: {
                                readonly title: "Has Pending Auto Buy";
                                readonly type: "boolean";
                            };
                            readonly descriptionHtml: {
                                readonly title: "Description Html";
                                readonly type: "string";
                            };
                            readonly descriptionEnHtml: {
                                readonly title: "Description En Html";
                                readonly type: "string";
                            };
                            readonly descriptionPlain: {
                                readonly title: "Description Plain";
                                readonly type: "string";
                            };
                            readonly descriptionEnPlain: {
                                readonly title: "Description En Plain";
                                readonly type: "string";
                            };
                            readonly seller: {
                                readonly title: "Seller";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly sold_items_count: {
                                        readonly title: "Sold";
                                        readonly type: "integer";
                                    };
                                    readonly active_items_count: {
                                        readonly title: "Active";
                                        readonly type: "integer";
                                    };
                                    readonly restore_data: {
                                        readonly title: "Restore";
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly title: "Avatar";
                                        readonly type: "integer";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly display_style_group_id: {
                                        readonly title: "Display";
                                        readonly type: "integer";
                                    };
                                    readonly restore_percents: {
                                        readonly title: "Restore";
                                        readonly type: "integer";
                                    };
                                };
                                readonly required: readonly ["user_id", "sold_items_count", "active_items_count", "restore_data", "username", "avatar_date", "is_banned", "display_style_group_id", "restore_percents"];
                            };
                        };
                        readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "wot_item_id", "wot_last_activity", "wot_register_date", "wot_mobile", "wot_premium", "wot_premium_expires", "wot_gold", "wot_credits", "wot_battle_count", "wot_win_count", "wot_loss_count", "wot_win_count_percents", "wot_top_tanks", "wot_premium_tanks", "wot_top_premium_tanks", "wot_region", "wot_blitz", "feedback_data", "isIgnored", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "canOpenItem", "canCloseItem", "canEditItem", "canDeleteItem", "canStickItem", "canUnstickItem", "bumpSettings", "canBumpItem", "canBuyItem", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "wotRegionPhrase", "isSmallExf", "account_last_activity", "wotTopPremiumTanks", "wotTanks", "wotPremiumTanks", "wotTopTanks", "wotPremiumTankCount", "wotTankCount", "wotLauncherTitle", "wot_has_clan", "canViewAccountLink", "accountLinks", "canChangePassword", "itemOriginPhrase", "sold_items_category_count", "restore_items_category_count", "tags", "note_text", "hasPendingAutoBuy", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                    };
                };
                readonly totalItems: {
                    readonly title: "Total Items";
                    readonly type: "integer";
                };
                readonly totalItemsPrice: {
                    readonly title: "Total Items Price";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly wasCached: {
                    readonly title: "Was Cached";
                    readonly type: "boolean";
                };
                readonly cacheTTL: {
                    readonly title: "Cache Ttl";
                    readonly type: "integer";
                };
                readonly lastModified: {
                    readonly title: "Last Modified";
                    readonly type: "integer";
                };
                readonly serverTime: {
                    readonly title: "Server Time";
                    readonly type: "integer";
                };
                readonly searchUrl: {
                    readonly title: "Search Url";
                    readonly type: "string";
                };
                readonly stickyItems: {
                    readonly title: "Sticky Items";
                    readonly type: "array";
                    readonly items: {};
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ListFavorites: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly show: {
                    readonly title: "Show";
                    readonly type: "string";
                    readonly enum: readonly ["active", "paid", "deleted", "awaiting", "closed", "discount_request", "stickied", "pre_active"];
                    readonly description: "Account status.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Item List Model";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "perPage", "page", "cacheTTL", "lastModified", "searchUrl", "stickyItems", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly item_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_state: {
                                readonly type: "string";
                                readonly default: "active";
                            };
                            readonly category_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly published_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly default: "Title";
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly default: "Description";
                            };
                            readonly price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly update_stat_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly refreshed_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly view_count: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly is_sticky: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly extended_guarantee: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly nsb: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly allow_ask_discount: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title_en: {
                                readonly type: "string";
                                readonly default: "Title EN";
                            };
                            readonly description_en: {
                                readonly type: "string";
                                readonly default: "Description EN";
                            };
                            readonly item_domain: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly resale_item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly isIgnored: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly guarantee: {
                                readonly type: "boolean";
                                readonly default: any;
                            };
                            readonly canViewLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUpdateItemStats: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewEmailLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly showGetEmailCodeButton: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canOpenItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canCloseItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canEditItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canDeleteItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canStickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUnstickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly bumpSettings: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                    readonly errorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                };
                            };
                            readonly canBumpItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canBuyItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly rub_price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly price_currency: {
                                readonly type: "string";
                                readonly default: "rub";
                            };
                            readonly canValidateAccount: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewAccountLink: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly itemOriginPhrase: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly note_text: {
                                readonly type: "string";
                                readonly default: any;
                            };
                            readonly description_html: {
                                readonly type: "string";
                                readonly default: "Description HTML";
                            };
                            readonly description_html_en: {
                                readonly type: "string";
                                readonly default: "Description HTML EN";
                            };
                            readonly seller: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly sold_items_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly active_item_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_data: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly is_banned: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly display_style_group_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_percents: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly totalItems: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly totalItemsPrice: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly perPage: {
                    readonly type: "integer";
                    readonly default: 40;
                };
                readonly page: {
                    readonly type: "integer";
                    readonly default: 1;
                };
                readonly cacheTTL: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly lastModified: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly searchUrl: {
                    readonly type: "string";
                    readonly default: "/";
                };
                readonly stickyItems: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ListOrders: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly user_id: {
                    readonly title: "User id";
                    readonly type: "integer";
                    readonly description: "User id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly category_id: {
                    readonly title: "Category Id";
                    readonly type: "integer";
                    readonly description: "Accounts category.";
                    readonly "x-enumDescriptions": {
                        readonly "1": "Steam";
                        readonly "3": "EA (Origin)";
                        readonly "4": "Warface";
                        readonly "5": "Uplay";
                        readonly "6": "ChatGPT";
                        readonly "7": "Social Club";
                        readonly "9": "Fortnite";
                        readonly "10": "Instagram";
                        readonly "11": "Battlenet";
                        readonly "12": "Epic Games";
                        readonly "13": "Riot";
                        readonly "14": "World Of Tanks";
                        readonly "15": "Supercell";
                        readonly "16": "WOT Blitz";
                        readonly "17": "miHoYo";
                        readonly "18": "Escape From Tarkov";
                        readonly "19": "VPN";
                        readonly "20": "Tiktok";
                        readonly "22": "Discord";
                        readonly "24": "Telegram";
                        readonly "27": "War Thunder";
                        readonly "28": "Minecraft";
                        readonly "30": "Gifts";
                        readonly "31": "Roblox";
                    };
                    readonly enum: readonly [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 27, 28, 30, 31];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly show: {
                    readonly title: "Show";
                    readonly type: "string";
                    readonly enum: readonly ["active", "paid", "deleted", "awaiting", "closed", "discount_request", "stickied", "pre_active"];
                    readonly description: "Account status.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly login: {
                    readonly title: "Login";
                    readonly type: "string";
                    readonly description: "Login.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Item List Model";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "perPage", "page", "cacheTTL", "lastModified", "searchUrl", "stickyItems", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly item_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_state: {
                                readonly type: "string";
                                readonly default: "active";
                            };
                            readonly category_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly published_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly default: "Title";
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly default: "Description";
                            };
                            readonly price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly update_stat_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly refreshed_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly view_count: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly is_sticky: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly extended_guarantee: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly nsb: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly allow_ask_discount: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title_en: {
                                readonly type: "string";
                                readonly default: "Title EN";
                            };
                            readonly description_en: {
                                readonly type: "string";
                                readonly default: "Description EN";
                            };
                            readonly item_domain: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly resale_item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly isIgnored: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly guarantee: {
                                readonly type: "boolean";
                                readonly default: any;
                            };
                            readonly canViewLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUpdateItemStats: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewEmailLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly showGetEmailCodeButton: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canOpenItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canCloseItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canEditItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canDeleteItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canStickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUnstickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly bumpSettings: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                    readonly errorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                };
                            };
                            readonly canBumpItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canBuyItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly rub_price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly price_currency: {
                                readonly type: "string";
                                readonly default: "rub";
                            };
                            readonly canValidateAccount: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewAccountLink: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly itemOriginPhrase: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly note_text: {
                                readonly type: "string";
                                readonly default: any;
                            };
                            readonly description_html: {
                                readonly type: "string";
                                readonly default: "Description HTML";
                            };
                            readonly description_html_en: {
                                readonly type: "string";
                                readonly default: "Description HTML EN";
                            };
                            readonly seller: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly sold_items_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly active_item_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_data: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly is_banned: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly display_style_group_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_percents: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly totalItems: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly totalItemsPrice: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly perPage: {
                    readonly type: "integer";
                    readonly default: 40;
                };
                readonly page: {
                    readonly type: "integer";
                    readonly default: 1;
                };
                readonly cacheTTL: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly lastModified: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly searchUrl: {
                    readonly type: "string";
                    readonly default: "/";
                };
                readonly stickyItems: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ListUser: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly user_id: {
                    readonly title: "User id";
                    readonly type: "integer";
                    readonly description: "User id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly category_id: {
                    readonly title: "Category Id";
                    readonly type: "integer";
                    readonly description: "Accounts category.";
                    readonly "x-enumDescriptions": {
                        readonly "1": "Steam";
                        readonly "3": "EA (Origin)";
                        readonly "4": "Warface";
                        readonly "5": "Uplay";
                        readonly "6": "ChatGPT";
                        readonly "7": "Social Club";
                        readonly "9": "Fortnite";
                        readonly "10": "Instagram";
                        readonly "11": "Battlenet";
                        readonly "12": "Epic Games";
                        readonly "13": "Riot";
                        readonly "14": "World Of Tanks";
                        readonly "15": "Supercell";
                        readonly "16": "WOT Blitz";
                        readonly "17": "miHoYo";
                        readonly "18": "Escape From Tarkov";
                        readonly "19": "VPN";
                        readonly "20": "Tiktok";
                        readonly "22": "Discord";
                        readonly "24": "Telegram";
                        readonly "27": "War Thunder";
                        readonly "28": "Minecraft";
                        readonly "30": "Gifts";
                        readonly "31": "Roblox";
                    };
                    readonly enum: readonly [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 27, 28, 30, 31];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly show: {
                    readonly title: "Show";
                    readonly type: "string";
                    readonly enum: readonly ["active", "paid", "deleted", "awaiting", "closed", "discount_request", "stickied", "pre_active"];
                    readonly description: "Account status.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly delete_reason: {
                    readonly title: "Delete reason";
                    readonly type: "string";
                    readonly description: "Delete reason. (Only if **show** is set to **deleted**)";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly login: {
                    readonly title: "Login";
                    readonly type: "string";
                    readonly description: "Login.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly username: {
                    readonly title: "Username";
                    readonly description: "Username of buyer. (If **show** is **paid**)";
                    readonly type: "string";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly published_startDate: {
                    readonly title: "Published Start Date";
                    readonly type: "string";
                    readonly description: "Start date for filtering by publication date.";
                    readonly examples: readonly ["2025-01-01T00:00:00+00:00"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly published_endDate: {
                    readonly title: "Published End Date";
                    readonly type: "string";
                    readonly description: "End date for filtering by publication date.";
                    readonly examples: readonly ["2025-01-01T00:00:00+00:00"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly filter_by_published_date: {
                    readonly title: "Filter By Published Date";
                    readonly type: "boolean";
                    readonly description: "Enable filtering by publication date.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly buyer_operation_dateStart: {
                    readonly title: "Buyer Operation Start Date";
                    readonly type: "string";
                    readonly description: "Start date for filtering by buyer operation date.";
                    readonly examples: readonly ["2025-01-01T00:00:00+00:00"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly buyer_operation_dateEnd: {
                    readonly title: "Buyer Operation End Date";
                    readonly type: "string";
                    readonly description: "End date for filtering by buyer operation date.";
                    readonly examples: readonly ["2025-01-01T00:00:00+00:00"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly filter_by_buyer_operation_date: {
                    readonly title: "Filter By Buyer Operation Date";
                    readonly type: "boolean";
                    readonly description: "Enable filtering by buyer operation date.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly delete_dateStart: {
                    readonly title: "Delete Start Date";
                    readonly type: "string";
                    readonly description: "Start date for filtering by deletion date.";
                    readonly examples: readonly ["2025-01-01T00:00:00+00:00"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly delete_dateEnd: {
                    readonly title: "Delete End Date";
                    readonly type: "string";
                    readonly description: "End date for filtering by deletion date.";
                    readonly examples: readonly ["2025-01-01T00:00:00+00:00"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly filter_by_delete_date: {
                    readonly title: "Filter By Delete Date";
                    readonly type: "boolean";
                    readonly description: "Enable filtering by deletion date.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Item List Model";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "perPage", "page", "cacheTTL", "lastModified", "searchUrl", "stickyItems", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly item_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_state: {
                                readonly type: "string";
                                readonly default: "active";
                            };
                            readonly category_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly published_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly default: "Title";
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly default: "Description";
                            };
                            readonly price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly update_stat_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly refreshed_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly view_count: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly is_sticky: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly extended_guarantee: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly nsb: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly allow_ask_discount: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title_en: {
                                readonly type: "string";
                                readonly default: "Title EN";
                            };
                            readonly description_en: {
                                readonly type: "string";
                                readonly default: "Description EN";
                            };
                            readonly item_domain: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly resale_item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly isIgnored: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly guarantee: {
                                readonly type: "boolean";
                                readonly default: any;
                            };
                            readonly canViewLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUpdateItemStats: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewEmailLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly showGetEmailCodeButton: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canOpenItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canCloseItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canEditItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canDeleteItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canStickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUnstickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly bumpSettings: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                    readonly errorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                };
                            };
                            readonly canBumpItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canBuyItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly rub_price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly price_currency: {
                                readonly type: "string";
                                readonly default: "rub";
                            };
                            readonly canValidateAccount: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewAccountLink: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly itemOriginPhrase: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly note_text: {
                                readonly type: "string";
                                readonly default: any;
                            };
                            readonly description_html: {
                                readonly type: "string";
                                readonly default: "Description HTML";
                            };
                            readonly description_html_en: {
                                readonly type: "string";
                                readonly default: "Description HTML EN";
                            };
                            readonly seller: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly sold_items_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly active_item_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_data: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly is_banned: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly display_style_group_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_percents: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly totalItems: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly totalItemsPrice: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly perPage: {
                    readonly type: "integer";
                    readonly default: 40;
                };
                readonly page: {
                    readonly type: "integer";
                    readonly default: 1;
                };
                readonly cacheTTL: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly lastModified: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly searchUrl: {
                    readonly type: "string";
                    readonly default: "/";
                };
                readonly stickyItems: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ListViewed: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly show: {
                    readonly title: "Show";
                    readonly type: "string";
                    readonly enum: readonly ["active", "paid", "deleted", "awaiting", "closed", "discount_request", "stickied", "pre_active"];
                    readonly description: "Account status.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title: {
                    readonly title: "Title";
                    readonly type: "string";
                    readonly description: "The word or words contained in the account title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "origin[]": {
                    readonly title: "Origin";
                    readonly type: "array";
                    readonly description: "List of account origins.";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly "not_origin[]": {
                    readonly title: "Not Origin";
                    readonly description: "List of account origins that won't be included.";
                    readonly type: "array";
                    readonly uniqueItems: true;
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "self_registration", "retrieve", "retrieve_via_support", "dummy"];
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly order_by: {
                    readonly title: "Order By";
                    readonly description: "Order by.";
                    readonly type: "string";
                    readonly enum: readonly ["price_to_up", "price_to_down", "pdate_to_down", "pdate_to_up", "pdate_to_down_upload", "pdate_to_up_upload", "edate_to_up", "edate_to_down", "ddate_to_up", "ddate_to_down"];
                    readonly "x-enumDescriptions": {
                        readonly price_to_up: "Cheap first.";
                        readonly price_to_down: "Expensive first.";
                        readonly pdate_to_down: "Newest.";
                        readonly pdate_to_up: "Oldest.";
                        readonly pdate_to_down_upload: "Newest uploaded.";
                        readonly pdate_to_up_upload: "Oldest uploaded.";
                        readonly edate_to_up: "Newest edited.";
                        readonly edate_to_down: "Oldest edited.";
                        readonly ddate_to_up: "Newest deleted.";
                        readonly ddate_to_down: "Oldest deleted.";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb: {
                    readonly title: "Sold Before";
                    readonly type: "boolean";
                    readonly description: "Sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sb_by_me: {
                    readonly title: "Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb: {
                    readonly title: "Not Sold Before";
                    readonly type: "boolean";
                    readonly description: "Not sold before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nsb_by_me: {
                    readonly title: "Not Sold By Me";
                    readonly type: "boolean";
                    readonly description: "Not sold by me before.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Item List Model";
            readonly required: readonly ["items", "totalItems", "totalItemsPrice", "perPage", "page", "cacheTTL", "lastModified", "searchUrl", "stickyItems", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly items: {
                    readonly type: "array";
                    readonly items: {
                        readonly properties: {
                            readonly item_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_state: {
                                readonly type: "string";
                                readonly default: "active";
                            };
                            readonly category_id: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly published_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly default: "Title";
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly default: "Description";
                            };
                            readonly price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly update_stat_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly refreshed_date: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly view_count: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly is_sticky: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly extended_guarantee: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly nsb: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly allow_ask_discount: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly title_en: {
                                readonly type: "string";
                                readonly default: "Title EN";
                            };
                            readonly description_en: {
                                readonly type: "string";
                                readonly default: "Description EN";
                            };
                            readonly item_domain: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly resale_item_origin: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly isIgnored: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly guarantee: {
                                readonly type: "boolean";
                                readonly default: any;
                            };
                            readonly canViewLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUpdateItemStats: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewEmailLoginData: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly showGetEmailCodeButton: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canOpenItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canCloseItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canEditItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canDeleteItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canStickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canUnstickItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly bumpSettings: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly canBumpItem: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly canBumpItemGlobally: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly shortErrorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                    readonly errorPhrase: {
                                        readonly type: "string";
                                        readonly default: any;
                                    };
                                };
                            };
                            readonly canBumpItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canBuyItem: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly rub_price: {
                                readonly type: "integer";
                                readonly default: 0;
                            };
                            readonly price_currency: {
                                readonly type: "string";
                                readonly default: "rub";
                            };
                            readonly canValidateAccount: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canResellItemAfterPurchase: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly canViewAccountLink: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly itemOriginPhrase: {
                                readonly type: "string";
                                readonly default: "string";
                            };
                            readonly tags: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly note_text: {
                                readonly type: "string";
                                readonly default: any;
                            };
                            readonly description_html: {
                                readonly type: "string";
                                readonly default: "Description HTML";
                            };
                            readonly description_html_en: {
                                readonly type: "string";
                                readonly default: "Description HTML EN";
                            };
                            readonly seller: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly sold_items_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly active_item_count: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_data: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                        readonly default: "string";
                                    };
                                    readonly avatar_date: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly is_banned: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly display_style_group_id: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                    readonly restore_percents: {
                                        readonly type: "integer";
                                        readonly default: 0;
                                    };
                                };
                            };
                        };
                        readonly type: "object";
                    };
                };
                readonly totalItems: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly totalItemsPrice: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly perPage: {
                    readonly type: "integer";
                    readonly default: 40;
                };
                readonly page: {
                    readonly type: "integer";
                    readonly default: 1;
                };
                readonly cacheTTL: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly lastModified: {
                    readonly type: "integer";
                    readonly default: 0;
                };
                readonly searchUrl: {
                    readonly type: "string";
                    readonly default: "/";
                };
                readonly stickyItems: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingAiPrice: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["price", "system_info"];
            readonly properties: {
                readonly price: {
                    readonly title: "Price";
                    readonly type: "integer";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingAutoBuyPrice: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["price", "system_info"];
            readonly properties: {
                readonly price: {
                    readonly title: "Price";
                    readonly type: "integer";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingBulkGet: {
    readonly body: {
        readonly properties: {
            readonly item_id: {
                readonly description: "Item id.";
                readonly title: "Item ID";
                readonly type: "array";
                readonly items: {
                    readonly type: "integer";
                    readonly minimum: 1;
                };
            };
            readonly parse_same_item_ids: {
                readonly description: "Parse same item ids.";
                readonly title: "Parse Same Item Ids";
                readonly type: "boolean";
            };
        };
        readonly type: "object";
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly title: "Successful Response.";
            readonly required: readonly ["items", "left_item_id", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly items: {
                    readonly title: "Items";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly "0": {
                                readonly title: "Item";
                                readonly type: "object";
                                readonly properties: {
                                    readonly item_id: {
                                        readonly title: "Item";
                                        readonly type: "integer";
                                    };
                                    readonly item_state: {
                                        readonly title: "Item";
                                        readonly type: "string";
                                    };
                                    readonly category_id: {
                                        readonly title: "Category";
                                        readonly type: "integer";
                                    };
                                    readonly published_date: {
                                        readonly title: "Published";
                                        readonly type: "integer";
                                    };
                                    readonly title: {
                                        readonly title: "Title";
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly title: "Description";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "integer";
                                    };
                                    readonly update_stat_date: {
                                        readonly title: "Update";
                                        readonly type: "integer";
                                    };
                                    readonly refreshed_date: {
                                        readonly title: "Refreshed";
                                        readonly type: "integer";
                                    };
                                    readonly edit_date: {
                                        readonly title: "Edit";
                                        readonly type: "integer";
                                    };
                                    readonly pending_deletion_date: {
                                        readonly title: "Pending";
                                        readonly type: "integer";
                                    };
                                    readonly login: {
                                        readonly title: "Login";
                                        readonly type: "string";
                                    };
                                    readonly temp_email: {
                                        readonly title: "Temp";
                                        readonly type: "string";
                                    };
                                    readonly view_count: {
                                        readonly title: "View";
                                        readonly type: "integer";
                                    };
                                    readonly is_sticky: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly information: {
                                        readonly title: "Information";
                                        readonly type: "string";
                                    };
                                    readonly item_origin: {
                                        readonly title: "Item";
                                        readonly type: "string";
                                    };
                                    readonly extended_guarantee: {
                                        readonly title: "Extended";
                                        readonly type: "integer";
                                    };
                                    readonly nsb: {
                                        readonly title: "Nsb";
                                        readonly type: "integer";
                                    };
                                    readonly allow_ask_discount: {
                                        readonly title: "Allow";
                                        readonly type: "integer";
                                    };
                                    readonly title_en: {
                                        readonly title: "Title";
                                        readonly type: "string";
                                    };
                                    readonly description_en: {
                                        readonly title: "Description";
                                        readonly type: "string";
                                    };
                                    readonly information_en: {
                                        readonly title: "Information";
                                        readonly type: "string";
                                    };
                                    readonly email_type: {
                                        readonly title: "Email";
                                        readonly type: "string";
                                    };
                                    readonly email_provider: {
                                        readonly title: "Email";
                                        readonly type: "string";
                                    };
                                    readonly item_domain: {
                                        readonly title: "Item";
                                        readonly type: "string";
                                    };
                                    readonly resale_item_origin: {
                                        readonly title: "Resale";
                                        readonly type: "string";
                                    };
                                    readonly note_text: {
                                        readonly title: "Note";
                                        readonly type: "string";
                                    };
                                    readonly content_type: {
                                        readonly title: "Content";
                                    };
                                    readonly content_id: {
                                        readonly title: "Content";
                                    };
                                    readonly delete_date: {
                                        readonly title: "Delete";
                                        readonly type: "integer";
                                    };
                                    readonly delete_user_id: {
                                        readonly title: "Delete";
                                        readonly type: "integer";
                                    };
                                    readonly delete_username: {
                                        readonly title: "Delete";
                                        readonly type: "string";
                                    };
                                    readonly delete_reason: {
                                        readonly title: "Delete";
                                        readonly type: "string";
                                    };
                                    readonly user_allow_ask_discount: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly max_discount_percent: {
                                        readonly title: "Max";
                                        readonly type: "integer";
                                    };
                                    readonly market_custom_title: {
                                        readonly title: "Market";
                                        readonly type: "string";
                                    };
                                    readonly feedback_data: {
                                        readonly title: "Feedback";
                                        readonly type: "string";
                                    };
                                    readonly buyer_display_icon_group_id: {
                                        readonly title: "Buyer";
                                        readonly type: "integer";
                                    };
                                    readonly buyer_uniq_banner: {
                                        readonly title: "Buyer";
                                        readonly type: "string";
                                    };
                                    readonly buyer_avatar_date: {
                                        readonly title: "Buyer";
                                        readonly type: "integer";
                                    };
                                    readonly buyer_user_group_id: {
                                        readonly title: "Buyer";
                                        readonly type: "integer";
                                    };
                                    readonly is_fave: {
                                        readonly title: "Is";
                                    };
                                    readonly in_cart: {
                                        readonly title: "In";
                                    };
                                    readonly cart_price: {
                                        readonly title: "Cart";
                                    };
                                    readonly canResellItem: {
                                        readonly title: "Can Resell Item";
                                        readonly type: "boolean";
                                    };
                                    readonly priceWithSellerFee: {
                                        readonly title: "Price With Seller Fee";
                                        readonly type: "number";
                                    };
                                    readonly guarantee: {
                                        readonly title: "Guarantee";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly duration: {
                                                readonly title: "Duration";
                                                readonly type: "integer";
                                            };
                                            readonly class: {
                                                readonly title: "Class";
                                                readonly type: "string";
                                            };
                                            readonly durationPhrase: {
                                                readonly title: "Duration Phrase";
                                                readonly type: "string";
                                            };
                                            readonly endDate: {
                                                readonly title: "End Date";
                                                readonly type: "integer";
                                            };
                                            readonly active: {
                                                readonly title: "Active";
                                                readonly type: "boolean";
                                            };
                                            readonly cancelled: {
                                                readonly title: "Cancelled";
                                                readonly type: "boolean";
                                            };
                                            readonly remainingTime: {
                                                readonly title: "Remaining Time";
                                                readonly type: "integer";
                                            };
                                            readonly remainingTimePhrase: {
                                                readonly title: "Remaining Time Phrase";
                                                readonly type: "string";
                                            };
                                            readonly cancelledReason: {
                                                readonly title: "Cancelled Reason";
                                                readonly type: "string";
                                            };
                                            readonly cancelledReasonPhrase: {
                                                readonly title: "Cancelled Reason Phrase";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                                    };
                                    readonly canViewLoginData: {
                                        readonly title: "Can View Login Data";
                                        readonly type: "boolean";
                                    };
                                    readonly canUpdateItemStats: {
                                        readonly title: "Can Update Item Stats";
                                        readonly type: "boolean";
                                    };
                                    readonly canReportItem: {
                                        readonly title: "Can Report Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canViewItemViews: {
                                        readonly title: "Can View Item Views";
                                        readonly type: "boolean";
                                    };
                                    readonly loginData: {
                                        readonly title: "Login Data";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly raw: {
                                                readonly title: "Raw";
                                                readonly type: "string";
                                            };
                                            readonly encodedRaw: {
                                                readonly title: "Encoded Raw";
                                                readonly type: "string";
                                            };
                                            readonly login: {
                                                readonly title: "Login";
                                                readonly type: "string";
                                            };
                                            readonly password: {
                                                readonly title: "Password";
                                                readonly type: "string";
                                            };
                                            readonly encodedPassword: {
                                                readonly title: "Encoded Password";
                                                readonly type: "string";
                                            };
                                            readonly oldPassword: {
                                                readonly title: "Old Password";
                                                readonly type: "string";
                                            };
                                            readonly encodedOldPassword: {
                                                readonly title: "Encoded Old Password";
                                            };
                                        };
                                        readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                                    };
                                    readonly canViewEmailLoginData: {
                                        readonly title: "Can View Email Login Data";
                                        readonly type: "boolean";
                                    };
                                    readonly copyFormatData: {
                                        readonly title: "Copy Format Data";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title_link: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly login_data: {
                                                readonly title: "Login";
                                                readonly type: "string";
                                            };
                                            readonly full: {
                                                readonly title: "Full";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["title_link", "login_data", "full"];
                                    };
                                    readonly showGetEmailCodeButton: {
                                        readonly title: "Show Get Email Code Button";
                                        readonly type: "boolean";
                                    };
                                    readonly getEmailCodeDisplayLogin: {
                                        readonly title: "Get Email Code Display Login";
                                    };
                                    readonly buyer: {
                                        readonly title: "Buyer";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly user_id: {
                                                readonly title: "User";
                                                readonly type: "integer";
                                            };
                                            readonly operation_date: {
                                                readonly title: "Operation";
                                                readonly type: "integer";
                                            };
                                            readonly visitorIsBuyer: {
                                                readonly title: "Visitor Is Buyer";
                                                readonly type: "boolean";
                                            };
                                            readonly username: {
                                                readonly title: "Username";
                                                readonly type: "string";
                                            };
                                            readonly is_banned: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly display_style_group_id: {
                                                readonly title: "Display";
                                                readonly type: "integer";
                                            };
                                            readonly display_icon_group_id: {
                                                readonly title: "Display";
                                                readonly type: "integer";
                                            };
                                            readonly uniq_username_css: {
                                                readonly title: "Uniq";
                                                readonly type: "string";
                                            };
                                            readonly uniq_banner: {
                                                readonly title: "Uniq";
                                                readonly type: "string";
                                            };
                                            readonly user_group_id: {
                                                readonly title: "User";
                                                readonly type: "integer";
                                            };
                                        };
                                        readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                                    };
                                    readonly isPersonalAccount: {
                                        readonly title: "Is Personal Account";
                                        readonly type: "boolean";
                                    };
                                    readonly rub_price: {
                                        readonly title: "Rub";
                                        readonly type: "integer";
                                    };
                                    readonly price_currency: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceWithSellerFeeLabel: {
                                        readonly title: "Price With Seller Fee Label";
                                        readonly type: "string";
                                    };
                                    readonly canValidateAccount: {
                                        readonly title: "Can Validate Account";
                                        readonly type: "boolean";
                                    };
                                    readonly canResellItemAfterPurchase: {
                                        readonly title: "Can Resell Item After Purchase";
                                        readonly type: "boolean";
                                    };
                                    readonly isSmallExf: {
                                        readonly title: "Is Small Exf";
                                        readonly type: "boolean";
                                    };
                                    readonly account_last_activity: {
                                        readonly title: "Account";
                                        readonly type: "integer";
                                    };
                                    readonly canViewAccountLink: {
                                        readonly title: "Can View Account Link";
                                        readonly type: "boolean";
                                    };
                                    readonly accountLinks: {
                                        readonly title: "Account Links";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly link: {
                                                    readonly title: "Link";
                                                    readonly type: "string";
                                                };
                                                readonly text: {
                                                    readonly title: "Text";
                                                    readonly type: "string";
                                                };
                                                readonly iconClass: {
                                                    readonly title: "Icon Class";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["link", "text", "iconClass"];
                                        };
                                    };
                                    readonly accountLink: {
                                        readonly title: "Account Link";
                                        readonly type: "string";
                                    };
                                    readonly imagePreviewLinks: {
                                        readonly title: "Image Preview Links";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly canChangePassword: {
                                        readonly title: "Can Change Password";
                                        readonly type: "boolean";
                                    };
                                    readonly canChangeEmailPassword: {
                                        readonly title: "Can Change Email Password";
                                        readonly type: "boolean";
                                    };
                                    readonly uniqueKeyExists: {
                                        readonly title: "Unique Key Exists";
                                        readonly type: "boolean";
                                    };
                                    readonly itemOriginPhrase: {
                                        readonly title: "Item Origin Phrase";
                                        readonly type: "string";
                                    };
                                    readonly visitorIsAuthor: {
                                        readonly title: "Visitor Is Author";
                                        readonly type: "boolean";
                                    };
                                    readonly canAskDiscount: {
                                        readonly title: "Can Ask Discount";
                                        readonly type: "boolean";
                                    };
                                    readonly tags: {
                                        readonly title: "Tags";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly "1234567890": {
                                                readonly title: "";
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly tag_id: {
                                                        readonly title: "Tag";
                                                        readonly type: "integer";
                                                    };
                                                    readonly title: {
                                                        readonly title: "Title";
                                                        readonly type: "string";
                                                    };
                                                    readonly isDefault: {
                                                        readonly title: "Is Default";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly forOwnedAccountsOnly: {
                                                        readonly title: "For Owned Accounts Only";
                                                        readonly type: "boolean";
                                                    };
                                                    readonly bc: {
                                                        readonly title: "Bc";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                            };
                                        };
                                        readonly required: readonly ["1234567890"];
                                    };
                                    readonly customFields: {
                                        readonly title: "Custom Fields";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly _4: {
                                                readonly title: "";
                                                readonly type: "string";
                                            };
                                            readonly allowSelfUnban: {
                                                readonly title: "Allow Self Unban";
                                                readonly type: "array";
                                                readonly items: {};
                                            };
                                            readonly ban_reason: {
                                                readonly title: "Ban";
                                                readonly type: "string";
                                            };
                                            readonly discord: {
                                                readonly title: "Discord";
                                                readonly type: "string";
                                            };
                                            readonly github: {
                                                readonly title: "Github";
                                                readonly type: "string";
                                            };
                                            readonly jabber: {
                                                readonly title: "Jabber";
                                                readonly type: "string";
                                            };
                                            readonly lztUnbanAmount: {
                                                readonly title: "Lzt Unban Amount";
                                                readonly type: "string";
                                            };
                                            readonly steam: {
                                                readonly title: "Steam";
                                                readonly type: "string";
                                            };
                                            readonly telegram: {
                                                readonly title: "Telegram";
                                                readonly type: "string";
                                            };
                                            readonly vk: {
                                                readonly title: "Vk";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                                    };
                                    readonly externalAuth: {
                                        readonly title: "External Auth";
                                        readonly type: "array";
                                        readonly items: {};
                                    };
                                    readonly isTrusted: {
                                        readonly title: "Is Trusted";
                                        readonly type: "boolean";
                                    };
                                    readonly isBirthdayToday: {
                                        readonly title: "Is Birthday Today";
                                        readonly type: "boolean";
                                    };
                                    readonly isIgnored: {
                                        readonly title: "Is Ignored";
                                        readonly type: "boolean";
                                    };
                                    readonly deposit: {
                                        readonly title: "Deposit";
                                        readonly type: "integer";
                                    };
                                    readonly extraPrices: {
                                        readonly title: "Extra Prices";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly currency: {
                                                    readonly title: "Currency";
                                                    readonly type: "string";
                                                };
                                                readonly price: {
                                                    readonly title: "Price";
                                                    readonly type: "string";
                                                };
                                                readonly priceValue: {
                                                    readonly title: "Price Value";
                                                    readonly type: "number";
                                                };
                                            };
                                            readonly required: readonly ["currency", "price", "priceValue"];
                                        };
                                    };
                                    readonly canViewAccountLoginAndTempEmail: {
                                        readonly title: "Can View Account Login And Temp Email";
                                        readonly type: "boolean";
                                    };
                                    readonly bumpSettings: {
                                        readonly title: "Bump Settings";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly canBumpItem: {
                                                readonly title: "Can Bump Item";
                                                readonly type: "boolean";
                                            };
                                            readonly canBumpItemGlobally: {
                                                readonly title: "Can Bump Item Globally";
                                                readonly type: "boolean";
                                            };
                                            readonly shortErrorPhrase: {
                                                readonly title: "Short Error Phrase";
                                            };
                                            readonly nextAllowedBumpDate: {
                                                readonly title: "Next Allowed Bump Date";
                                            };
                                            readonly errorPhrase: {
                                                readonly title: "Error Phrase";
                                            };
                                        };
                                        readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                                    };
                                    readonly canCheckGuarantee: {
                                        readonly title: "Can Check Guarantee";
                                        readonly type: "boolean";
                                    };
                                    readonly canShareItem: {
                                        readonly title: "Can Share Item";
                                        readonly type: "boolean";
                                    };
                                    readonly canCheckAiPrice: {
                                        readonly title: "Can Check Ai Price";
                                        readonly type: "boolean";
                                    };
                                    readonly aiPrice: {
                                        readonly title: "Ai Price";
                                        readonly type: "integer";
                                    };
                                    readonly aiPriceCheckDate: {
                                        readonly title: "Ai Price Check Date";
                                        readonly type: "integer";
                                    };
                                    readonly needToRequireVideoToViewLoginData: {
                                        readonly title: "Need To Require Video To View Login Data";
                                        readonly type: "boolean";
                                    };
                                    readonly canCheckAutoBuyPrice: {
                                        readonly title: "Can Check Auto Buy Price";
                                        readonly type: "boolean";
                                    };
                                    readonly autoBuyPrice: {
                                        readonly title: "Auto Buy Price";
                                        readonly type: "integer";
                                    };
                                    readonly autoBuyPriceCheckDate: {
                                        readonly title: "Auto Buy Price Check Date";
                                        readonly type: "integer";
                                    };
                                    readonly descriptionHtml: {
                                        readonly title: "Description Html";
                                        readonly type: "string";
                                    };
                                    readonly descriptionEnHtml: {
                                        readonly title: "Description En Html";
                                        readonly type: "string";
                                    };
                                    readonly descriptionPlain: {
                                        readonly title: "Description Plain";
                                        readonly type: "string";
                                    };
                                    readonly descriptionEnPlain: {
                                        readonly title: "Description En Plain";
                                        readonly type: "string";
                                    };
                                    readonly seller: {
                                        readonly title: "Seller";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly user_id: {
                                                readonly title: "User";
                                                readonly type: "integer";
                                            };
                                            readonly username: {
                                                readonly title: "Username";
                                                readonly type: "string";
                                            };
                                            readonly avatar_date: {
                                                readonly title: "Avatar";
                                                readonly type: "integer";
                                            };
                                            readonly is_banned: {
                                                readonly title: "Is";
                                                readonly type: "integer";
                                            };
                                            readonly display_style_group_id: {
                                                readonly title: "Display";
                                                readonly type: "integer";
                                            };
                                            readonly joined_date: {
                                                readonly title: "Joined";
                                                readonly type: "integer";
                                            };
                                            readonly sold_items_count: {
                                                readonly title: "Sold";
                                                readonly type: "integer";
                                            };
                                            readonly active_items_count: {
                                                readonly title: "Active";
                                                readonly type: "integer";
                                            };
                                            readonly restore_data: {
                                                readonly title: "Restore";
                                                readonly type: "string";
                                            };
                                            readonly effective_last_activity: {
                                                readonly title: "Effective";
                                                readonly type: "integer";
                                            };
                                            readonly restore_percents: {
                                                readonly title: "Restore";
                                            };
                                            readonly isOnline: {
                                                readonly title: "Is Online";
                                                readonly type: "boolean";
                                            };
                                            readonly contacts: {
                                                readonly title: "Contacts";
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly ban_reason: {
                                                        readonly title: "Ban";
                                                        readonly type: "string";
                                                    };
                                                    readonly telegram: {
                                                        readonly title: "Telegram";
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["ban_reason", "telegram"];
                                            };
                                        };
                                        readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                                    };
                                };
                                readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                            };
                        };
                    };
                };
                readonly left_item_id: {
                    readonly title: "Left";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingBump: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingChangePassword: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly _cancel: {
                    readonly title: " Cancel";
                    readonly type: "integer";
                    readonly description: "Cancel change password recommendation. It will be helpful, if you don't want to change password and get login data.";
                    readonly enum: readonly [1];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "ChangePasswordModel";
            readonly required: readonly ["new_password"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly new_password: {
                    readonly title: "New Password";
                    readonly type: "string";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingCheckGuarantee: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingClose: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingCreateClaim: {
    readonly body: {
        readonly title: "Post Body";
        readonly required: readonly ["post_body"];
        readonly type: "object";
        readonly properties: {
            readonly post_body: {
                readonly title: "Post Body";
                readonly type: "string";
                readonly description: "You should describe what's happened.\n- describe the situation in a nutshell. If you wish, you can describe the situation in more detail using the \"Spoiler\" function.\n- attach screenshots of correspondence. You must upload to the site [Imgur](https://imgur.com/upload)\n- other evidence;\n- notify the respondent about the complaint you created, familiarize him with hidden content\n\nDescribe the situation in as much detail as possible.";
            };
        };
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "item_id";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "ThreadModel";
            readonly required: readonly ["system_info", "thread"];
            readonly type: "object";
            readonly properties: {
                readonly thread: {
                    readonly title: "Thread";
                    readonly required: readonly ["creator_user_id", "creator_username", "first_post", "forum", "forum_id", "links", "permissions", "thread_create_date", "thread_id", "thread_is_deleted", "thread_is_followed", "thread_is_published", "thread_is_sticky", "thread_post_count", "thread_prefixes", "thread_tags", "thread_title", "thread_update_date", "thread_view_count", "user_is_ignored"];
                    readonly type: "object";
                    readonly properties: {
                        readonly thread_id: {
                            readonly title: "Thread Id";
                            readonly type: "integer";
                        };
                        readonly forum_id: {
                            readonly title: "Forum Id";
                            readonly type: "integer";
                        };
                        readonly thread_title: {
                            readonly title: "Thread Title";
                            readonly type: "string";
                        };
                        readonly thread_view_count: {
                            readonly title: "Thread View Count";
                            readonly type: "integer";
                        };
                        readonly creator_user_id: {
                            readonly title: "Creator User Id";
                            readonly type: "integer";
                        };
                        readonly creator_username: {
                            readonly title: "Creator Username";
                            readonly type: "string";
                        };
                        readonly thread_create_date: {
                            readonly title: "Thread Create Date";
                            readonly type: "integer";
                        };
                        readonly thread_update_date: {
                            readonly title: "Thread Update Date";
                            readonly type: "integer";
                        };
                        readonly user_is_ignored: {
                            readonly title: "User Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly thread_post_count: {
                            readonly title: "Thread Post Count";
                            readonly type: "integer";
                        };
                        readonly thread_is_published: {
                            readonly title: "Thread Is Published";
                            readonly type: "boolean";
                        };
                        readonly thread_is_deleted: {
                            readonly title: "Thread Is Deleted";
                            readonly type: "boolean";
                        };
                        readonly thread_is_sticky: {
                            readonly title: "Thread Is Sticky";
                            readonly type: "boolean";
                        };
                        readonly thread_is_followed: {
                            readonly title: "Thread Is Followed";
                            readonly type: "boolean";
                        };
                        readonly first_post: {
                            readonly title: "FirstPost";
                            readonly required: readonly ["like_users", "links", "permissions", "post_attachment_count", "post_body", "post_body_html", "post_body_plain_text", "post_create_date", "post_id", "post_is_deleted", "post_is_first_post", "post_is_published", "post_like_count", "post_update_date", "poster_user_id", "poster_username", "signature", "signature_html", "signature_plain_text", "thread_id", "user_is_ignored"];
                            readonly type: "object";
                            readonly properties: {
                                readonly post_id: {
                                    readonly title: "Post Id";
                                    readonly type: "integer";
                                };
                                readonly thread_id: {
                                    readonly title: "Thread Id";
                                    readonly type: "integer";
                                };
                                readonly poster_user_id: {
                                    readonly title: "Poster User Id";
                                    readonly type: "integer";
                                };
                                readonly poster_username: {
                                    readonly title: "Poster Username";
                                    readonly type: "string";
                                };
                                readonly post_create_date: {
                                    readonly title: "Post Create Date";
                                    readonly type: "integer";
                                };
                                readonly post_body: {
                                    readonly title: "Post Body";
                                    readonly type: "string";
                                };
                                readonly post_body_html: {
                                    readonly title: "Post Body Html";
                                    readonly type: "string";
                                };
                                readonly post_body_plain_text: {
                                    readonly title: "Post Body Plain Text";
                                    readonly type: "string";
                                };
                                readonly signature: {
                                    readonly title: "Signature";
                                    readonly type: "string";
                                };
                                readonly signature_html: {
                                    readonly title: "Signature Html";
                                    readonly type: "string";
                                };
                                readonly signature_plain_text: {
                                    readonly title: "Signature Plain Text";
                                    readonly type: "string";
                                };
                                readonly post_like_count: {
                                    readonly title: "Post Like Count";
                                    readonly type: "integer";
                                };
                                readonly post_attachment_count: {
                                    readonly title: "Post Attachment Count";
                                    readonly type: "integer";
                                };
                                readonly like_users: {
                                    readonly title: "Like Users";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly title: "LikeUser";
                                        readonly required: readonly ["user_id", "username"];
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly user_id: {
                                                readonly title: "User Id";
                                                readonly type: "integer";
                                            };
                                            readonly username: {
                                                readonly title: "Username";
                                                readonly type: "string";
                                            };
                                            readonly display_style_group_id: {
                                                readonly title: "Display Style Group Id";
                                                readonly type: "integer";
                                            };
                                            readonly is_banned: {
                                                readonly title: "Is Banned";
                                                readonly type: "integer";
                                            };
                                            readonly uniq_username_css: {
                                                readonly title: "Uniq Username Css";
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                                readonly user_is_ignored: {
                                    readonly title: "User Is Ignored";
                                    readonly type: "boolean";
                                };
                                readonly post_is_published: {
                                    readonly title: "Post Is Published";
                                    readonly type: "boolean";
                                };
                                readonly post_is_deleted: {
                                    readonly title: "Post Is Deleted";
                                    readonly type: "boolean";
                                };
                                readonly post_update_date: {
                                    readonly title: "Post Update Date";
                                    readonly type: "integer";
                                };
                                readonly post_is_first_post: {
                                    readonly title: "Post Is First Post";
                                    readonly type: "boolean";
                                };
                                readonly links: {
                                    readonly title: "Links";
                                    readonly required: readonly ["attachments", "detail", "likes", "permalink", "poster", "poster_avatar", "report", "thread"];
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly permalink: {
                                            readonly title: "Permalink";
                                            readonly type: "string";
                                        };
                                        readonly detail: {
                                            readonly title: "Detail";
                                            readonly type: "string";
                                        };
                                        readonly thread: {
                                            readonly title: "Thread";
                                            readonly type: "string";
                                        };
                                        readonly poster: {
                                            readonly title: "Poster";
                                            readonly type: "string";
                                        };
                                        readonly likes: {
                                            readonly title: "Likes";
                                            readonly type: "string";
                                        };
                                        readonly report: {
                                            readonly title: "Report";
                                            readonly type: "string";
                                        };
                                        readonly attachments: {
                                            readonly title: "Attachments";
                                            readonly type: "string";
                                        };
                                        readonly poster_avatar: {
                                            readonly title: "Poster Avatar";
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly permissions: {
                                    readonly title: "Permissions";
                                    readonly required: readonly ["delete", "edit", "like", "reply", "report", "upload_attachment", "view"];
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly view: {
                                            readonly title: "View";
                                            readonly type: "boolean";
                                        };
                                        readonly edit: {
                                            readonly title: "Edit";
                                            readonly type: "boolean";
                                        };
                                        readonly delete: {
                                            readonly title: "Delete";
                                            readonly type: "boolean";
                                        };
                                        readonly reply: {
                                            readonly title: "Reply";
                                            readonly type: "boolean";
                                        };
                                        readonly like: {
                                            readonly title: "Like";
                                            readonly type: "boolean";
                                        };
                                        readonly report: {
                                            readonly title: "Report";
                                            readonly type: "boolean";
                                        };
                                        readonly upload_attachment: {
                                            readonly title: "Upload Attachment";
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                            };
                        };
                        readonly thread_prefixes: {
                            readonly title: "Thread Prefixes";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly thread_tags: {
                            readonly title: "Thread Tags";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly links: {
                            readonly title: "Links1";
                            readonly required: readonly ["detail", "first_post", "first_poster", "first_poster_avatar", "followers", "forum", "last_post", "last_poster", "permalink", "posts"];
                            readonly type: "object";
                            readonly properties: {
                                readonly permalink: {
                                    readonly title: "Permalink";
                                    readonly type: "string";
                                };
                                readonly detail: {
                                    readonly title: "Detail";
                                    readonly type: "string";
                                };
                                readonly followers: {
                                    readonly title: "Followers";
                                    readonly type: "string";
                                };
                                readonly forum: {
                                    readonly title: "Forum";
                                    readonly type: "string";
                                };
                                readonly posts: {
                                    readonly title: "Posts";
                                    readonly type: "string";
                                };
                                readonly first_poster: {
                                    readonly title: "First Poster";
                                    readonly type: "string";
                                };
                                readonly first_poster_avatar: {
                                    readonly title: "First Poster Avatar";
                                    readonly type: "string";
                                };
                                readonly first_post: {
                                    readonly title: "First Post";
                                    readonly type: "string";
                                };
                                readonly last_poster: {
                                    readonly title: "Last Poster";
                                    readonly type: "string";
                                };
                                readonly last_post: {
                                    readonly title: "Last Post";
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly permissions: {
                            readonly title: "Permissions1";
                            readonly required: readonly ["delete", "edit", "follow", "post", "upload_attachment", "view"];
                            readonly type: "object";
                            readonly properties: {
                                readonly view: {
                                    readonly title: "View";
                                    readonly type: "boolean";
                                };
                                readonly delete: {
                                    readonly title: "Delete";
                                    readonly type: "boolean";
                                };
                                readonly follow: {
                                    readonly title: "Follow";
                                    readonly type: "boolean";
                                };
                                readonly post: {
                                    readonly title: "Post";
                                    readonly type: "boolean";
                                };
                                readonly upload_attachment: {
                                    readonly title: "Upload Attachment";
                                    readonly type: "boolean";
                                };
                                readonly edit: {
                                    readonly title: "Edit";
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly forum: {
                            readonly title: "Forum";
                            readonly required: readonly ["forum_description", "forum_id", "forum_is_followed", "forum_post_count", "forum_prefixes", "forum_thread_count", "forum_title", "links", "permissions", "thread_default_prefix_id", "thread_prefix_is_required"];
                            readonly type: "object";
                            readonly properties: {
                                readonly forum_id: {
                                    readonly title: "Forum Id";
                                    readonly type: "integer";
                                };
                                readonly forum_title: {
                                    readonly title: "Forum Title";
                                    readonly type: "string";
                                };
                                readonly forum_description: {
                                    readonly title: "Forum Description";
                                    readonly type: "string";
                                };
                                readonly forum_thread_count: {
                                    readonly title: "Forum Thread Count";
                                    readonly type: "integer";
                                };
                                readonly forum_post_count: {
                                    readonly title: "Forum Post Count";
                                    readonly type: "integer";
                                };
                                readonly forum_prefixes: {
                                    readonly title: "Forum Prefixes";
                                    readonly type: "array";
                                    readonly items: {
                                        readonly title: "ForumPrefix";
                                        readonly required: readonly ["group_prefixes", "group_title"];
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly group_title: {
                                                readonly title: "Group Title";
                                                readonly type: "string";
                                            };
                                            readonly group_prefixes: {
                                                readonly title: "Group Prefixes";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly title: "GroupPrefix";
                                                    readonly required: readonly ["prefix_id", "prefix_title"];
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly prefix_id: {
                                                            readonly title: "Prefix Id";
                                                            readonly type: "integer";
                                                        };
                                                        readonly prefix_title: {
                                                            readonly title: "Prefix Title";
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly thread_default_prefix_id: {
                                    readonly title: "Thread Default Prefix Id";
                                    readonly type: "integer";
                                };
                                readonly thread_prefix_is_required: {
                                    readonly title: "Thread Prefix Is Required";
                                    readonly type: "boolean";
                                };
                                readonly links: {
                                    readonly title: "Links2";
                                    readonly required: readonly ["detail", "followers", "permalink", "sub-categories", "sub-forums", "threads"];
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly permalink: {
                                            readonly title: "Permalink";
                                            readonly type: "string";
                                        };
                                        readonly detail: {
                                            readonly title: "Detail";
                                            readonly type: "string";
                                        };
                                        readonly "sub-categories": {
                                            readonly title: "Sub-Categories";
                                            readonly type: "string";
                                        };
                                        readonly "sub-forums": {
                                            readonly title: "Sub-Forums";
                                            readonly type: "string";
                                        };
                                        readonly threads: {
                                            readonly title: "Threads";
                                            readonly type: "string";
                                        };
                                        readonly followers: {
                                            readonly title: "Followers";
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly permissions: {
                                    readonly title: "Permissions2";
                                    readonly required: readonly ["create_thread", "delete", "edit", "follow", "tag_thread", "upload_attachment", "view"];
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly view: {
                                            readonly title: "View";
                                            readonly type: "boolean";
                                        };
                                        readonly edit: {
                                            readonly title: "Edit";
                                            readonly type: "boolean";
                                        };
                                        readonly delete: {
                                            readonly title: "Delete";
                                            readonly type: "boolean";
                                        };
                                        readonly create_thread: {
                                            readonly title: "Create Thread";
                                            readonly type: "boolean";
                                        };
                                        readonly upload_attachment: {
                                            readonly title: "Upload Attachment";
                                            readonly type: "boolean";
                                        };
                                        readonly tag_thread: {
                                            readonly title: "Tag Thread";
                                            readonly type: "boolean";
                                        };
                                        readonly follow: {
                                            readonly title: "Follow";
                                            readonly type: "boolean";
                                        };
                                    };
                                };
                                readonly forum_is_followed: {
                                    readonly title: "Forum Is Followed";
                                    readonly type: "boolean";
                                };
                            };
                        };
                    };
                };
                readonly system_info: {
                    readonly title: "SystemInfo";
                    readonly required: readonly ["time", "visitor_id"];
                    readonly type: "object";
                    readonly properties: {
                        readonly visitor_id: {
                            readonly title: "Visitor Id";
                            readonly type: "integer";
                        };
                        readonly time: {
                            readonly title: "Time";
                            readonly type: "integer";
                        };
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingEdit: {
    readonly body: {
        readonly title: "Account Information";
        readonly type: "object";
        readonly properties: {
            readonly description: {
                readonly title: "Description";
                readonly type: "string";
                readonly description: "Account public description.";
            };
            readonly information: {
                readonly title: "Information";
                readonly type: "string";
                readonly description: "Account private information (visible only for buyer).";
            };
        };
        readonly required: readonly [];
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly title: "Title Ru";
                    readonly type: "string";
                    readonly description: "Title of account. If **title** specified and **title_en** is empty, **title_en** will be automatically translated to English language.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title_en: {
                    readonly title: "Title En";
                    readonly type: "string";
                    readonly description: "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly price: {
                    readonly title: "Price";
                    readonly type: "integer";
                    readonly description: "Current price of account in your currency.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Using currency for amount. Required if you are trying to change price field.";
                };
                readonly item_origin: {
                    readonly title: "Item Origin";
                    readonly type: "string";
                    readonly description: "Account origin. Where did you get it from.";
                    readonly "x-enumDescriptions": {
                        readonly brute: "Account received using Bruteforce";
                        readonly phishing: "Account received from phishing page";
                        readonly stealer: "Account received from stealer logs";
                        readonly autoreg: "Account is automatically registered by a tool";
                        readonly personal: "Account is yours. You created it yourself";
                        readonly resale: "Account received from another seller";
                        readonly dummy: "Dummy (empty) account (only for Steam category)";
                        readonly self_registration: "Self registered account (only for Telegram category)";
                    };
                    readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "dummy"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "string";
                    readonly description: "Email login data (email:password format).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email_type: {
                    readonly title: "Email Type";
                    readonly type: "string";
                    readonly description: "Email type.";
                    readonly enum: readonly ["native", "autoreg"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly allow_ask_discount: {
                    readonly title: "Allow Ask Discount";
                    readonly type: "boolean";
                    readonly description: "Allow users to ask discount for this account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly proxy_id: {
                    readonly title: "Proxy Id";
                    readonly type: "integer";
                    readonly description: "Using proxy id for account checking. See GET or POST /proxy to get or edit proxy list.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingEmailCode: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "item_id";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email: {
                    readonly title: "Email";
                    readonly type: "string";
                    readonly description: "Email.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly login: {
                    readonly title: "Login.";
                    readonly type: "string";
                    readonly description: "Login.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "ConfCodeModel";
            readonly required: readonly ["codeData", "item"];
            readonly type: "object";
            readonly properties: {
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly pending_deletion_date: {
                            readonly title: "Pending";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly note_text: {
                            readonly title: "Note";
                            readonly type: "string";
                        };
                        readonly content_type: {
                            readonly title: "Content";
                        };
                        readonly content_id: {
                            readonly title: "Content";
                        };
                        readonly delete_date: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_user_id: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_username: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly delete_reason: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_display_icon_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_uniq_banner: {
                            readonly title: "Buyer";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly is_fave: {
                            readonly title: "Is";
                        };
                        readonly in_cart: {
                            readonly title: "In";
                        };
                        readonly cart_price: {
                            readonly title: "Cart";
                        };
                        readonly canResellItem: {
                            readonly title: "Can Resell Item";
                            readonly type: "boolean";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "number";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                                readonly cancelledReason: {
                                    readonly title: "Cancelled Reason";
                                    readonly type: "string";
                                };
                                readonly cancelledReasonPhrase: {
                                    readonly title: "Cancelled Reason Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewItemViews: {
                            readonly title: "Can View Item Views";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly copyFormatData: {
                            readonly title: "Copy Format Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly title_link: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly login_data: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly full: {
                                    readonly title: "Full";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title_link", "login_data", "full"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly display_icon_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly uniq_banner: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly priceWithSellerFeeLabel: {
                            readonly title: "Price With Seller Fee Label";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly imagePreviewLinks: {
                            readonly title: "Image Preview Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly canChangeEmailPassword: {
                            readonly title: "Can Change Email Password";
                            readonly type: "boolean";
                        };
                        readonly uniqueKeyExists: {
                            readonly title: "Unique Key Exists";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1234567890": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1234567890"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "object";
                            readonly properties: {
                                readonly _4: {
                                    readonly title: "";
                                    readonly type: "string";
                                };
                                readonly allowSelfUnban: {
                                    readonly title: "Allow Self Unban";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly ban_reason: {
                                    readonly title: "Ban";
                                    readonly type: "string";
                                };
                                readonly discord: {
                                    readonly title: "Discord";
                                    readonly type: "string";
                                };
                                readonly github: {
                                    readonly title: "Github";
                                    readonly type: "string";
                                };
                                readonly jabber: {
                                    readonly title: "Jabber";
                                    readonly type: "string";
                                };
                                readonly lztUnbanAmount: {
                                    readonly title: "Lzt Unban Amount";
                                    readonly type: "string";
                                };
                                readonly steam: {
                                    readonly title: "Steam";
                                    readonly type: "string";
                                };
                                readonly telegram: {
                                    readonly title: "Telegram";
                                    readonly type: "string";
                                };
                                readonly vk: {
                                    readonly title: "Vk";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceValue: {
                                        readonly title: "Price Value";
                                        readonly type: "number";
                                    };
                                };
                                readonly required: readonly ["currency", "price", "priceValue"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly nextAllowedBumpDate: {
                                    readonly title: "Next Allowed Bump Date";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly canShareItem: {
                            readonly title: "Can Share Item";
                            readonly type: "boolean";
                        };
                        readonly canCheckAiPrice: {
                            readonly title: "Can Check Ai Price";
                            readonly type: "boolean";
                        };
                        readonly aiPrice: {
                            readonly title: "Ai Price";
                            readonly type: "integer";
                        };
                        readonly aiPriceCheckDate: {
                            readonly title: "Ai Price Check Date";
                            readonly type: "integer";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canCheckAutoBuyPrice: {
                            readonly title: "Can Check Auto Buy Price";
                            readonly type: "boolean";
                        };
                        readonly autoBuyPrice: {
                            readonly title: "Auto Buy Price";
                            readonly type: "integer";
                        };
                        readonly autoBuyPriceCheckDate: {
                            readonly title: "Auto Buy Price Check Date";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly effective_last_activity: {
                                    readonly title: "Effective";
                                    readonly type: "integer";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                                readonly contacts: {
                                    readonly title: "Contacts";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly ban_reason: {
                                            readonly title: "Ban";
                                            readonly type: "string";
                                        };
                                        readonly telegram: {
                                            readonly title: "Telegram";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["ban_reason", "telegram"];
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly codeData: {
                    readonly title: "CodeData";
                    readonly required: readonly ["code", "date", "textPlain"];
                    readonly type: "object";
                    readonly properties: {
                        readonly code: {
                            readonly title: "Code";
                            readonly type: "string";
                        };
                        readonly date: {
                            readonly title: "Date";
                            readonly type: "integer";
                        };
                        readonly textPlain: {
                            readonly title: "Textplain";
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Market Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "default";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingFavorite: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingGet: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly parse_same_item_ids: {
                    readonly title: "Parse Same Item Ids";
                    readonly type: "boolean";
                    readonly description: "Parse same item ids.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["item", "canStickItem", "canUnstickItem", "canBuyItem", "cannotBuyItemError", "canCloseItem", "canOpenItem", "canReportItem", "canEditItem", "canDeleteItem", "canCancelConfirmedBuy", "canViewItemHistory", "faveCount", "isVisibleItem", "canViewLoginData", "showToFavouritesButton", "itemLink", "canChangeOwner", "sameItemsIds", "sameItemsCount", "system_info"];
            readonly properties: {
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly pending_deletion_date: {
                            readonly title: "Pending";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly note_text: {
                            readonly title: "Note";
                            readonly type: "string";
                        };
                        readonly content_type: {
                            readonly title: "Content";
                        };
                        readonly content_id: {
                            readonly title: "Content";
                        };
                        readonly delete_date: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_user_id: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_username: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly delete_reason: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_display_icon_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_uniq_banner: {
                            readonly title: "Buyer";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly is_fave: {
                            readonly title: "Is";
                        };
                        readonly in_cart: {
                            readonly title: "In";
                        };
                        readonly cart_price: {
                            readonly title: "Cart";
                        };
                        readonly canResellItem: {
                            readonly title: "Can Resell Item";
                            readonly type: "boolean";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "number";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                                readonly cancelledReason: {
                                    readonly title: "Cancelled Reason";
                                    readonly type: "string";
                                };
                                readonly cancelledReasonPhrase: {
                                    readonly title: "Cancelled Reason Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewItemViews: {
                            readonly title: "Can View Item Views";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly copyFormatData: {
                            readonly title: "Copy Format Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly title_link: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly login_data: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly full: {
                                    readonly title: "Full";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title_link", "login_data", "full"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly display_icon_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly uniq_banner: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly priceWithSellerFeeLabel: {
                            readonly title: "Price With Seller Fee Label";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly imagePreviewLinks: {
                            readonly title: "Image Preview Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly canChangeEmailPassword: {
                            readonly title: "Can Change Email Password";
                            readonly type: "boolean";
                        };
                        readonly uniqueKeyExists: {
                            readonly title: "Unique Key Exists";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1234567890": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1234567890"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "object";
                            readonly properties: {
                                readonly _4: {
                                    readonly title: "";
                                    readonly type: "string";
                                };
                                readonly allowSelfUnban: {
                                    readonly title: "Allow Self Unban";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly ban_reason: {
                                    readonly title: "Ban";
                                    readonly type: "string";
                                };
                                readonly discord: {
                                    readonly title: "Discord";
                                    readonly type: "string";
                                };
                                readonly github: {
                                    readonly title: "Github";
                                    readonly type: "string";
                                };
                                readonly jabber: {
                                    readonly title: "Jabber";
                                    readonly type: "string";
                                };
                                readonly lztUnbanAmount: {
                                    readonly title: "Lzt Unban Amount";
                                    readonly type: "string";
                                };
                                readonly steam: {
                                    readonly title: "Steam";
                                    readonly type: "string";
                                };
                                readonly telegram: {
                                    readonly title: "Telegram";
                                    readonly type: "string";
                                };
                                readonly vk: {
                                    readonly title: "Vk";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceValue: {
                                        readonly title: "Price Value";
                                        readonly type: "number";
                                    };
                                };
                                readonly required: readonly ["currency", "price", "priceValue"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly nextAllowedBumpDate: {
                                    readonly title: "Next Allowed Bump Date";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly canShareItem: {
                            readonly title: "Can Share Item";
                            readonly type: "boolean";
                        };
                        readonly canCheckAiPrice: {
                            readonly title: "Can Check Ai Price";
                            readonly type: "boolean";
                        };
                        readonly aiPrice: {
                            readonly title: "Ai Price";
                            readonly type: "integer";
                        };
                        readonly aiPriceCheckDate: {
                            readonly title: "Ai Price Check Date";
                            readonly type: "integer";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canCheckAutoBuyPrice: {
                            readonly title: "Can Check Auto Buy Price";
                            readonly type: "boolean";
                        };
                        readonly autoBuyPrice: {
                            readonly title: "Auto Buy Price";
                            readonly type: "integer";
                        };
                        readonly autoBuyPriceCheckDate: {
                            readonly title: "Auto Buy Price Check Date";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly effective_last_activity: {
                                    readonly title: "Effective";
                                    readonly type: "integer";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                                readonly contacts: {
                                    readonly title: "Contacts";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly ban_reason: {
                                            readonly title: "Ban";
                                            readonly type: "string";
                                        };
                                        readonly telegram: {
                                            readonly title: "Telegram";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["ban_reason", "telegram"];
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly canStickItem: {
                    readonly title: "Can Stick Item";
                    readonly type: "boolean";
                };
                readonly canUnstickItem: {
                    readonly title: "Can Unstick Item";
                    readonly type: "boolean";
                };
                readonly canBuyItem: {
                    readonly title: "Can Buy Item";
                    readonly type: "boolean";
                };
                readonly cannotBuyItemError: {
                    readonly title: "Cannot Buy Item Error";
                    readonly type: "string";
                };
                readonly canCloseItem: {
                    readonly title: "Can Close Item";
                    readonly type: "boolean";
                };
                readonly canOpenItem: {
                    readonly title: "Can Open Item";
                    readonly type: "boolean";
                };
                readonly canReportItem: {
                    readonly title: "Can Report Item";
                    readonly type: "boolean";
                };
                readonly canEditItem: {
                    readonly title: "Can Edit Item";
                    readonly type: "boolean";
                };
                readonly canDeleteItem: {
                    readonly title: "Can Delete Item";
                    readonly type: "boolean";
                };
                readonly canCancelConfirmedBuy: {
                    readonly title: "Can Cancel Confirmed Buy";
                    readonly type: "boolean";
                };
                readonly canViewItemHistory: {
                    readonly title: "Can View Item History";
                    readonly type: "boolean";
                };
                readonly faveCount: {
                    readonly title: "Fave Count";
                    readonly type: "boolean";
                };
                readonly isVisibleItem: {
                    readonly title: "Is Visible Item";
                    readonly type: "boolean";
                };
                readonly canViewLoginData: {
                    readonly title: "Can View Login Data";
                    readonly type: "boolean";
                };
                readonly showToFavouritesButton: {
                    readonly title: "Show To Favourites Button";
                    readonly type: "boolean";
                };
                readonly itemLink: {
                    readonly title: "Item Link";
                    readonly type: "string";
                };
                readonly canChangeOwner: {
                    readonly title: "Can Change Owner";
                    readonly type: "boolean";
                };
                readonly sameItemsIds: {
                    readonly title: "Same Items Ids";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                };
                readonly sameItemsCount: {
                    readonly title: "Same Items Count";
                    readonly type: "integer";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingGetLetters2: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "item_id";
                    readonly type: "integer";
                    readonly description: "Item id. Allows to return letters only from the sender of the selected account category.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email_password: {
                    readonly title: "Email Password";
                    readonly type: "string";
                    readonly description: "Email login data (email:password format). Required if both *email* and *password* are not provided.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email: {
                    readonly title: "Email";
                    readonly type: "string";
                    readonly description: "Email. Required if *email_password* is not provided.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly password: {
                    readonly title: "Password";
                    readonly type: "string";
                    readonly description: "Password. Required if *email_password* is not provided.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly limit: {
                    readonly title: "Limit";
                    readonly type: "integer";
                    readonly format: "uint";
                    readonly description: "Number of letters to return.";
                    readonly minimum: 10;
                    readonly maximum: 50;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["email", "letters", "system_info"];
            readonly properties: {
                readonly email: {
                    readonly title: "Email";
                    readonly type: "string";
                };
                readonly letters: {
                    readonly title: "Letters";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly textHtml: {
                                readonly title: "Text Html";
                                readonly type: "string";
                            };
                            readonly textPlain: {
                                readonly title: "Text Plain";
                                readonly type: "string";
                            };
                            readonly from: {
                                readonly title: "From";
                                readonly type: "string";
                            };
                            readonly date: {
                                readonly title: "Date";
                                readonly type: "integer";
                            };
                        };
                        readonly required: readonly ["textHtml", "textPlain", "from", "date"];
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Market Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "default";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingImage: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly enum: readonly ["skins", "pickaxes", "dances", "gliders", "weapons", "agents", "buddies"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Type of image.";
                };
            };
            readonly required: readonly ["type"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["base64", "system_info"];
            readonly properties: {
                readonly base64: {
                    readonly title: "Base";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingNote: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly text: {
                readonly type: "string";
                readonly description: "Text of note.";
                readonly title: "Text";
            };
        };
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingOpen: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingRefuseGuarantee: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamInventoryValue: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly app_id: {
                    readonly title: "App Id";
                    readonly type: "integer";
                    readonly description: "Application id.";
                    readonly "x-enumDescriptions": {
                        readonly "440": "Team Fortress 2";
                        readonly "570": "Dota 2";
                        readonly "730": "CS2";
                        readonly "753": "Steam";
                        readonly "232090": "Killing Floor 2";
                        readonly "252490": "Rust";
                        readonly "304930": "Unturned";
                        readonly "322330": "Don't Starve Together";
                        readonly "578080": "PUBG";
                    };
                    readonly enum: readonly [730, 578080, 753, 570, 440, 252490, 304930, 232090, 322330];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the inventory value will be returned";
                };
                readonly ignore_cache: {
                    readonly title: "Ignore Cache";
                    readonly type: "boolean";
                    readonly description: "Ignore cache.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly query: {
                    readonly title: "Query";
                    readonly type: "string";
                };
                readonly data: {
                    readonly title: "Data";
                    readonly type: "object";
                    readonly properties: {
                        readonly items: {
                            readonly title: "Items";
                            readonly type: "object";
                            readonly properties: {
                                readonly "0": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly classid: {
                                            readonly title: "Classid";
                                            readonly type: "string";
                                        };
                                        readonly tradable: {
                                            readonly title: "Tradable";
                                            readonly type: "integer";
                                        };
                                        readonly marketable: {
                                            readonly title: "Marketable";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly title: "Image";
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly price: {
                                            readonly title: "Price";
                                            readonly type: "number";
                                        };
                                        readonly count: {
                                            readonly title: "Count";
                                            readonly type: "integer";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                        readonly market_hash_name: {
                                            readonly title: "Market";
                                            readonly type: "string";
                                        };
                                        readonly fraudwarnings: {
                                            readonly title: "Fraudwarnings";
                                        };
                                        readonly stickers: {
                                            readonly title: "Stickers";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly stickerCount: {
                                                    readonly title: "Sticker count";
                                                    readonly type: "integer";
                                                };
                                                readonly count: {
                                                    readonly title: "Count";
                                                    readonly type: "integer";
                                                };
                                                readonly images: {
                                                    readonly title: "Images";
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly title: {
                                                    readonly title: "Title";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["stickerCount", "count", "images", "title"];
                                        };
                                    };
                                    readonly required: readonly ["classid", "tradable", "marketable", "image_url", "title", "price", "count", "type", "market_hash_name", "fraudwarnings", "stickers"];
                                };
                            };
                        };
                        readonly steam_id: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly appId: {
                            readonly title: "App id";
                            readonly type: "integer";
                        };
                        readonly appTitle: {
                            readonly title: "App title";
                            readonly type: "string";
                        };
                        readonly totalValue: {
                            readonly title: "Total value";
                            readonly type: "number";
                        };
                        readonly itemCount: {
                            readonly title: "Item count";
                            readonly type: "integer";
                        };
                        readonly marketableItemCount: {
                            readonly title: "Marketable item count";
                            readonly type: "integer";
                        };
                        readonly currency: {
                            readonly title: "Currency";
                            readonly type: "string";
                        };
                        readonly currencyIcon: {
                            readonly title: "Currency icon";
                            readonly type: "string";
                        };
                        readonly language: {
                            readonly title: "Language";
                            readonly type: "string";
                        };
                        readonly time: {
                            readonly title: "Time";
                            readonly type: "integer";
                        };
                    };
                    readonly required: readonly ["items", "steam_id", "appId", "appTitle", "totalValue", "itemCount", "marketableItemCount", "currency", "currencyIcon", "language", "time"];
                };
                readonly appId: {
                    readonly title: "App id";
                    readonly type: "integer";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamMafile: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["maFile", "system_info"];
            readonly properties: {
                readonly maFile: {
                    readonly title: "Ma File";
                    readonly type: "object";
                    readonly properties: {
                        readonly shared_secret: {
                            readonly title: "Shared";
                            readonly type: "string";
                        };
                        readonly serial_number: {
                            readonly title: "Serial";
                            readonly type: "integer";
                        };
                        readonly revocation_code: {
                            readonly title: "Revocation";
                            readonly type: "string";
                        };
                        readonly uri: {
                            readonly title: "Uri";
                            readonly type: "string";
                        };
                        readonly account_name: {
                            readonly title: "Account";
                            readonly type: "string";
                        };
                        readonly token_gid: {
                            readonly title: "Token";
                            readonly type: "string";
                        };
                        readonly identity_secret: {
                            readonly title: "Identity";
                            readonly type: "string";
                        };
                        readonly secret_1: {
                            readonly title: "Secret";
                            readonly type: "string";
                        };
                        readonly device_id: {
                            readonly title: "Device";
                            readonly type: "string";
                        };
                        readonly fully_enrolled: {
                            readonly title: "Fully";
                            readonly type: "boolean";
                        };
                        readonly Session: {
                            readonly title: "Session";
                            readonly type: "object";
                            readonly properties: {
                                readonly SessionID: {
                                    readonly title: "Session Id";
                                    readonly type: "string";
                                };
                                readonly AccessToken: {
                                    readonly title: "Access Token";
                                    readonly type: "string";
                                };
                                readonly RefreshToken: {
                                    readonly title: "Refresh Token";
                                    readonly type: "string";
                                };
                                readonly SteamID: {
                                    readonly title: "Steam Id";
                                    readonly type: "string";
                                };
                                readonly SteamLoginSecure: {
                                    readonly title: "Steam Login Secure";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["SessionID", "AccessToken", "RefreshToken", "SteamID", "SteamLoginSecure"];
                        };
                    };
                    readonly required: readonly ["shared_secret", "serial_number", "revocation_code", "uri", "account_name", "token_gid", "identity_secret", "secret_1", "device_id", "fully_enrolled", "Session"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamMafileCode: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "ConfCodeModel";
            readonly required: readonly ["codeData", "item"];
            readonly type: "object";
            readonly properties: {
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly pending_deletion_date: {
                            readonly title: "Pending";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly note_text: {
                            readonly title: "Note";
                            readonly type: "string";
                        };
                        readonly content_type: {
                            readonly title: "Content";
                        };
                        readonly content_id: {
                            readonly title: "Content";
                        };
                        readonly delete_date: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_user_id: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_username: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly delete_reason: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_display_icon_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_uniq_banner: {
                            readonly title: "Buyer";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly is_fave: {
                            readonly title: "Is";
                        };
                        readonly in_cart: {
                            readonly title: "In";
                        };
                        readonly cart_price: {
                            readonly title: "Cart";
                        };
                        readonly canResellItem: {
                            readonly title: "Can Resell Item";
                            readonly type: "boolean";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "number";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                                readonly cancelledReason: {
                                    readonly title: "Cancelled Reason";
                                    readonly type: "string";
                                };
                                readonly cancelledReasonPhrase: {
                                    readonly title: "Cancelled Reason Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewItemViews: {
                            readonly title: "Can View Item Views";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly copyFormatData: {
                            readonly title: "Copy Format Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly title_link: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly login_data: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly full: {
                                    readonly title: "Full";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title_link", "login_data", "full"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly display_icon_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly uniq_banner: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly priceWithSellerFeeLabel: {
                            readonly title: "Price With Seller Fee Label";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly imagePreviewLinks: {
                            readonly title: "Image Preview Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly canChangeEmailPassword: {
                            readonly title: "Can Change Email Password";
                            readonly type: "boolean";
                        };
                        readonly uniqueKeyExists: {
                            readonly title: "Unique Key Exists";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1234567890": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1234567890"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "object";
                            readonly properties: {
                                readonly _4: {
                                    readonly title: "";
                                    readonly type: "string";
                                };
                                readonly allowSelfUnban: {
                                    readonly title: "Allow Self Unban";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly ban_reason: {
                                    readonly title: "Ban";
                                    readonly type: "string";
                                };
                                readonly discord: {
                                    readonly title: "Discord";
                                    readonly type: "string";
                                };
                                readonly github: {
                                    readonly title: "Github";
                                    readonly type: "string";
                                };
                                readonly jabber: {
                                    readonly title: "Jabber";
                                    readonly type: "string";
                                };
                                readonly lztUnbanAmount: {
                                    readonly title: "Lzt Unban Amount";
                                    readonly type: "string";
                                };
                                readonly steam: {
                                    readonly title: "Steam";
                                    readonly type: "string";
                                };
                                readonly telegram: {
                                    readonly title: "Telegram";
                                    readonly type: "string";
                                };
                                readonly vk: {
                                    readonly title: "Vk";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceValue: {
                                        readonly title: "Price Value";
                                        readonly type: "number";
                                    };
                                };
                                readonly required: readonly ["currency", "price", "priceValue"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly nextAllowedBumpDate: {
                                    readonly title: "Next Allowed Bump Date";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly canShareItem: {
                            readonly title: "Can Share Item";
                            readonly type: "boolean";
                        };
                        readonly canCheckAiPrice: {
                            readonly title: "Can Check Ai Price";
                            readonly type: "boolean";
                        };
                        readonly aiPrice: {
                            readonly title: "Ai Price";
                            readonly type: "integer";
                        };
                        readonly aiPriceCheckDate: {
                            readonly title: "Ai Price Check Date";
                            readonly type: "integer";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canCheckAutoBuyPrice: {
                            readonly title: "Can Check Auto Buy Price";
                            readonly type: "boolean";
                        };
                        readonly autoBuyPrice: {
                            readonly title: "Auto Buy Price";
                            readonly type: "integer";
                        };
                        readonly autoBuyPriceCheckDate: {
                            readonly title: "Auto Buy Price Check Date";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly effective_last_activity: {
                                    readonly title: "Effective";
                                    readonly type: "integer";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                                readonly contacts: {
                                    readonly title: "Contacts";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly ban_reason: {
                                            readonly title: "Ban";
                                            readonly type: "string";
                                        };
                                        readonly telegram: {
                                            readonly title: "Telegram";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["ban_reason", "telegram"];
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly codeData: {
                    readonly title: "CodeData";
                    readonly required: readonly ["code", "date", "textPlain"];
                    readonly type: "object";
                    readonly properties: {
                        readonly code: {
                            readonly title: "Code";
                            readonly type: "string";
                        };
                        readonly date: {
                            readonly title: "Date";
                            readonly type: "integer";
                        };
                        readonly textPlain: {
                            readonly title: "Textplain";
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamPreview: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly title: "Type";
                    readonly type: "string";
                    readonly description: "Type of page.";
                    readonly enum: readonly ["profiles", "games"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "string";
            readonly description: "Steam account html code.";
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamRemoveMafile: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["status", "item", "system_info"];
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                };
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly proxy_id: {
                            readonly title: "Proxy";
                            readonly type: "integer";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly category_title: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly category_url: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly require_temp_email: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly available_temp_email: {
                            readonly title: "Available";
                            readonly type: "integer";
                        };
                        readonly check_button_enabled: {
                            readonly title: "Check";
                            readonly type: "integer";
                        };
                        readonly checker_enabled: {
                            readonly title: "Checker";
                            readonly type: "integer";
                        };
                        readonly buy_without_validation: {
                            readonly title: "Buy";
                            readonly type: "integer";
                        };
                        readonly has_guarantee: {
                            readonly title: "Has";
                            readonly type: "integer";
                        };
                        readonly require_video_recording: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly can_be_resold: {
                            readonly title: "Can";
                            readonly type: "integer";
                        };
                        readonly login_type: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly require_email_login_data: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly category_prefix_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly steam_item_id: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_id: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_country: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_register_date: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_last_activity: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_games: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_full_games: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_community_ban: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_bans: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_cs2_profile_rank: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_balance: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_cs2_rank_id: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_is_limited: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_level: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_friend_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_data: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_cs2_last_activity: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_dota2_solo_mmr: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cs2_ban_date: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_converted_balance: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cards_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cards_games: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_pubg_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cs2_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_dota2_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_tf2_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_rust_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cs2_wingman_rank_id: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_game_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_steam_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cs2_medals: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_cs2_win_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_dota2_game_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_dota2_lose_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_dota2_win_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_hours_played_recently: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_faceit_level: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_points: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_transactions: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_last_transaction_date: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_relevant_game_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_gift_count: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_gifts: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_limit_spent: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_dota2_behavior: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_trust_factor: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_mfa: {
                            readonly title: "Steam";
                            readonly type: "boolean";
                        };
                        readonly steam_mfa_file: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_refresh_token: {
                            readonly title: "Steam";
                        };
                        readonly steam_market: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_market_restrictions: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_market_ban_end_date: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_unturned_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cs2_last_launched: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_kf2_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_dst_inv_value: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cs2_premier_elo: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_has_activated_keys: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_cs2_ban_type: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_external_accounts: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly steam_rust_kill_player: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_rust_deaths: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_total_gifts_rub: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_total_refunds_rub: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_total_ingame_rub: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_total_games_rub: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_total_purchased_rub: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly steam_dota2_last_match_date: {
                            readonly title: "Steam";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "proxy_id", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "category_title", "category_url", "require_temp_email", "available_temp_email", "check_button_enabled", "checker_enabled", "buy_without_validation", "has_guarantee", "require_video_recording", "can_be_resold", "login_type", "require_email_login_data", "category_prefix_id", "steam_item_id", "steam_id", "steam_country", "steam_register_date", "steam_last_activity", "steam_games", "steam_full_games", "steam_community_ban", "steam_bans", "steam_cs2_profile_rank", "steam_balance", "steam_cs2_rank_id", "steam_is_limited", "steam_level", "steam_friend_count", "steam_data", "steam_cs2_last_activity", "steam_dota2_solo_mmr", "steam_cs2_ban_date", "steam_converted_balance", "steam_cards_count", "steam_cards_games", "steam_pubg_inv_value", "steam_cs2_inv_value", "steam_dota2_inv_value", "steam_tf2_inv_value", "steam_rust_inv_value", "steam_cs2_wingman_rank_id", "steam_game_count", "steam_steam_inv_value", "steam_inv_value", "steam_cs2_medals", "steam_cs2_win_count", "steam_dota2_game_count", "steam_dota2_lose_count", "steam_dota2_win_count", "steam_hours_played_recently", "steam_faceit_level", "steam_points", "steam_transactions", "steam_last_transaction_date", "steam_relevant_game_count", "steam_gift_count", "steam_gifts", "steam_limit_spent", "steam_dota2_behavior", "steam_trust_factor", "steam_mfa", "steam_mfa_file", "steam_refresh_token", "steam_market", "steam_market_restrictions", "steam_market_ban_end_date", "steam_unturned_inv_value", "steam_cs2_last_launched", "steam_kf2_inv_value", "steam_dst_inv_value", "steam_cs2_premier_elo", "steam_has_activated_keys", "steam_cs2_ban_type", "steam_external_accounts", "steam_rust_kill_player", "steam_rust_deaths", "steam_total_gifts_rub", "steam_total_refunds_rub", "steam_total_ingame_rub", "steam_total_games_rub", "steam_total_purchased_rub", "steam_dota2_last_match_date", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamSda: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly description: "Confirmation id. (Required along with **nonce** if you want to confirm action).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly nonce: {
                    readonly type: "integer";
                    readonly description: "Confirmation nonce. (Required along with **id** if you want to confirm action).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamUpdateValue: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly all: {
                    readonly title: "All";
                    readonly type: "boolean";
                    readonly description: "Update the entire Steam inventory.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly app_id: {
                    readonly title: "App Id";
                    readonly type: "integer";
                    readonly description: "Application id.";
                    readonly "x-enumDescriptions": {
                        readonly "440": "Team Fortress 2";
                        readonly "570": "Dota 2";
                        readonly "730": "CS2";
                        readonly "753": "Steam";
                        readonly "232090": "Killing Floor 2";
                        readonly "252490": "Rust";
                        readonly "304930": "Unturned";
                        readonly "322330": "Don't Starve Together";
                        readonly "578080": "PUBG";
                    };
                    readonly enum: readonly [730, 578080, 753, 570, 440, 252490, 304930, 232090, 322330];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly authorize: {
                    readonly title: "Authorize";
                    readonly type: "boolean";
                    readonly description: "Parse inventory when authorized (Parse trade banned items).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "Update Inventory Value 200";
            readonly required: readonly ["status", "item", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly pending_deletion_date: {
                            readonly title: "Pending";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly note_text: {
                            readonly title: "Note";
                            readonly type: "string";
                        };
                        readonly content_type: {
                            readonly title: "Content";
                        };
                        readonly content_id: {
                            readonly title: "Content";
                        };
                        readonly delete_date: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_user_id: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_username: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly delete_reason: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_display_icon_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_uniq_banner: {
                            readonly title: "Buyer";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly is_fave: {
                            readonly title: "Is";
                        };
                        readonly in_cart: {
                            readonly title: "In";
                        };
                        readonly cart_price: {
                            readonly title: "Cart";
                        };
                        readonly canResellItem: {
                            readonly title: "Can Resell Item";
                            readonly type: "boolean";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "number";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                                readonly cancelledReason: {
                                    readonly title: "Cancelled Reason";
                                    readonly type: "string";
                                };
                                readonly cancelledReasonPhrase: {
                                    readonly title: "Cancelled Reason Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewItemViews: {
                            readonly title: "Can View Item Views";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly copyFormatData: {
                            readonly title: "Copy Format Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly title_link: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly login_data: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly full: {
                                    readonly title: "Full";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title_link", "login_data", "full"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly display_icon_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly uniq_banner: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly priceWithSellerFeeLabel: {
                            readonly title: "Price With Seller Fee Label";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly imagePreviewLinks: {
                            readonly title: "Image Preview Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly canChangeEmailPassword: {
                            readonly title: "Can Change Email Password";
                            readonly type: "boolean";
                        };
                        readonly uniqueKeyExists: {
                            readonly title: "Unique Key Exists";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1234567890": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1234567890"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "object";
                            readonly properties: {
                                readonly _4: {
                                    readonly title: "";
                                    readonly type: "string";
                                };
                                readonly allowSelfUnban: {
                                    readonly title: "Allow Self Unban";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly ban_reason: {
                                    readonly title: "Ban";
                                    readonly type: "string";
                                };
                                readonly discord: {
                                    readonly title: "Discord";
                                    readonly type: "string";
                                };
                                readonly github: {
                                    readonly title: "Github";
                                    readonly type: "string";
                                };
                                readonly jabber: {
                                    readonly title: "Jabber";
                                    readonly type: "string";
                                };
                                readonly lztUnbanAmount: {
                                    readonly title: "Lzt Unban Amount";
                                    readonly type: "string";
                                };
                                readonly steam: {
                                    readonly title: "Steam";
                                    readonly type: "string";
                                };
                                readonly telegram: {
                                    readonly title: "Telegram";
                                    readonly type: "string";
                                };
                                readonly vk: {
                                    readonly title: "Vk";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceValue: {
                                        readonly title: "Price Value";
                                        readonly type: "number";
                                    };
                                };
                                readonly required: readonly ["currency", "price", "priceValue"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly nextAllowedBumpDate: {
                                    readonly title: "Next Allowed Bump Date";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly canShareItem: {
                            readonly title: "Can Share Item";
                            readonly type: "boolean";
                        };
                        readonly canCheckAiPrice: {
                            readonly title: "Can Check Ai Price";
                            readonly type: "boolean";
                        };
                        readonly aiPrice: {
                            readonly title: "Ai Price";
                            readonly type: "integer";
                        };
                        readonly aiPriceCheckDate: {
                            readonly title: "Ai Price Check Date";
                            readonly type: "integer";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canCheckAutoBuyPrice: {
                            readonly title: "Can Check Auto Buy Price";
                            readonly type: "boolean";
                        };
                        readonly autoBuyPrice: {
                            readonly title: "Auto Buy Price";
                            readonly type: "integer";
                        };
                        readonly autoBuyPriceCheckDate: {
                            readonly title: "Auto Buy Price Check Date";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly effective_last_activity: {
                                    readonly title: "Effective";
                                    readonly type: "integer";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                                readonly contacts: {
                                    readonly title: "Contacts";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly ban_reason: {
                                            readonly title: "Ban";
                                            readonly type: "string";
                                        };
                                        readonly telegram: {
                                            readonly title: "Telegram";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["ban_reason", "telegram"];
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingSteamValue: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly link: {
                    readonly title: "Link";
                    readonly type: "string";
                    readonly description: "Link or id of account. Can be [**https://lzt.market/{item-id}/**, **https://steamcommunity.com/id/{steam-name}**, **https://steamcommunity.com/profiles/{steam-id}**, **{steam-id}**].";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly app_id: {
                    readonly title: "App Id";
                    readonly type: "integer";
                    readonly description: "Application id.";
                    readonly "x-enumDescriptions": {
                        readonly "440": "Team Fortress 2";
                        readonly "570": "Dota 2";
                        readonly "730": "CS2";
                        readonly "753": "Steam";
                        readonly "232090": "Killing Floor 2";
                        readonly "252490": "Rust";
                        readonly "304930": "Unturned";
                        readonly "322330": "Don't Starve Together";
                        readonly "578080": "PUBG";
                    };
                    readonly enum: readonly [730, 578080, 753, 570, 440, 252490, 304930, 232090, 322330];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency in which the inventory value will be returned";
                };
                readonly ignore_cache: {
                    readonly title: "Ignore Cache";
                    readonly type: "boolean";
                    readonly description: "Ignore cache.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["link"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly query: {
                    readonly title: "Query";
                    readonly type: "string";
                };
                readonly data: {
                    readonly title: "Data";
                    readonly type: "object";
                    readonly properties: {
                        readonly items: {
                            readonly title: "Items";
                            readonly type: "object";
                            readonly properties: {
                                readonly "0": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly classid: {
                                            readonly title: "Classid";
                                            readonly type: "string";
                                        };
                                        readonly tradable: {
                                            readonly title: "Tradable";
                                            readonly type: "integer";
                                        };
                                        readonly marketable: {
                                            readonly title: "Marketable";
                                            readonly type: "integer";
                                        };
                                        readonly image_url: {
                                            readonly title: "Image";
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly price: {
                                            readonly title: "Price";
                                            readonly type: "number";
                                        };
                                        readonly count: {
                                            readonly title: "Count";
                                            readonly type: "integer";
                                        };
                                        readonly type: {
                                            readonly title: "Type";
                                            readonly type: "string";
                                        };
                                        readonly market_hash_name: {
                                            readonly title: "Market";
                                            readonly type: "string";
                                        };
                                        readonly fraudwarnings: {
                                            readonly title: "Fraudwarnings";
                                        };
                                        readonly stickers: {
                                            readonly title: "Stickers";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly stickerCount: {
                                                    readonly title: "Sticker count";
                                                    readonly type: "integer";
                                                };
                                                readonly count: {
                                                    readonly title: "Count";
                                                    readonly type: "integer";
                                                };
                                                readonly images: {
                                                    readonly title: "Images";
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly title: {
                                                    readonly title: "Title";
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["stickerCount", "count", "images", "title"];
                                        };
                                    };
                                    readonly required: readonly ["classid", "tradable", "marketable", "image_url", "title", "price", "count", "type", "market_hash_name", "fraudwarnings", "stickers"];
                                };
                            };
                        };
                        readonly steam_id: {
                            readonly title: "Steam";
                            readonly type: "string";
                        };
                        readonly appId: {
                            readonly title: "App id";
                            readonly type: "integer";
                        };
                        readonly appTitle: {
                            readonly title: "App title";
                            readonly type: "string";
                        };
                        readonly totalValue: {
                            readonly title: "Total value";
                            readonly type: "number";
                        };
                        readonly itemCount: {
                            readonly title: "Item count";
                            readonly type: "integer";
                        };
                        readonly marketableItemCount: {
                            readonly title: "Marketable item count";
                            readonly type: "integer";
                        };
                        readonly currency: {
                            readonly title: "Currency";
                            readonly type: "string";
                        };
                        readonly currencyIcon: {
                            readonly title: "Currency icon";
                            readonly type: "string";
                        };
                        readonly language: {
                            readonly title: "Language";
                            readonly type: "string";
                        };
                        readonly time: {
                            readonly title: "Time";
                            readonly type: "integer";
                        };
                    };
                    readonly required: readonly ["items", "steam_id", "appId", "appTitle", "totalValue", "itemCount", "marketableItemCount", "currency", "currencyIcon", "language", "time"];
                };
                readonly appId: {
                    readonly title: "App id";
                    readonly type: "integer";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingStick: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingTag: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly tag_id: {
                    readonly title: "Tag ID";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Tag ID.";
                };
            };
            readonly required: readonly ["tag_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly required: readonly ["addedTagId", "deleteTags", "itemId", "system_info", "tag"];
            readonly type: "object";
            readonly properties: {
                readonly itemId: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                };
                readonly tag: {
                    readonly title: "Tag";
                    readonly required: readonly ["bc", "forOwnedAccountsOnly", "isDefault", "tag_id", "title"];
                    readonly type: "object";
                    readonly properties: {
                        readonly tag_id: {
                            readonly title: "Tag Id";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly isDefault: {
                            readonly title: "Isdefault";
                            readonly type: "boolean";
                        };
                        readonly forOwnedAccountsOnly: {
                            readonly title: "Forownedaccountsonly";
                            readonly type: "boolean";
                        };
                        readonly bc: {
                            readonly title: "Bc";
                            readonly type: "string";
                        };
                    };
                };
                readonly addedTagId: {
                    readonly title: "Addedtagid";
                    readonly type: "integer";
                };
                readonly deleteTags: {
                    readonly title: "Deletetags";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Tag Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "The requested tag could not be found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingTelegramCode: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "TgCodeModel";
            readonly required: readonly ["codes", "item"];
            readonly type: "object";
            readonly properties: {
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly pending_deletion_date: {
                            readonly title: "Pending";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly note_text: {
                            readonly title: "Note";
                            readonly type: "string";
                        };
                        readonly content_type: {
                            readonly title: "Content";
                        };
                        readonly content_id: {
                            readonly title: "Content";
                        };
                        readonly delete_date: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_user_id: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_username: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly delete_reason: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_display_icon_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_uniq_banner: {
                            readonly title: "Buyer";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly is_fave: {
                            readonly title: "Is";
                        };
                        readonly in_cart: {
                            readonly title: "In";
                        };
                        readonly cart_price: {
                            readonly title: "Cart";
                        };
                        readonly canResellItem: {
                            readonly title: "Can Resell Item";
                            readonly type: "boolean";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "number";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                                readonly cancelledReason: {
                                    readonly title: "Cancelled Reason";
                                    readonly type: "string";
                                };
                                readonly cancelledReasonPhrase: {
                                    readonly title: "Cancelled Reason Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewItemViews: {
                            readonly title: "Can View Item Views";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly copyFormatData: {
                            readonly title: "Copy Format Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly title_link: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly login_data: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly full: {
                                    readonly title: "Full";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title_link", "login_data", "full"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly display_icon_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly uniq_banner: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly priceWithSellerFeeLabel: {
                            readonly title: "Price With Seller Fee Label";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly imagePreviewLinks: {
                            readonly title: "Image Preview Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly canChangeEmailPassword: {
                            readonly title: "Can Change Email Password";
                            readonly type: "boolean";
                        };
                        readonly uniqueKeyExists: {
                            readonly title: "Unique Key Exists";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1234567890": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1234567890"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "object";
                            readonly properties: {
                                readonly _4: {
                                    readonly title: "";
                                    readonly type: "string";
                                };
                                readonly allowSelfUnban: {
                                    readonly title: "Allow Self Unban";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly ban_reason: {
                                    readonly title: "Ban";
                                    readonly type: "string";
                                };
                                readonly discord: {
                                    readonly title: "Discord";
                                    readonly type: "string";
                                };
                                readonly github: {
                                    readonly title: "Github";
                                    readonly type: "string";
                                };
                                readonly jabber: {
                                    readonly title: "Jabber";
                                    readonly type: "string";
                                };
                                readonly lztUnbanAmount: {
                                    readonly title: "Lzt Unban Amount";
                                    readonly type: "string";
                                };
                                readonly steam: {
                                    readonly title: "Steam";
                                    readonly type: "string";
                                };
                                readonly telegram: {
                                    readonly title: "Telegram";
                                    readonly type: "string";
                                };
                                readonly vk: {
                                    readonly title: "Vk";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceValue: {
                                        readonly title: "Price Value";
                                        readonly type: "number";
                                    };
                                };
                                readonly required: readonly ["currency", "price", "priceValue"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly nextAllowedBumpDate: {
                                    readonly title: "Next Allowed Bump Date";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly canShareItem: {
                            readonly title: "Can Share Item";
                            readonly type: "boolean";
                        };
                        readonly canCheckAiPrice: {
                            readonly title: "Can Check Ai Price";
                            readonly type: "boolean";
                        };
                        readonly aiPrice: {
                            readonly title: "Ai Price";
                            readonly type: "integer";
                        };
                        readonly aiPriceCheckDate: {
                            readonly title: "Ai Price Check Date";
                            readonly type: "integer";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canCheckAutoBuyPrice: {
                            readonly title: "Can Check Auto Buy Price";
                            readonly type: "boolean";
                        };
                        readonly autoBuyPrice: {
                            readonly title: "Auto Buy Price";
                            readonly type: "integer";
                        };
                        readonly autoBuyPriceCheckDate: {
                            readonly title: "Auto Buy Price Check Date";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly effective_last_activity: {
                                    readonly title: "Effective";
                                    readonly type: "integer";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                                readonly contacts: {
                                    readonly title: "Contacts";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly ban_reason: {
                                            readonly title: "Ban";
                                            readonly type: "string";
                                        };
                                        readonly telegram: {
                                            readonly title: "Telegram";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["ban_reason", "telegram"];
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly codes: {
                    readonly title: "TgCodeData";
                    readonly type: "object";
                    readonly properties: {
                        readonly code: {
                            readonly title: "Code";
                            readonly type: "string";
                        };
                        readonly date: {
                            readonly title: "Date";
                            readonly type: "integer";
                        };
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingTelegramResetAuth: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingTempEmailPassword: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "TempEmailPasswordModel";
            readonly required: readonly ["item"];
            readonly type: "object";
            readonly properties: {
                readonly item: {
                    readonly title: "TempEmailPasswordItem";
                    readonly required: readonly ["account"];
                    readonly type: "object";
                    readonly properties: {
                        readonly account: {
                            readonly title: "Account";
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingTransfer: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly username: {
                    readonly title: "Username";
                    readonly type: "string";
                    readonly description: "The username of the new account owner.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly secret_answer: {
                    readonly title: "Secret Answer";
                    readonly type: "string";
                    readonly description: "Secret answer of your account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["username", "secret_answer"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingUnfavorite: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingUnstick: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ManagingUntag: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly tag_id: {
                    readonly title: "Tag ID";
                    readonly type: "integer";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Tag ID.";
                };
            };
            readonly required: readonly ["tag_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly required: readonly ["addedTagId", "deleteTags", "itemId", "system_info", "tag"];
            readonly type: "object";
            readonly properties: {
                readonly itemId: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                };
                readonly tag: {
                    readonly title: "Tag";
                    readonly required: readonly ["bc", "forOwnedAccountsOnly", "isDefault", "tag_id", "title"];
                    readonly type: "object";
                    readonly properties: {
                        readonly tag_id: {
                            readonly title: "Tag Id";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly isDefault: {
                            readonly title: "Isdefault";
                            readonly type: "boolean";
                        };
                        readonly forOwnedAccountsOnly: {
                            readonly title: "Forownedaccountsonly";
                            readonly type: "boolean";
                        };
                        readonly bc: {
                            readonly title: "Bc";
                            readonly type: "string";
                        };
                    };
                };
                readonly addedTagId: {
                    readonly title: "Addedtagid";
                    readonly type: "integer";
                };
                readonly deleteTags: {
                    readonly title: "Deletetags";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Tag Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "The requested tag could not be found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const MangingDelete: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly reason: {
                    readonly title: "Reason";
                    readonly type: "string";
                    readonly description: "Delete reason.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["reason"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsCancel: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly payment_id: {
                    readonly title: "Amount";
                    readonly type: "integer";
                    readonly description: "Payment id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["payment_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsCurrency: {
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["currencyList", "lastUpdate", "visitorCurrency", "system_info"];
            readonly properties: {
                readonly currencyList: {
                    readonly title: "Currency List";
                    readonly type: "object";
                    readonly properties: {
                        readonly BTC: {
                            readonly title: "Btc";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly ETH: {
                            readonly title: "Eth";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly BNB: {
                            readonly title: "Bnb";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly BCH: {
                            readonly title: "Bch";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly XMR: {
                            readonly title: "Xmr";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly SOL: {
                            readonly title: "Sol";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly LTC: {
                            readonly title: "Ltc";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly DASH: {
                            readonly title: "Dash";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly TON: {
                            readonly title: "Ton";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly USDT: {
                            readonly title: "Usdt";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly MATIC: {
                            readonly title: "Matic";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly TRX: {
                            readonly title: "Trx";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly DOGE: {
                            readonly title: "Doge";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly KWD: {
                            readonly title: "Kwd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly GBP: {
                            readonly title: "Gbp";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly CHF: {
                            readonly title: "Chf";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly EUR: {
                            readonly title: "Eur";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly USD: {
                            readonly title: "Usd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly SGD: {
                            readonly title: "Sgd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly CAD: {
                            readonly title: "Cad";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly AUD: {
                            readonly title: "Aud";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly NZD: {
                            readonly title: "Nzd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly BGN: {
                            readonly title: "Bgn";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly GEL: {
                            readonly title: "Gel";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly ILS: {
                            readonly title: "Ils";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly QAR: {
                            readonly title: "Qar";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly PEN: {
                            readonly title: "Pen";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly AED: {
                            readonly title: "Aed";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly SAR: {
                            readonly title: "Sar";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly PLN: {
                            readonly title: "Pln";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly MYR: {
                            readonly title: "Myr";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly RON: {
                            readonly title: "Ron";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly BRL: {
                            readonly title: "Brl";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly DKK: {
                            readonly title: "Dkk";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly CNY: {
                            readonly title: "Cny";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly HKD: {
                            readonly title: "Hkd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly SEK: {
                            readonly title: "Sek";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly NOK: {
                            readonly title: "Nok";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly ZAR: {
                            readonly title: "Zar";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly MXN: {
                            readonly title: "Mxn";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly CZK: {
                            readonly title: "Czk";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly TWD: {
                            readonly title: "Twd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly THB: {
                            readonly title: "Thb";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly TRY: {
                            readonly title: "Try";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly UAH: {
                            readonly title: "Uah";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly UYU: {
                            readonly title: "Uyu";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly PHP: {
                            readonly title: "Php";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly INR: {
                            readonly title: "Inr";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly RUB: {
                            readonly title: "Rub";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "integer";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly RSD: {
                            readonly title: "Rsd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly JPY: {
                            readonly title: "Jpy";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly HUF: {
                            readonly title: "Huf";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly KZT: {
                            readonly title: "Kzt";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly CRC: {
                            readonly title: "Crc";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly CLP: {
                            readonly title: "Clp";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly ARS: {
                            readonly title: "Ars";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly KRW: {
                            readonly title: "Krw";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly COP: {
                            readonly title: "Cop";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly IDR: {
                            readonly title: "Idr";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                        readonly VND: {
                            readonly title: "Vnd";
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly rate: {
                                    readonly title: "Rate";
                                    readonly type: "number";
                                };
                                readonly formattedRate: {
                                    readonly title: "Formatted Rate";
                                    readonly type: "string";
                                };
                                readonly symbol: {
                                    readonly title: "Symbol";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title", "rate", "formattedRate", "symbol"];
                        };
                    };
                    readonly required: readonly ["BTC", "ETH", "BNB", "BCH", "XMR", "SOL", "LTC", "DASH", "TON", "USDT", "MATIC", "TRX", "DOGE", "KWD", "GBP", "CHF", "EUR", "USD", "SGD", "CAD", "AUD", "NZD", "BGN", "GEL", "ILS", "QAR", "PEN", "AED", "SAR", "PLN", "MYR", "RON", "BRL", "DKK", "CNY", "HKD", "SEK", "NOK", "ZAR", "MXN", "CZK", "TWD", "THB", "TRY", "UAH", "UYU", "PHP", "INR", "RUB", "RSD", "JPY", "HUF", "KZT", "CRC", "CLP", "ARS", "KRW", "COP", "IDR", "VND"];
                };
                readonly lastUpdate: {
                    readonly title: "Last Update";
                    readonly type: "integer";
                };
                readonly visitorCurrency: {
                    readonly title: "Visitor Currency";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsFee: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly title: "Amount";
                    readonly type: "number";
                    readonly description: "Amount you want to send in your currency.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["commission_percentage", "spentCurrentMonth", "calculator", "system_info"];
            readonly properties: {
                readonly commission_percentage: {
                    readonly title: "Commission";
                    readonly type: "integer";
                };
                readonly spentCurrentMonth: {
                    readonly title: "Spent Current Month";
                    readonly type: "integer";
                };
                readonly calculator: {
                    readonly title: "Calculator";
                    readonly type: "object";
                    readonly properties: {
                        readonly inputAmount: {
                            readonly title: "Input Amount";
                            readonly type: "integer";
                        };
                        readonly commissionAmount: {
                            readonly title: "Commission Amount";
                            readonly type: "integer";
                        };
                        readonly totalOutputAmount: {
                            readonly title: "Total Output Amount";
                            readonly type: "integer";
                        };
                    };
                    readonly required: readonly ["inputAmount", "commissionAmount", "totalOutputAmount"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsHistory: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly title: "Type";
                    readonly type: "string";
                    readonly description: "Type of operation.";
                    readonly enum: readonly ["income", "cost", "refilled_balance", "withdrawal_balance", "paid_item", "sold_item", "money_transfer", "receiving_money", "internal_purchase", "claim_hold", "insurance_deposit", "invoice"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmin: {
                    readonly title: "Pmin";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Minimal price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly pmax: {
                    readonly title: "Pmax";
                    readonly type: "integer";
                    readonly minimum: 1;
                    readonly description: "Maximum price of account (Inclusive).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly operation_id_lt: {
                    readonly title: "Operation Id lt";
                    readonly type: "integer";
                    readonly description: "Id of the operation from which the result begins.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly receiver: {
                    readonly title: "Receiver";
                    readonly type: "string";
                    readonly description: "Username of user, which receive money from you.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly sender: {
                    readonly title: "Sender";
                    readonly type: "string";
                    readonly description: "Username of user, which sent money to you.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly startDate: {
                    readonly title: "Startdate";
                    readonly type: "string";
                    readonly description: "Start date of operation (RFC 3339 date format).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly endDate: {
                    readonly title: "Enddate";
                    readonly type: "string";
                    readonly description: "End date of operation (RFC 3339 date format).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly wallet: {
                    readonly title: "Wallet";
                    readonly type: "string";
                    readonly description: "Wallet, which used for money payouts.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly comment: {
                    readonly title: "Comment";
                    readonly type: "string";
                    readonly description: "Comment for money transfers.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly is_hold: {
                    readonly title: "Is Hold";
                    readonly type: "boolean";
                    readonly description: "Display hold operations.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly show_payment_stats: {
                    readonly title: "Show Payment Stats";
                    readonly type: "boolean";
                    readonly description: "Display payment stats for selected period (outgoing value, incoming value).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["payments", "perPage", "page", "pageNavLink", "pageNavParams", "periodLabel", "periodLabelPhrase", "filterDatesDefault", "input", "paymentStats", "hasNextPage", "lastOperationId", "nextPageHref", "system_info"];
            readonly properties: {
                readonly payments: {
                    readonly title: "Payments";
                    readonly type: "object";
                    readonly properties: {
                        readonly "1234567890": {
                            readonly title: "";
                            readonly type: "object";
                            readonly properties: {
                                readonly operation_id: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly operation_type: {
                                    readonly title: "Operation";
                                    readonly type: "string";
                                };
                                readonly outgoing_sum: {
                                    readonly title: "Outgoing";
                                    readonly type: "string";
                                };
                                readonly incoming_sum: {
                                    readonly title: "Incoming";
                                    readonly type: "string";
                                };
                                readonly item_id: {
                                    readonly title: "Item";
                                    readonly type: "integer";
                                };
                                readonly wallet: {
                                    readonly title: "Wallet";
                                    readonly type: "string";
                                };
                                readonly is_finished: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly is_hold: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly payment_system: {
                                    readonly title: "Payment";
                                    readonly type: "string";
                                };
                                readonly data: {
                                    readonly title: "Data";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly thread_id: {
                                            readonly title: "Thread";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["thread_id"];
                                };
                                readonly hold_end_date: {
                                    readonly title: "Hold";
                                    readonly type: "integer";
                                };
                                readonly operation_end_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly api: {
                                    readonly title: "Api";
                                    readonly type: "integer";
                                };
                                readonly sum: {
                                    readonly title: "Sum";
                                    readonly type: "string";
                                };
                                readonly payment_status: {
                                    readonly title: "Payment";
                                    readonly type: "string";
                                };
                                readonly supportLink: {
                                    readonly title: "Support Link";
                                };
                                readonly paymentSystemIcons: {
                                    readonly title: "Payment System Icons";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly canCancelBalanceTransfer: {
                                    readonly title: "Can Cancel Balance Transfer";
                                    readonly type: "boolean";
                                };
                                readonly canCancelBalancePayout: {
                                    readonly title: "Can Cancel Balance Payout";
                                    readonly type: "boolean";
                                };
                                readonly canCancelBalanceHold: {
                                    readonly title: "Can Cancel Balance Hold";
                                    readonly type: "boolean";
                                };
                                readonly canFinishBalanceTransfer: {
                                    readonly title: "Can Finish Balance Transfer";
                                    readonly type: "boolean";
                                };
                                readonly canFinishBalancePayout: {
                                    readonly title: "Can Finish Balance Payout";
                                    readonly type: "boolean";
                                };
                                readonly canFinishBalanceHold: {
                                    readonly title: "Can Finish Balance Hold";
                                    readonly type: "boolean";
                                };
                                readonly label: {
                                    readonly title: "Label";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly comment: {
                                            readonly title: "Comment";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["title", "comment"];
                                };
                                readonly user: {
                                    readonly title: "User";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly user_id: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_balance: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_hold: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                        readonly user_balance_with_hold: {
                                            readonly title: "User";
                                            readonly type: "integer";
                                        };
                                    };
                                    readonly required: readonly ["user_id", "user_balance", "user_hold", "user_balance_with_hold"];
                                };
                            };
                            readonly required: readonly ["operation_id", "operation_date", "operation_type", "outgoing_sum", "incoming_sum", "item_id", "wallet", "is_finished", "is_hold", "payment_system", "data", "hold_end_date", "operation_end_date", "api", "sum", "payment_status", "supportLink", "paymentSystemIcons", "canCancelBalanceTransfer", "canCancelBalancePayout", "canCancelBalanceHold", "canFinishBalanceTransfer", "canFinishBalancePayout", "canFinishBalanceHold", "label", "user"];
                        };
                    };
                    readonly required: readonly ["1234567890"];
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "string";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly pageNavLink: {
                    readonly title: "Page Nav Link";
                    readonly type: "string";
                };
                readonly pageNavParams: {
                    readonly title: "Page Nav Params";
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly title: "Type";
                            readonly type: "string";
                        };
                        readonly startDate: {
                            readonly title: "Start Date";
                            readonly type: "string";
                        };
                        readonly endDate: {
                            readonly title: "End Date";
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["type", "startDate", "endDate"];
                };
                readonly periodLabel: {
                    readonly title: "Period Label";
                    readonly type: "string";
                };
                readonly periodLabelPhrase: {
                    readonly title: "Period Label Phrase";
                    readonly type: "string";
                };
                readonly filterDatesDefault: {
                    readonly title: "Filter Dates Default";
                    readonly type: "boolean";
                };
                readonly input: {
                    readonly title: "Input";
                    readonly type: "object";
                    readonly properties: {
                        readonly user_id: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly type: {
                            readonly title: "Type";
                            readonly type: "string";
                        };
                        readonly startDate: {
                            readonly title: "Start Date";
                            readonly type: "string";
                        };
                        readonly endDate: {
                            readonly title: "End Date";
                            readonly type: "string";
                        };
                        readonly page: {
                            readonly title: "Page";
                            readonly type: "integer";
                        };
                        readonly period_label: {
                            readonly title: "Period";
                            readonly type: "string";
                        };
                        readonly receiver: {
                            readonly title: "Receiver";
                            readonly type: "string";
                        };
                        readonly sender: {
                            readonly title: "Sender";
                            readonly type: "string";
                        };
                        readonly comment: {
                            readonly title: "Comment";
                            readonly type: "string";
                        };
                        readonly pmin: {
                            readonly title: "Pmin";
                            readonly type: "string";
                        };
                        readonly pmax: {
                            readonly title: "Pmax";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly wallet: {
                            readonly title: "Wallet";
                            readonly type: "string";
                        };
                        readonly is_hold: {
                            readonly title: "Is";
                            readonly type: "boolean";
                        };
                        readonly currency: {
                            readonly title: "Currency";
                            readonly type: "string";
                        };
                        readonly operation_id_lt: {
                            readonly title: "Operation";
                            readonly type: "integer";
                        };
                    };
                    readonly required: readonly ["user_id", "type", "startDate", "endDate", "page", "period_label", "receiver", "sender", "comment", "pmin", "pmax", "category_id", "wallet", "is_hold", "currency", "operation_id_lt"];
                };
                readonly paymentStats: {
                    readonly title: "Payment Stats";
                };
                readonly hasNextPage: {
                    readonly title: "Has Next Page";
                    readonly type: "boolean";
                };
                readonly lastOperationId: {
                    readonly title: "Last Operation Id";
                    readonly type: "integer";
                };
                readonly nextPageHref: {
                    readonly title: "Next Page Href";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsInvoiceCreate: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency that will be used to create the invoice.";
                };
                readonly amount: {
                    readonly title: "Amount";
                    readonly type: "number";
                    readonly description: "Invoice amount.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly payment_id: {
                    readonly title: "Amount";
                    readonly type: "string";
                    readonly description: "Payment ID in your system (must be unique within the merchant / invoices).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly comment: {
                    readonly title: "Comment";
                    readonly type: "string";
                    readonly description: "Comment to the invoice.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly url_success: {
                    readonly title: "URL Success";
                    readonly type: "string";
                    readonly description: "URL to redirect to after successful payment.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly url_callback: {
                    readonly title: "Callback URL";
                    readonly type: "string";
                    readonly description: "Callback url.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly merchant_id: {
                    readonly title: "Merchant ID";
                    readonly type: "integer";
                    readonly description: "Merchant ID.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly lifetime: {
                    readonly title: "Lifetime";
                    readonly type: "number";
                    readonly description: "Invoice lifetime.";
                    readonly minimum: 300;
                    readonly maximum: 43200;
                    readonly default: 3600;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly additional_data: {
                    readonly title: "Additional Data";
                    readonly type: "string";
                    readonly description: "Additional information for you.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly is_test: {
                    readonly title: "Is Test";
                    readonly type: "boolean";
                    readonly description: "Create a test invoice.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["currency", "amount", "payment_id", "comment", "url_success", "merchant_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["invoice", "system_info"];
            readonly properties: {
                readonly invoice: {
                    readonly title: "Invoice";
                    readonly type: "object";
                    readonly properties: {
                        readonly amount: {
                            readonly title: "Amount";
                            readonly type: "number";
                        };
                        readonly payment_id: {
                            readonly title: "Payment";
                            readonly type: "string";
                        };
                        readonly merchant_id: {
                            readonly title: "Merchant";
                            readonly type: "integer";
                        };
                        readonly comment: {
                            readonly title: "Comment";
                            readonly type: "string";
                        };
                        readonly additional_data: {
                            readonly title: "Additional";
                            readonly type: "string";
                        };
                        readonly url_success: {
                            readonly title: "Url";
                            readonly type: "string";
                        };
                        readonly url_callback: {
                            readonly title: "Url";
                            readonly type: "string";
                        };
                        readonly is_test: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly expires_at: {
                            readonly title: "Expires";
                            readonly type: "integer";
                        };
                        readonly user_id: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly invoice_date: {
                            readonly title: "Invoice";
                            readonly type: "integer";
                        };
                        readonly status: {
                            readonly title: "Status";
                            readonly type: "string";
                        };
                        readonly paid_date: {
                            readonly title: "Paid";
                            readonly type: "integer";
                        };
                        readonly payer_user_id: {
                            readonly title: "Payer";
                            readonly type: "integer";
                        };
                        readonly resend_attempts: {
                            readonly title: "Resend";
                            readonly type: "integer";
                        };
                        readonly invoice_id: {
                            readonly title: "Invoice";
                            readonly type: "integer";
                        };
                        readonly url: {
                            readonly title: "Url";
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["amount", "payment_id", "merchant_id", "comment", "additional_data", "url_success", "url_callback", "is_test", "expires_at", "user_id", "invoice_date", "status", "paid_date", "payer_user_id", "resend_attempts", "invoice_id", "url"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsInvoiceGet: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly invoice_id: {
                    readonly type: "integer";
                    readonly description: "Invoice ID.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly payment_id: {
                    readonly type: "string";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Payment ID.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["data", "system_info"];
            readonly properties: {
                readonly data: {
                    readonly title: "Data";
                    readonly type: "object";
                    readonly properties: {
                        readonly invoice_id: {
                            readonly title: "Invoice";
                            readonly type: "integer";
                        };
                        readonly user_id: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly merchant_id: {
                            readonly title: "Merchant";
                            readonly type: "integer";
                        };
                        readonly invoice_date: {
                            readonly title: "Invoice";
                            readonly type: "integer";
                        };
                        readonly expires_at: {
                            readonly title: "Expires";
                            readonly type: "integer";
                        };
                        readonly amount: {
                            readonly title: "Amount";
                            readonly type: "integer";
                        };
                        readonly currency: {
                            readonly title: "Currency";
                            readonly type: "string";
                        };
                        readonly status: {
                            readonly title: "Status";
                            readonly type: "string";
                        };
                        readonly paid_date: {
                            readonly title: "Paid";
                            readonly type: "integer";
                        };
                        readonly payer_user_id: {
                            readonly title: "Payer";
                            readonly type: "integer";
                        };
                        readonly payment_id: {
                            readonly title: "Payment";
                            readonly type: "string";
                        };
                        readonly additional_data: {
                            readonly title: "Additional";
                            readonly type: "string";
                        };
                        readonly comment: {
                            readonly title: "Comment";
                            readonly type: "string";
                        };
                        readonly url_success: {
                            readonly title: "Url";
                            readonly type: "string";
                        };
                        readonly url_callback: {
                            readonly title: "Url";
                            readonly type: "string";
                        };
                        readonly resend_attempts: {
                            readonly title: "Resend";
                            readonly type: "integer";
                        };
                        readonly url: {
                            readonly title: "Url";
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["invoice_id", "user_id", "merchant_id", "invoice_date", "expires_at", "amount", "currency", "status", "paid_date", "payer_user_id", "payment_id", "additional_data", "comment", "url_success", "url_callback", "resend_attempts", "url"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly required: readonly ["errors", "system_info"];
            readonly properties: {
                readonly errors: {
                    readonly title: "Errors";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsInvoiceList: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                    readonly description: "The number of the page to display results from.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Currency of the created invoice.";
                };
                readonly status: {
                    readonly type: "string";
                    readonly enum: readonly ["paid", "not_paid"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Status of the invoice.";
                };
                readonly amount: {
                    readonly title: "Amount";
                    readonly type: "number";
                    readonly description: "Invoice amount.";
                    readonly minimum: 0;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly merchant_id: {
                    readonly title: "Merchant ID";
                    readonly type: "integer";
                    readonly description: "Merchant ID.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["invoices", "count", "page", "perPage", "system_info"];
            readonly properties: {
                readonly invoices: {
                    readonly title: "Invoices";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly invoice_id: {
                                readonly title: "Invoice";
                                readonly type: "integer";
                            };
                            readonly user_id: {
                                readonly title: "User";
                                readonly type: "integer";
                            };
                            readonly merchant_id: {
                                readonly title: "Merchant";
                                readonly type: "integer";
                            };
                            readonly invoice_date: {
                                readonly title: "Invoice";
                                readonly type: "integer";
                            };
                            readonly expires_at: {
                                readonly title: "Expires";
                                readonly type: "integer";
                            };
                            readonly amount: {
                                readonly title: "Amount";
                                readonly type: "integer";
                            };
                            readonly currency: {
                                readonly title: "Currency";
                                readonly type: "string";
                            };
                            readonly status: {
                                readonly title: "Status";
                                readonly type: "string";
                            };
                            readonly paid_date: {
                                readonly title: "Paid";
                                readonly type: "integer";
                            };
                            readonly payer_user_id: {
                                readonly title: "Payer";
                                readonly type: "integer";
                            };
                            readonly payment_id: {
                                readonly title: "Payment";
                                readonly type: "string";
                            };
                            readonly additional_data: {
                                readonly title: "Additional";
                                readonly type: "string";
                            };
                            readonly comment: {
                                readonly title: "Comment";
                                readonly type: "string";
                            };
                            readonly url_success: {
                                readonly title: "Url";
                                readonly type: "string";
                            };
                            readonly url_callback: {
                                readonly title: "Url";
                                readonly type: "string";
                            };
                            readonly resend_attempts: {
                                readonly title: "Resend";
                                readonly type: "integer";
                            };
                            readonly url: {
                                readonly title: "Url";
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["invoice_id", "user_id", "merchant_id", "invoice_date", "expires_at", "amount", "currency", "status", "paid_date", "payer_user_id", "payment_id", "additional_data", "comment", "url_success", "url_callback", "resend_attempts", "url"];
                    };
                };
                readonly count: {
                    readonly title: "Count";
                    readonly type: "integer";
                };
                readonly page: {
                    readonly title: "Page";
                    readonly type: "integer";
                };
                readonly perPage: {
                    readonly title: "Per Page";
                    readonly type: "integer";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsPayout: {
    readonly body: {
        readonly type: "object";
        readonly required: readonly ["payment_system", "wallet", "amount", "currency"];
        readonly properties: {
            readonly payment_system: {
                readonly title: "Payment System";
                readonly type: "string";
            };
            readonly wallet: {
                readonly title: "Wallet";
                readonly type: "string";
            };
            readonly amount: {
                readonly title: "Amount";
                readonly type: "number";
            };
            readonly currency: {
                readonly title: "Currency";
                readonly type: "string";
                readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
            };
            readonly include_fee: {
                readonly title: "Include Fee";
                readonly type: "boolean";
            };
            readonly extra: {
                readonly type: "object";
                readonly properties: {
                    readonly provider: {
                        readonly title: "Provider";
                        readonly type: "string";
                    };
                };
            };
        };
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsPayoutServices: {
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["systems", "system_info"];
            readonly properties: {
                readonly systems: {
                    readonly title: "Systems";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly system: {
                                readonly title: "System";
                                readonly type: "string";
                            };
                            readonly commission: {
                                readonly title: "Commission";
                                readonly type: "string";
                            };
                            readonly min: {
                                readonly title: "Min";
                                readonly type: "integer";
                            };
                            readonly max: {
                                readonly title: "Max";
                                readonly type: "integer";
                            };
                            readonly instant_payout: {
                                readonly title: "Instant";
                                readonly type: "boolean";
                            };
                            readonly problematic_payout: {
                                readonly title: "Problematic";
                                readonly type: "boolean";
                            };
                            readonly is_unavailable: {
                                readonly title: "Is";
                                readonly type: "boolean";
                            };
                            readonly p2p: {
                                readonly title: "";
                                readonly type: "boolean";
                            };
                            readonly has_wallet: {
                                readonly title: "Has";
                                readonly type: "boolean";
                            };
                            readonly providers: {
                                readonly title: "Providers";
                                readonly type: "object";
                                readonly properties: {
                                    readonly BEP20: {
                                        readonly title: "Be";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly TRC20: {
                                        readonly title: "Tr";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly ERC20: {
                                        readonly title: "Er";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly TRX: {
                                        readonly title: "Trx";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly BTC: {
                                        readonly title: "Btc";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly TON: {
                                        readonly title: "Ton";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly ETH: {
                                        readonly title: "Eth";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly LTC: {
                                        readonly title: "Ltc";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly BNB: {
                                        readonly title: "Bnb";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly DASH: {
                                        readonly title: "Dash";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly DOGE: {
                                        readonly title: "Doge";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly XMR: {
                                        readonly title: "Xmr";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly SOL: {
                                        readonly title: "Sol";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                    readonly BCH: {
                                        readonly title: "Bch";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly title: {
                                                readonly title: "Title";
                                                readonly type: "string";
                                            };
                                            readonly isUnavailable: {
                                                readonly title: "Is Unavailable";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["title", "isUnavailable"];
                                    };
                                };
                                readonly required: readonly ["BEP20", "TRC20", "ERC20", "TRX", "BTC", "TON", "ETH", "LTC", "BNB", "DASH", "DOGE", "XMR", "SOL", "BCH"];
                            };
                        };
                        readonly required: readonly ["system", "commission", "min", "max", "instant_payout", "problematic_payout", "is_unavailable", "p2p", "has_wallet", "providers"];
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PaymentsTransfer: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly user_id: {
                    readonly title: "User Id";
                    readonly type: "integer";
                    readonly description: "User id of receiver. If **user_id** specified, **username** is not required.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly username: {
                    readonly title: "Username";
                    readonly type: "string";
                    readonly description: "Username of receiver. If **username** specified, **user_id** is not required.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly amount: {
                    readonly title: "Amount";
                    readonly type: "integer";
                    readonly description: "Amount to send in your currency.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Using currency for amount.";
                };
                readonly comment: {
                    readonly title: "Comment";
                    readonly maxLength: 255;
                    readonly type: "string";
                    readonly description: "Transfer comment.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_deal: {
                    readonly title: "Telegram Deal";
                    readonly type: "boolean";
                    readonly description: "Is the deal happening on Telegram? ";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_username: {
                    readonly title: "Telegram Username";
                    readonly type: "string";
                    readonly description: "Telegram username of the user you are dialoguing with.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly transfer_hold: {
                    readonly title: "Transfer Hold";
                    readonly type: "boolean";
                    readonly description: "Hold transfer or not.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hold_length_value: {
                    readonly title: "Hold Length Value";
                    readonly type: "integer";
                    readonly description: "Hold length value.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hold_length_option: {
                    readonly title: "Hold Length Option";
                    readonly type: "string";
                    readonly description: "Hold length option.";
                    readonly enum: readonly ["hour", "day", "week", "month", "year"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["amount", "currency"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "OkModel";
            readonly required: readonly ["status", "message", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Invalid Secret Answer";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You entered invalid secret answer.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "User Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "The requested user could not be found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ProfileClaims: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly enum: readonly ["market", "nomarket"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Filter claims by their type.";
                };
                readonly claim_state: {
                    readonly type: "string";
                    readonly enum: readonly ["active", "solved", "rejected", "settled"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Filter claims by their state.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["claims", "stats", "system_info"];
            readonly properties: {
                readonly claims: {
                    readonly title: "Claims";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly thread_id: {
                                readonly title: "Thread";
                                readonly type: "integer";
                            };
                            readonly claim_date: {
                                readonly title: "Claim";
                                readonly type: "integer";
                            };
                            readonly claim_state: {
                                readonly title: "Claim";
                                readonly type: "string";
                            };
                            readonly message_body: {
                                readonly title: "Message";
                                readonly type: "string";
                            };
                            readonly amount_formatted: {
                                readonly title: "Amount";
                                readonly type: "string";
                            };
                            readonly author: {
                                readonly title: "Author";
                                readonly type: "object";
                                readonly properties: {
                                    readonly user_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly username: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly username_html: {
                                        readonly title: "Username";
                                        readonly type: "string";
                                    };
                                    readonly user_message_count: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly user_register_date: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly user_like_count: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly user_like2_count: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly contest_count: {
                                        readonly title: "Contest";
                                        readonly type: "integer";
                                    };
                                    readonly trophy_count: {
                                        readonly title: "Trophy";
                                        readonly type: "integer";
                                    };
                                    readonly custom_title: {
                                        readonly title: "Custom";
                                        readonly type: "string";
                                    };
                                    readonly is_banned: {
                                        readonly title: "Is";
                                        readonly type: "integer";
                                    };
                                    readonly user_title: {
                                        readonly title: "User";
                                        readonly type: "string";
                                    };
                                    readonly user_is_valid: {
                                        readonly title: "User";
                                        readonly type: "boolean";
                                    };
                                    readonly user_is_verified: {
                                        readonly title: "User";
                                        readonly type: "boolean";
                                    };
                                    readonly user_is_followed: {
                                        readonly title: "User";
                                        readonly type: "boolean";
                                    };
                                    readonly user_last_seen_date: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly links: {
                                        readonly title: "Links";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly permalink: {
                                                readonly title: "Permalink";
                                                readonly type: "string";
                                            };
                                            readonly detail: {
                                                readonly title: "Detail";
                                                readonly type: "string";
                                            };
                                            readonly avatar: {
                                                readonly title: "Avatar";
                                                readonly type: "string";
                                            };
                                            readonly avatar_big: {
                                                readonly title: "Avatar";
                                                readonly type: "string";
                                            };
                                            readonly avatar_small: {
                                                readonly title: "Avatar";
                                                readonly type: "string";
                                            };
                                            readonly followers: {
                                                readonly title: "Followers";
                                                readonly type: "string";
                                            };
                                            readonly followings: {
                                                readonly title: "Followings";
                                                readonly type: "string";
                                            };
                                            readonly ignore: {
                                                readonly title: "Ignore";
                                                readonly type: "string";
                                            };
                                            readonly timeline: {
                                                readonly title: "Timeline";
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["permalink", "detail", "avatar", "avatar_big", "avatar_small", "followers", "followings", "ignore", "timeline"];
                                    };
                                    readonly permissions: {
                                        readonly title: "Permissions";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly edit: {
                                                readonly title: "Edit";
                                                readonly type: "boolean";
                                            };
                                            readonly follow: {
                                                readonly title: "Follow";
                                                readonly type: "boolean";
                                            };
                                            readonly ignore: {
                                                readonly title: "Ignore";
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["edit", "follow", "ignore"];
                                    };
                                    readonly user_is_ignored: {
                                        readonly title: "User";
                                        readonly type: "boolean";
                                    };
                                    readonly user_is_visitor: {
                                        readonly title: "User";
                                        readonly type: "boolean";
                                    };
                                    readonly user_group_id: {
                                        readonly title: "User";
                                        readonly type: "integer";
                                    };
                                    readonly ban_reason: {
                                        readonly title: "Ban";
                                        readonly type: "string";
                                    };
                                    readonly fields: {
                                        readonly title: "Fields";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly title: "Id";
                                                    readonly type: "string";
                                                };
                                                readonly title: {
                                                    readonly title: "Title";
                                                    readonly type: "string";
                                                };
                                                readonly description: {
                                                    readonly title: "Description";
                                                    readonly type: "string";
                                                };
                                                readonly position: {
                                                    readonly title: "Position";
                                                    readonly type: "string";
                                                };
                                                readonly is_required: {
                                                    readonly title: "Is";
                                                    readonly type: "boolean";
                                                };
                                            };
                                            readonly required: readonly ["id", "title", "description", "position", "is_required"];
                                        };
                                    };
                                };
                                readonly required: readonly ["user_id", "username", "username_html", "user_message_count", "user_register_date", "user_like_count", "user_like2_count", "contest_count", "trophy_count", "custom_title", "is_banned", "user_title", "user_is_valid", "user_is_verified", "user_is_followed", "user_last_seen_date", "links", "permissions", "user_is_ignored", "user_is_visitor", "user_group_id", "ban_reason", "fields"];
                            };
                        };
                        readonly required: readonly ["thread_id", "claim_date", "claim_state", "message_body", "amount_formatted", "author"];
                    };
                };
                readonly stats: {
                    readonly title: "Stats";
                    readonly type: "object";
                    readonly properties: {
                        readonly market: {
                            readonly title: "Market";
                            readonly type: "object";
                            readonly properties: {
                                readonly total: {
                                    readonly title: "Total";
                                    readonly type: "integer";
                                };
                                readonly solved: {
                                    readonly title: "Solved";
                                    readonly type: "integer";
                                };
                                readonly settled: {
                                    readonly title: "Settled";
                                    readonly type: "integer";
                                };
                                readonly rejected: {
                                    readonly title: "Rejected";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["total", "solved", "settled", "rejected"];
                        };
                        readonly noMarket: {
                            readonly title: "No Market";
                            readonly type: "object";
                            readonly properties: {
                                readonly total: {
                                    readonly title: "Total";
                                    readonly type: "integer";
                                };
                                readonly solved: {
                                    readonly title: "Solved";
                                    readonly type: "integer";
                                };
                                readonly settled: {
                                    readonly title: "Settled";
                                    readonly type: "integer";
                                };
                                readonly rejected: {
                                    readonly title: "Rejected";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["total", "solved", "settled", "rejected"];
                        };
                    };
                    readonly required: readonly ["market", "noMarket"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ProfileEdit: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Account currency.";
                };
                readonly user_allow_ask_discount: {
                    readonly title: "User Allow Ask Discount";
                    readonly type: "boolean";
                    readonly description: "Allow users ask discount for your accounts.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly max_discount_percent: {
                    readonly title: "Max Discount Percent";
                    readonly type: "integer";
                    readonly description: "Maximum discount percents for your accounts.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly disable_steam_guard: {
                    readonly title: "Disable Steam Guard";
                    readonly type: "boolean";
                    readonly description: "Disable Steam Guard on account purchase moment.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly deauthorize_steam: {
                    readonly title: "Deathorize Steam";
                    readonly type: "boolean";
                    readonly description: "Finish all Steam sessions after purchase.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly change_password_on_purchase: {
                    readonly title: "Change Password On Purchase";
                    readonly type: "boolean";
                    readonly description: "Change Steam password after purchase.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly hide_favourites: {
                    readonly title: "Hide Favourites";
                    readonly type: "boolean";
                    readonly description: "Hide your profile info when you add an account to favorites.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly show_too_low_price_change_warning: {
                    readonly title: "Show Price Change Warnings";
                    readonly type: "boolean";
                    readonly description: "Show a warning when you reduce the price of an account too much.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly allow_accept_accounts: {
                    readonly title: "Allow Accept Accounts";
                    readonly type: "array";
                    readonly description: "Usernames who can transfer market accounts to you. Separate values with a comma.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly market_custom_title: {
                    readonly title: "Market Custom Title";
                    readonly type: "string";
                    readonly description: "Market title.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_api_id: {
                    readonly title: "Telegram api id.";
                    readonly type: "string";
                    readonly description: "Telegram api id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_api_hash: {
                    readonly title: "Telegram api hash.";
                    readonly type: "string";
                    readonly description: "Telegram api hash.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_device_model: {
                    readonly title: "Telegram device model.";
                    readonly type: "string";
                    readonly description: "Telegram device model.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_system_version: {
                    readonly title: "Telegram system version.";
                    readonly type: "string";
                    readonly description: "Telegram system version.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_app_version: {
                    readonly title: "Telegram app version.";
                    readonly type: "string";
                    readonly description: "Telegram app version.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_lang_pack: {
                    readonly title: "Telegram lang pack.";
                    readonly type: "string";
                    readonly description: "Telegram lang pack.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_lang_code: {
                    readonly title: "Telegram lang code.";
                    readonly type: "string";
                    readonly description: "Telegram lang code.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly telegram_system_lang_code: {
                    readonly title: "Telegram system lang code.";
                    readonly type: "string";
                    readonly description: "Telegram system lang code.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["currency"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ProfileGet: {
    readonly response: {
        readonly "200": {
            readonly title: "MeModel";
            readonly required: readonly ["user"];
            readonly type: "object";
            readonly properties: {
                readonly user: {
                    readonly title: "User";
                    readonly required: readonly ["balance", "hold", "short_link", "system_info", "user_dob_day", "user_dob_month", "user_dob_year", "user_email", "user_id", "user_last_seen_date", "user_like_count", "user_message_count", "user_register_date", "user_title", "user_unread_notification_count", "username"];
                    readonly type: "object";
                    readonly properties: {
                        readonly user_id: {
                            readonly title: "User Id";
                            readonly type: "integer";
                        };
                        readonly username: {
                            readonly title: "Username";
                            readonly type: "string";
                        };
                        readonly user_message_count: {
                            readonly title: "User Message Count";
                            readonly type: "integer";
                        };
                        readonly user_register_date: {
                            readonly title: "User Register Date";
                            readonly type: "integer";
                        };
                        readonly user_like_count: {
                            readonly title: "User Like Count";
                            readonly type: "integer";
                        };
                        readonly short_link: {
                            readonly title: "Short Link";
                            readonly type: "string";
                        };
                        readonly user_email: {
                            readonly title: "User Email";
                            readonly type: "string";
                        };
                        readonly user_unread_notification_count: {
                            readonly title: "User Unread Notification Count";
                            readonly type: "integer";
                        };
                        readonly user_dob_day: {
                            readonly title: "User Dob Day";
                            readonly type: "integer";
                        };
                        readonly user_dob_month: {
                            readonly title: "User Dob Month";
                            readonly type: "integer";
                        };
                        readonly user_dob_year: {
                            readonly title: "User Dob Year";
                            readonly type: "integer";
                        };
                        readonly user_title: {
                            readonly title: "User Title";
                            readonly type: "string";
                        };
                        readonly user_last_seen_date: {
                            readonly title: "User Last Seen Date";
                            readonly type: "integer";
                        };
                        readonly balance: {
                            readonly title: "Balance";
                            readonly type: "integer";
                        };
                        readonly hold: {
                            readonly title: "Hold";
                            readonly type: "integer";
                        };
                        readonly system_info: {
                            readonly required: readonly ["visitor_id", "time"];
                            readonly properties: {
                                readonly visitor_id: {
                                    readonly type: "integer";
                                    readonly default: 0;
                                };
                                readonly time: {
                                    readonly type: "integer";
                                    readonly default: 0;
                                };
                            };
                            readonly type: "object";
                        };
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ProxyAdd: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly proxy_ip: {
                    readonly title: "Proxy Ip";
                    readonly type: "string";
                    readonly description: "Proxy ip or host. Required if **proxy_row** is not specified.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly proxy_port: {
                    readonly title: "Proxy Port";
                    readonly type: "integer";
                    readonly description: "Proxy port. Required if **proxy_row** is not specified.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly proxy_user: {
                    readonly title: "Proxy User";
                    readonly type: "string";
                    readonly description: "Proxy username. Required if **proxy_row** is not specified.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly proxy_pass: {
                    readonly title: "Proxy Pass";
                    readonly type: "string";
                    readonly description: "Proxy password. Required if **proxy_row** is not specified.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly proxy_row: {
                    readonly title: "Proxy Row";
                    readonly type: "string";
                    readonly description: "Proxy list in String format ip:port:user:pass. Each proxy must be start with new line (use \\n separator)";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "400": {
            readonly title: "Incorrect Proxy";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Please enter correct proxy row like ip:port:user:pass.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ProxyDelete: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly proxy_id: {
                    readonly title: "Proxy Id";
                    readonly type: "integer";
                    readonly description: "Id of an existing proxy.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly delete_all: {
                    readonly title: "Delete All";
                    readonly type: "boolean";
                    readonly description: "True. If you want to delete all proxy.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "SaveChangesModel";
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly message: {
                    readonly title: "Message";
                    readonly type: "string";
                    readonly default: "Changes Saved";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Proxy Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Requested proxy server not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly type: "object";
            readonly required: readonly ["errors", "system_info"];
            readonly properties: {
                readonly errors: {
                    readonly title: "Errors";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const ProxyGet: {
    readonly response: {
        readonly "200": {
            readonly title: "ProxyModel";
            readonly required: readonly ["proxies", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly proxies: {
                    readonly title: "Proxies";
                    readonly type: "array";
                    readonly items: {
                        readonly title: "Proxy";
                        readonly required: readonly ["proxy"];
                        readonly type: "object";
                        readonly properties: {
                            readonly proxy: {
                                readonly title: "Proxy1";
                                readonly required: readonly ["proxyString", "proxy_id", "proxy_ip", "proxy_pass", "proxy_port", "proxy_user", "user_id"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly proxy_id: {
                                        readonly title: "Proxy Id";
                                        readonly type: "integer";
                                    };
                                    readonly user_id: {
                                        readonly title: "User Id";
                                        readonly type: "integer";
                                    };
                                    readonly proxy_ip: {
                                        readonly title: "Proxy Ip";
                                        readonly type: "string";
                                    };
                                    readonly proxy_port: {
                                        readonly title: "Proxy Port";
                                        readonly type: "integer";
                                    };
                                    readonly proxy_user: {
                                        readonly title: "Proxy User";
                                        readonly type: "string";
                                    };
                                    readonly proxy_pass: {
                                        readonly title: "Proxy Pass";
                                        readonly type: "string";
                                    };
                                    readonly proxyString: {
                                        readonly title: "Proxystring";
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PublishingAdd: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly title: "Title Ru";
                    readonly type: "string";
                    readonly description: "Title of account. If **title** specified and **title_en** is empty, **title_en** will be automatically translated to English language.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title_en: {
                    readonly title: "Title En";
                    readonly type: "string";
                    readonly description: "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly price: {
                    readonly title: "Price";
                    readonly type: "number";
                    readonly description: "Current price of account in your currency.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly category_id: {
                    readonly title: "Category Id";
                    readonly type: "integer";
                    readonly description: "Accounts category.";
                    readonly "x-enumDescriptions": {
                        readonly "1": "Steam";
                        readonly "3": "EA (Origin)";
                        readonly "4": "Warface";
                        readonly "5": "Uplay";
                        readonly "6": "ChatGPT";
                        readonly "7": "Social Club";
                        readonly "9": "Fortnite";
                        readonly "10": "Instagram";
                        readonly "11": "Battlenet";
                        readonly "12": "Epic Games";
                        readonly "13": "Riot";
                        readonly "14": "World Of Tanks";
                        readonly "15": "Supercell";
                        readonly "16": "WOT Blitz";
                        readonly "17": "miHoYo";
                        readonly "18": "Escape From Tarkov";
                        readonly "19": "VPN";
                        readonly "20": "Tiktok";
                        readonly "22": "Discord";
                        readonly "24": "Telegram";
                        readonly "27": "War Thunder";
                        readonly "28": "Minecraft";
                        readonly "30": "Gifts";
                        readonly "31": "Roblox";
                    };
                    readonly enum: readonly [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 27, 28, 30, 31];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Using currency.";
                };
                readonly item_origin: {
                    readonly title: "Item Origin";
                    readonly type: "string";
                    readonly description: "Account origin. Where did you get it from.";
                    readonly "x-enumDescriptions": {
                        readonly brute: "Account received using Bruteforce";
                        readonly phishing: "Account received from phishing page";
                        readonly stealer: "Account received from stealer logs";
                        readonly autoreg: "Account is automatically registered by a tool";
                        readonly personal: "Account is yours. You created it yourself";
                        readonly resale: "Account received from another seller";
                        readonly dummy: "Dummy (empty) account (only for Steam category)";
                        readonly self_registration: "Self registered account (only for Telegram category)";
                    };
                    readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "dummy", "self_registration"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly extended_guarantee: {
                    readonly title: "Extended Guarantee";
                    readonly type: "integer";
                    readonly description: "Guarantee type.";
                    readonly "x-enumDescriptions": {
                        readonly "0": "24 hours";
                        readonly "1": "3 days";
                        readonly "-1": "12 hours";
                    };
                    readonly enum: readonly [-1, 0, 1];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly description: {
                    readonly title: "Description";
                    readonly type: "string";
                    readonly description: "Account public description.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly information: {
                    readonly title: "Information";
                    readonly type: "string";
                    readonly description: "Account private information (visible only for buyer).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly forceTempEmail: {
                    readonly title: "Paid Mail";
                    readonly type: "boolean";
                    readonly description: "Get temporary email if not required by category. Available for Supercell, Fortnite and Epic Games categories.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly resell_item_id: {
                    readonly title: "Resell Item Id";
                    readonly type: "integer";
                    readonly description: "Put item id, if you are trying to resell item. This is useful to pass temporary email from reselling item to new item. You will get same temporary email from reselling account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly has_email_login_data: {
                    readonly title: "Has Email Login Data";
                    readonly type: "boolean";
                    readonly description: "Required if a **category** is one of list of Required email login data categories.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email_login_data: {
                    readonly title: "Email Login Data";
                    readonly type: "string";
                    readonly description: "Required if a **category** is one of list of Required email login data categories. Email login data (email:password format).";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly email_type: {
                    readonly title: "Email Type";
                    readonly type: "string";
                    readonly description: "Email type.";
                    readonly enum: readonly ["native", "autoreg"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly allow_ask_discount: {
                    readonly title: "Allow Ask Discount";
                    readonly type: "boolean";
                    readonly description: "Allow users to ask discount for this account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly proxy_id: {
                    readonly title: "Proxy Id";
                    readonly type: "integer";
                    readonly description: "Proxy id that will be used to check account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly random_proxy: {
                    readonly title: "Random Proxy";
                    readonly type: "boolean";
                    readonly description: "Set this parameter to **true** so that the Market will take a random proxy from its pool for each of your requests.\nOtherwise, if this parameter is set to **false** or not set, the Market will take a specific proxy from its pool, which is predefined for each item.\n> This parameter only works with proxies from the Market pool. If you want to use your own proxies, use the proxy_id or extra[proxy] parameter.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["price", "category_id", "currency", "item_origin"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "AddItemModel";
            readonly required: readonly ["item", "status", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly pending_deletion_date: {
                            readonly title: "Pending";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly note_text: {
                            readonly title: "Note";
                            readonly type: "string";
                        };
                        readonly content_type: {
                            readonly title: "Content";
                        };
                        readonly content_id: {
                            readonly title: "Content";
                        };
                        readonly delete_date: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_user_id: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_username: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly delete_reason: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_display_icon_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_uniq_banner: {
                            readonly title: "Buyer";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly is_fave: {
                            readonly title: "Is";
                        };
                        readonly in_cart: {
                            readonly title: "In";
                        };
                        readonly cart_price: {
                            readonly title: "Cart";
                        };
                        readonly canResellItem: {
                            readonly title: "Can Resell Item";
                            readonly type: "boolean";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "number";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                                readonly cancelledReason: {
                                    readonly title: "Cancelled Reason";
                                    readonly type: "string";
                                };
                                readonly cancelledReasonPhrase: {
                                    readonly title: "Cancelled Reason Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewItemViews: {
                            readonly title: "Can View Item Views";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly copyFormatData: {
                            readonly title: "Copy Format Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly title_link: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly login_data: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly full: {
                                    readonly title: "Full";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title_link", "login_data", "full"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly display_icon_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly uniq_banner: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly priceWithSellerFeeLabel: {
                            readonly title: "Price With Seller Fee Label";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly imagePreviewLinks: {
                            readonly title: "Image Preview Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly canChangeEmailPassword: {
                            readonly title: "Can Change Email Password";
                            readonly type: "boolean";
                        };
                        readonly uniqueKeyExists: {
                            readonly title: "Unique Key Exists";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1234567890": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1234567890"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "object";
                            readonly properties: {
                                readonly _4: {
                                    readonly title: "";
                                    readonly type: "string";
                                };
                                readonly allowSelfUnban: {
                                    readonly title: "Allow Self Unban";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly ban_reason: {
                                    readonly title: "Ban";
                                    readonly type: "string";
                                };
                                readonly discord: {
                                    readonly title: "Discord";
                                    readonly type: "string";
                                };
                                readonly github: {
                                    readonly title: "Github";
                                    readonly type: "string";
                                };
                                readonly jabber: {
                                    readonly title: "Jabber";
                                    readonly type: "string";
                                };
                                readonly lztUnbanAmount: {
                                    readonly title: "Lzt Unban Amount";
                                    readonly type: "string";
                                };
                                readonly steam: {
                                    readonly title: "Steam";
                                    readonly type: "string";
                                };
                                readonly telegram: {
                                    readonly title: "Telegram";
                                    readonly type: "string";
                                };
                                readonly vk: {
                                    readonly title: "Vk";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceValue: {
                                        readonly title: "Price Value";
                                        readonly type: "number";
                                    };
                                };
                                readonly required: readonly ["currency", "price", "priceValue"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly nextAllowedBumpDate: {
                                    readonly title: "Next Allowed Bump Date";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly canShareItem: {
                            readonly title: "Can Share Item";
                            readonly type: "boolean";
                        };
                        readonly canCheckAiPrice: {
                            readonly title: "Can Check Ai Price";
                            readonly type: "boolean";
                        };
                        readonly aiPrice: {
                            readonly title: "Ai Price";
                            readonly type: "integer";
                        };
                        readonly aiPriceCheckDate: {
                            readonly title: "Ai Price Check Date";
                            readonly type: "integer";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canCheckAutoBuyPrice: {
                            readonly title: "Can Check Auto Buy Price";
                            readonly type: "boolean";
                        };
                        readonly autoBuyPrice: {
                            readonly title: "Auto Buy Price";
                            readonly type: "integer";
                        };
                        readonly autoBuyPriceCheckDate: {
                            readonly title: "Auto Buy Price Check Date";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly effective_last_activity: {
                                    readonly title: "Effective";
                                    readonly type: "integer";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                                readonly contacts: {
                                    readonly title: "Contacts";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly ban_reason: {
                                            readonly title: "Ban";
                                            readonly type: "string";
                                        };
                                        readonly telegram: {
                                            readonly title: "Telegram";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["ban_reason", "telegram"];
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PublishingCheck: {
    readonly body: {
        readonly properties: {
            readonly login: {
                readonly description: "Account login (or email).";
                readonly title: "Login";
                readonly type: "string";
            };
            readonly password: {
                readonly description: "Account password.";
                readonly title: "Password";
                readonly type: "string";
            };
            readonly login_password: {
                readonly description: "Account login data (login:password format).";
                readonly title: "Login Password";
                readonly type: "string";
            };
            readonly has_email_login_data: {
                readonly description: "Required if a **category** is one of list of Required email login data categories.";
                readonly title: "Has Email Login Data";
                readonly type: "boolean";
            };
            readonly email_login_data: {
                readonly description: "Required if a **category** is one of list of Required email login data categories. Email login data (email:password format).";
                readonly title: "Email Login Data";
                readonly type: "string";
            };
            readonly email_type: {
                readonly description: "Email type.";
                readonly title: "Email Type";
                readonly type: "string";
                readonly enum: readonly ["native", "autoreg"];
            };
            readonly extra: {
                readonly type: "object";
                readonly title: "Extra";
                readonly properties: {
                    readonly proxy: {
                        readonly title: "Proxy";
                        readonly type: "string";
                        readonly description: "Proxy line format ip:port:user:pass (prioritize over proxy_id parameter).";
                    };
                    readonly close_item: {
                        readonly description: "If set, the item will be closed **item_state = closed**.";
                        readonly title: "Close Item";
                        readonly type: "boolean";
                    };
                    readonly region: {
                        readonly description: "Region. Required if you want to upload WoT account. Optional if you want to upload miHoYo or Riot account.";
                        readonly title: "Region";
                        readonly type: "string";
                    };
                    readonly service: {
                        readonly description: "Service. Required if you want to upload VPN, Cinema account or gift.";
                        readonly title: "Service";
                        readonly type: "string";
                        readonly enum: readonly ["AdguardVPN", "PIAVPN", "cyberghostVPN", "hotspotShieldVPN", "mullvadVPN", "pureVPN", "tunnelbearVPN", "ultraVPN", "vanishVPN", "vyprVPN", "windscribeVPN", "planetVPN", "start", "ivi", "telegram", "discord", "discord_trial"];
                    };
                    readonly system: {
                        readonly description: "Supercell system. Required if you want to upload Supercell account.";
                        readonly "x-enumDescriptions": {
                            readonly laser: "Brawl Stars";
                            readonly scroll: "Clash Royale";
                            readonly magic: "Clash of Clans";
                        };
                        readonly title: "System";
                        readonly type: "string";
                        readonly enum: readonly ["laser", "scroll", "magic"];
                    };
                    readonly confirmationCode: {
                        readonly description: "Code from email (in case of problems). Optional if you want to upload Supercell account.";
                        readonly title: "Confirmaton Code";
                        readonly type: "string";
                    };
                    readonly cookies: {
                        readonly description: "Cookies. Required if you want to upload Fortnite, Epic Games, Social Club, Instagram or TikTok account.";
                        readonly title: "Cookies";
                        readonly type: "string";
                    };
                    readonly login_without_cookies: {
                        readonly description: "Login without cookies. Optional if you want to upload Instagram account.";
                        readonly title: "Login Without Cookies";
                        readonly type: "boolean";
                    };
                    readonly cookie_login: {
                        readonly description: "Cookie login. Optional. Used only if you want to upload TikTok account.";
                        readonly title: "Cookie login";
                        readonly type: "boolean";
                    };
                    readonly mfa_file: {
                        readonly description: "Steam mafile. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Mfa File";
                        readonly type: "string";
                    };
                    readonly dota2_mmr: {
                        readonly description: "Dota 2 MMR. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Dota 2 MMR";
                        readonly type: "integer";
                    };
                    readonly ea_games: {
                        readonly description: "EA Games. Optional. Used only if you want to upload Steam account.";
                        readonly title: "EA Games";
                        readonly type: "boolean";
                    };
                    readonly uplay_games: {
                        readonly description: "Uplay Games. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Uplay Games";
                        readonly type: "boolean";
                    };
                    readonly the_quarry: {
                        readonly description: "The quarry. Optional. Used only if you want to upload Steam account.";
                        readonly title: "The Quarry";
                        readonly type: "boolean";
                    };
                    readonly warframe: {
                        readonly description: "Warframe. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Warframe";
                        readonly type: "boolean";
                    };
                    readonly ark: {
                        readonly description: "Ark. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Ark";
                        readonly type: "boolean";
                    };
                    readonly ark_ascended: {
                        readonly description: "Ark Ascended. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Ark Ascended";
                        readonly type: "boolean";
                    };
                    readonly genshin_currency: {
                        readonly description: "Genshin Impact Primogems count. Optional. Used only if you want to upload miHoYo account.";
                        readonly title: "Ark Ascended";
                        readonly type: "integer";
                    };
                    readonly honkai_currency: {
                        readonly description: "Honkai Star Rail Stellar Jade count. Optional. Used only if you want to upload miHoYo account.";
                        readonly title: "Stellar Jade";
                        readonly type: "integer";
                    };
                    readonly zenless_currency: {
                        readonly description: "Zenless Zone Zero Polychrome count. Optional. Used only if you want to upload miHoYo account.";
                        readonly title: "Polychrome";
                        readonly type: "integer";
                    };
                    readonly telegramClient: {
                        readonly description: "Telegram client. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Telegram client";
                        readonly type: "string";
                        readonly examples: readonly ["{\"telegram_api_id\": 0, \"telegram_api_hash\": \"string\", \"telegram_device_model\": \"string\", \"telegram_system_version\": \"string\", \"telegram_app_version\": \"string\", \"telegram_lang_pack\": \"string\", \"telegram_lang_code\": \"string\", \"telegram_system_lang_code\": string}"];
                    };
                    readonly telegramJson: {
                        readonly description: "Contents of session.json file. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Telegram Json";
                        readonly type: "string";
                        readonly examples: readonly ["{\"session_file\":\"string\",\"phone\":\"string\",\"user_id\":\"string\",\"app_id\":0,\"app_hash\":\"string\",\"sdk\":\"string\",\"app_version\":\"string\",\"device\":\"string\",\"device_token\":\"string\",\"device_token_secret\":\"string\",\"device_secret\":\"string\",\"signature\":\"string\",\"certificate\":\"string\",\"safetynet\":null,\"perf_cat\":null,\"tz_offset\":null,\"register_time\":0,\"last_check_time\":0,\"avatar\":null,\"first_name\":\"string\",\"last_name\":\"string\",\"username\":\"string\",\"sex\":null,\"spam\":\"string\",\"premium\":null,\"lang_code\":\"string\",\"system_lang_code\":\"string\",\"lang_pack\":\"string\",\"twoFA\":\"string\",\"proxy\":\"string\",\"ipv6\":null,\"module\":\"string\",\"program\":\"string\",\"time\":\"string\"}"];
                    };
                    readonly checkChannels: {
                        readonly description: "Check channels. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Check Channels";
                        readonly type: "boolean";
                    };
                    readonly checkSpam: {
                        readonly description: "Check spam. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Check Spam";
                        readonly type: "boolean";
                    };
                    readonly checkHypixelBan: {
                        readonly description: "Check ban on Hypixel. Optional. Used only if you want to upload Minecraft account.";
                        readonly title: "Check ban on Hypixel";
                        readonly type: "boolean";
                    };
                };
            };
        };
        readonly type: "object";
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly resell_item_id: {
                    readonly title: "Resell Item Id";
                    readonly type: "integer";
                    readonly description: "Put if you are trying to resell an account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly random_proxy: {
                    readonly title: "Random Proxy";
                    readonly type: "boolean";
                    readonly description: "Set this parameter to **true** so that the Market will take a random proxy from its pool for each of your requests.\nOtherwise, if this parameter is set to **false** or not set, the Market will take a specific proxy from its pool, which is predefined for each item.\n> This parameter only works with proxies from the Market pool. If you want to use your own proxies, use the proxy_id or extra[proxy] parameter.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["status", "item", "system_info"];
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                };
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "integer";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly emailLoginData: {
                            readonly title: "Email Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                            readonly type: "string";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "uniq_username_css", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly sold_items_category_count: {
                            readonly title: "Sold";
                            readonly type: "integer";
                        };
                        readonly restore_items_category_count: {
                            readonly title: "Restore";
                            readonly type: "integer";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly displayConvertedBalance: {
                            readonly title: "Display Converted Balance";
                            readonly type: "boolean";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly emailLoginUrl: {
                            readonly title: "Email Login Url";
                            readonly type: "string";
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["currency", "price"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                    readonly type: "integer";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "restore_percents", "isOnline"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_avatar_date", "buyer_user_group_id", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "loginData", "canViewEmailLoginData", "emailLoginData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "sold_items_category_count", "restore_items_category_count", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "account_last_activity", "displayConvertedBalance", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "needToRequireVideoToViewLoginData", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Permission Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "You do not have permission to view this page or perform this action.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PublishingFastSell: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly description: {
                readonly description: "Account public description.";
                readonly title: "Description";
                readonly type: "string";
            };
            readonly information: {
                readonly description: "Account private information (visible only for buyer).";
                readonly title: "Information";
                readonly type: "string";
            };
            readonly login: {
                readonly description: "Account login (or email).";
                readonly title: "Login";
                readonly type: "string";
            };
            readonly password: {
                readonly description: "Account password.";
                readonly title: "Password";
                readonly type: "string";
            };
            readonly login_password: {
                readonly description: "Account login data (login:password format).";
                readonly title: "Login Password";
                readonly type: "string";
            };
            readonly has_email_login_data: {
                readonly description: "Required if a **category** is one of list of Required email login data categories.";
                readonly title: "Has Email Login Data";
                readonly type: "boolean";
            };
            readonly email_login_data: {
                readonly description: "Required if a **category** is one of list of Required email login data categories. Email login data (email:password format).";
                readonly title: "Email Login Data";
                readonly type: "string";
            };
            readonly email_type: {
                readonly description: "Email type.";
                readonly title: "Email Type";
                readonly type: "string";
                readonly enum: readonly ["native", "autoreg"];
            };
            readonly extra: {
                readonly type: "object";
                readonly title: "Extra";
                readonly properties: {
                    readonly proxy: {
                        readonly title: "Proxy";
                        readonly type: "string";
                        readonly description: "Proxy line format ip:port:user:pass (prioritize over proxy_id parameter).";
                    };
                    readonly close_item: {
                        readonly description: "If set, the item will be closed **item_state = closed**.";
                        readonly title: "Close Item";
                        readonly type: "boolean";
                    };
                    readonly region: {
                        readonly description: "Region. Required if you want to upload WoT account. Optional if you want to upload miHoYo or Riot account.";
                        readonly title: "Region";
                        readonly type: "string";
                    };
                    readonly service: {
                        readonly description: "Service. Required if you want to upload VPN, Cinema account or gift.";
                        readonly title: "Service";
                        readonly type: "string";
                        readonly enum: readonly ["AdguardVPN", "PIAVPN", "cyberghostVPN", "hotspotShieldVPN", "mullvadVPN", "pureVPN", "tunnelbearVPN", "ultraVPN", "vanishVPN", "vyprVPN", "windscribeVPN", "planetVPN", "start", "ivi", "telegram", "discord", "discord_trial"];
                    };
                    readonly system: {
                        readonly description: "Supercell system. Required if you want to upload Supercell account.";
                        readonly "x-enumDescriptions": {
                            readonly laser: "Brawl Stars";
                            readonly scroll: "Clash Royale";
                            readonly magic: "Clash of Clans";
                        };
                        readonly title: "System";
                        readonly type: "string";
                        readonly enum: readonly ["laser", "scroll", "magic"];
                    };
                    readonly confirmationCode: {
                        readonly description: "Code from email (in case of problems). Optional if you want to upload Supercell account.";
                        readonly title: "Confirmaton Code";
                        readonly type: "string";
                    };
                    readonly cookies: {
                        readonly description: "Cookies. Required if you want to upload Fortnite, Epic Games, Social Club, Instagram or TikTok account.";
                        readonly title: "Cookies";
                        readonly type: "string";
                    };
                    readonly login_without_cookies: {
                        readonly description: "Login without cookies. Optional if you want to upload Instagram account.";
                        readonly title: "Login Without Cookies";
                        readonly type: "boolean";
                    };
                    readonly cookie_login: {
                        readonly description: "Cookie login. Optional. Used only if you want to upload TikTok account.";
                        readonly title: "Cookie login";
                        readonly type: "boolean";
                    };
                    readonly mfa_file: {
                        readonly description: "Steam mafile. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Mfa File";
                        readonly type: "string";
                    };
                    readonly dota2_mmr: {
                        readonly description: "Dota 2 MMR. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Dota 2 MMR";
                        readonly type: "integer";
                    };
                    readonly ea_games: {
                        readonly description: "EA Games. Optional. Used only if you want to upload Steam account.";
                        readonly title: "EA Games";
                        readonly type: "boolean";
                    };
                    readonly uplay_games: {
                        readonly description: "Uplay Games. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Uplay Games";
                        readonly type: "boolean";
                    };
                    readonly the_quarry: {
                        readonly description: "The quarry. Optional. Used only if you want to upload Steam account.";
                        readonly title: "The Quarry";
                        readonly type: "boolean";
                    };
                    readonly warframe: {
                        readonly description: "Warframe. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Warframe";
                        readonly type: "boolean";
                    };
                    readonly ark: {
                        readonly description: "Ark. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Ark";
                        readonly type: "boolean";
                    };
                    readonly ark_ascended: {
                        readonly description: "Ark Ascended. Optional. Used only if you want to upload Steam account.";
                        readonly title: "Ark Ascended";
                        readonly type: "boolean";
                    };
                    readonly genshin_currency: {
                        readonly description: "Genshin Impact Primogems count. Optional. Used only if you want to upload miHoYo account.";
                        readonly title: "Ark Ascended";
                        readonly type: "integer";
                    };
                    readonly honkai_currency: {
                        readonly description: "Honkai Star Rail Stellar Jade count. Optional. Used only if you want to upload miHoYo account.";
                        readonly title: "Stellar Jade";
                        readonly type: "integer";
                    };
                    readonly zenless_currency: {
                        readonly description: "Zenless Zone Zero Polychrome count. Optional. Used only if you want to upload miHoYo account.";
                        readonly title: "Polychrome";
                        readonly type: "integer";
                    };
                    readonly telegramClient: {
                        readonly description: "Telegram client. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Telegram client";
                        readonly type: "string";
                        readonly examples: readonly ["{\"telegram_api_id\": 0, \"telegram_api_hash\": \"string\", \"telegram_device_model\": \"string\", \"telegram_system_version\": \"string\", \"telegram_app_version\": \"string\", \"telegram_lang_pack\": \"string\", \"telegram_lang_code\": \"string\", \"telegram_system_lang_code\": string}"];
                    };
                    readonly telegramJson: {
                        readonly description: "Contents of session.json file. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Telegram Json";
                        readonly type: "string";
                        readonly examples: readonly ["{\"session_file\":\"string\",\"phone\":\"string\",\"user_id\":\"string\",\"app_id\":0,\"app_hash\":\"string\",\"sdk\":\"string\",\"app_version\":\"string\",\"device\":\"string\",\"device_token\":\"string\",\"device_token_secret\":\"string\",\"device_secret\":\"string\",\"signature\":\"string\",\"certificate\":\"string\",\"safetynet\":null,\"perf_cat\":null,\"tz_offset\":null,\"register_time\":0,\"last_check_time\":0,\"avatar\":null,\"first_name\":\"string\",\"last_name\":\"string\",\"username\":\"string\",\"sex\":null,\"spam\":\"string\",\"premium\":null,\"lang_code\":\"string\",\"system_lang_code\":\"string\",\"lang_pack\":\"string\",\"twoFA\":\"string\",\"proxy\":\"string\",\"ipv6\":null,\"module\":\"string\",\"program\":\"string\",\"time\":\"string\"}"];
                    };
                    readonly checkChannels: {
                        readonly description: "Check channels. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Check Channels";
                        readonly type: "boolean";
                    };
                    readonly checkSpam: {
                        readonly description: "Check spam. Optional. Used only if you want to upload Telegram account.";
                        readonly title: "Check Spam";
                        readonly type: "boolean";
                    };
                    readonly checkHypixelBan: {
                        readonly description: "Check ban on Hypixel. Optional. Used only if you want to upload Minecraft account.";
                        readonly title: "Check ban on Hypixel";
                        readonly type: "boolean";
                    };
                };
            };
        };
        readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly title: "Title Ru";
                    readonly type: "string";
                    readonly description: "Title of account. If **title** specified and **title_en** is empty, **title_en** will be automatically translated to English language.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly title_en: {
                    readonly title: "Title En";
                    readonly type: "string";
                    readonly description: "English title of account. If **title_en** specified and **title** is empty, **title** will be automatically translated to Russian language.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly price: {
                    readonly title: "Price";
                    readonly type: "number";
                    readonly description: "Current price of account in your currency.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly category_id: {
                    readonly title: "Category Id";
                    readonly type: "integer";
                    readonly description: "Accounts category.";
                    readonly "x-enumDescriptions": {
                        readonly "1": "Steam";
                        readonly "3": "EA (Origin)";
                        readonly "4": "Warface";
                        readonly "5": "Uplay";
                        readonly "6": "ChatGPT";
                        readonly "7": "Social Club";
                        readonly "9": "Fortnite";
                        readonly "10": "Instagram";
                        readonly "11": "Battlenet";
                        readonly "12": "Epic Games";
                        readonly "13": "Riot";
                        readonly "14": "World Of Tanks";
                        readonly "15": "Supercell";
                        readonly "16": "WOT Blitz";
                        readonly "17": "miHoYo";
                        readonly "18": "Escape From Tarkov";
                        readonly "19": "VPN";
                        readonly "20": "Tiktok";
                        readonly "22": "Discord";
                        readonly "24": "Telegram";
                        readonly "27": "War Thunder";
                        readonly "28": "Minecraft";
                        readonly "30": "Gifts";
                        readonly "31": "Roblox";
                    };
                    readonly enum: readonly [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 27, 28, 30, 31];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly currency: {
                    readonly title: "Currency";
                    readonly type: "string";
                    readonly enum: readonly ["rub", "uah", "kzt", "byn", "usd", "eur", "gbp", "cny", "try", "jpy", "brl"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                    readonly description: "Using currency.";
                };
                readonly item_origin: {
                    readonly description: "Account origin. Where did you get it from.";
                    readonly type: "string";
                    readonly enum: readonly ["brute", "phishing", "stealer", "personal", "resale", "autoreg", "dummy", "self_registration"];
                    readonly "x-enumDescriptions": {
                        readonly brute: "Account received using Bruteforce";
                        readonly phishing: "Account received from phishing page";
                        readonly stealer: "Account received from stealer logs";
                        readonly personal: "Account is yours. You created it yourself";
                        readonly resale: "Account received from another seller";
                        readonly autoreg: "Account is automatically registered by a tool";
                        readonly dummy: "Dummy (empty) account (only for Steam category)";
                        readonly self_registration: "Self registered account (only for Telegram category)";
                    };
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly extended_guarantee: {
                    readonly title: "Extended Guarantee";
                    readonly type: "integer";
                    readonly description: "Guarantee type.";
                    readonly "x-enumDescriptions": {
                        readonly "0": "24 hours";
                        readonly "1": "3 days";
                        readonly "-1": "12 hours";
                    };
                    readonly enum: readonly [-1, 0, 1];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly allow_ask_discount: {
                    readonly title: "Allow Ask Discount";
                    readonly type: "boolean";
                    readonly description: "Allow users to ask discount for this account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly proxy_id: {
                    readonly title: "Proxy Id";
                    readonly type: "integer";
                    readonly description: "Proxy id that will be used to check account.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
                readonly random_proxy: {
                    readonly title: "Random Proxy";
                    readonly type: "boolean";
                    readonly description: "Set this parameter to **true** so that the Market will take a random proxy from its pool for each of your requests.\nOtherwise, if this parameter is set to **false** or not set, the Market will take a specific proxy from its pool, which is predefined for each item.\n> This parameter only works with proxies from the Market pool. If you want to use your own proxies, use the proxy_id or extra[proxy] parameter.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["price", "category_id", "currency", "item_origin"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "FastSellModel";
            readonly required: readonly ["item", "itemLink", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly pending_deletion_date: {
                            readonly title: "Pending";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly note_text: {
                            readonly title: "Note";
                            readonly type: "string";
                        };
                        readonly content_type: {
                            readonly title: "Content";
                        };
                        readonly content_id: {
                            readonly title: "Content";
                        };
                        readonly delete_date: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_user_id: {
                            readonly title: "Delete";
                            readonly type: "integer";
                        };
                        readonly delete_username: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly delete_reason: {
                            readonly title: "Delete";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_display_icon_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_uniq_banner: {
                            readonly title: "Buyer";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly is_fave: {
                            readonly title: "Is";
                        };
                        readonly in_cart: {
                            readonly title: "In";
                        };
                        readonly cart_price: {
                            readonly title: "Cart";
                        };
                        readonly canResellItem: {
                            readonly title: "Can Resell Item";
                            readonly type: "boolean";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "number";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                                readonly cancelledReason: {
                                    readonly title: "Cancelled Reason";
                                    readonly type: "string";
                                };
                                readonly cancelledReasonPhrase: {
                                    readonly title: "Cancelled Reason Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase", "cancelledReason", "cancelledReasonPhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewItemViews: {
                            readonly title: "Can View Item Views";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly copyFormatData: {
                            readonly title: "Copy Format Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly title_link: {
                                    readonly title: "Title";
                                    readonly type: "string";
                                };
                                readonly login_data: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly full: {
                                    readonly title: "Full";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["title_link", "login_data", "full"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly display_icon_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly uniq_banner: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "display_icon_group_id", "uniq_username_css", "uniq_banner", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly priceWithSellerFeeLabel: {
                            readonly title: "Price With Seller Fee Label";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly imagePreviewLinks: {
                            readonly title: "Image Preview Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly canChangeEmailPassword: {
                            readonly title: "Can Change Email Password";
                            readonly type: "boolean";
                        };
                        readonly uniqueKeyExists: {
                            readonly title: "Unique Key Exists";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1234567890": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1234567890"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "object";
                            readonly properties: {
                                readonly _4: {
                                    readonly title: "";
                                    readonly type: "string";
                                };
                                readonly allowSelfUnban: {
                                    readonly title: "Allow Self Unban";
                                    readonly type: "array";
                                    readonly items: {};
                                };
                                readonly ban_reason: {
                                    readonly title: "Ban";
                                    readonly type: "string";
                                };
                                readonly discord: {
                                    readonly title: "Discord";
                                    readonly type: "string";
                                };
                                readonly github: {
                                    readonly title: "Github";
                                    readonly type: "string";
                                };
                                readonly jabber: {
                                    readonly title: "Jabber";
                                    readonly type: "string";
                                };
                                readonly lztUnbanAmount: {
                                    readonly title: "Lzt Unban Amount";
                                    readonly type: "string";
                                };
                                readonly steam: {
                                    readonly title: "Steam";
                                    readonly type: "string";
                                };
                                readonly telegram: {
                                    readonly title: "Telegram";
                                    readonly type: "string";
                                };
                                readonly vk: {
                                    readonly title: "Vk";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["_4", "allowSelfUnban", "ban_reason", "discord", "github", "jabber", "lztUnbanAmount", "steam", "telegram", "vk"];
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                    readonly priceValue: {
                                        readonly title: "Price Value";
                                        readonly type: "number";
                                    };
                                };
                                readonly required: readonly ["currency", "price", "priceValue"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly nextAllowedBumpDate: {
                                    readonly title: "Next Allowed Bump Date";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "nextAllowedBumpDate", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly canShareItem: {
                            readonly title: "Can Share Item";
                            readonly type: "boolean";
                        };
                        readonly canCheckAiPrice: {
                            readonly title: "Can Check Ai Price";
                            readonly type: "boolean";
                        };
                        readonly aiPrice: {
                            readonly title: "Ai Price";
                            readonly type: "integer";
                        };
                        readonly aiPriceCheckDate: {
                            readonly title: "Ai Price Check Date";
                            readonly type: "integer";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canCheckAutoBuyPrice: {
                            readonly title: "Can Check Auto Buy Price";
                            readonly type: "boolean";
                        };
                        readonly autoBuyPrice: {
                            readonly title: "Auto Buy Price";
                            readonly type: "integer";
                        };
                        readonly autoBuyPriceCheckDate: {
                            readonly title: "Auto Buy Price Check Date";
                            readonly type: "integer";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly effective_last_activity: {
                                    readonly title: "Effective";
                                    readonly type: "integer";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                                readonly contacts: {
                                    readonly title: "Contacts";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly ban_reason: {
                                            readonly title: "Ban";
                                            readonly type: "string";
                                        };
                                        readonly telegram: {
                                            readonly title: "Telegram";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["ban_reason", "telegram"];
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "effective_last_activity", "restore_percents", "isOnline", "contacts"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "pending_deletion_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "note_text", "content_type", "content_id", "delete_date", "delete_user_id", "delete_username", "delete_reason", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_display_icon_group_id", "buyer_uniq_banner", "buyer_avatar_date", "buyer_user_group_id", "is_fave", "in_cart", "cart_price", "canResellItem", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewItemViews", "loginData", "canViewEmailLoginData", "copyFormatData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "rub_price", "price_currency", "priceWithSellerFeeLabel", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "imagePreviewLinks", "canChangePassword", "canChangeEmailPassword", "uniqueKeyExists", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "canShareItem", "canCheckAiPrice", "aiPrice", "aiPriceCheckDate", "needToRequireVideoToViewLoginData", "canCheckAutoBuyPrice", "autoBuyPrice", "autoBuyPriceCheckDate", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly itemLink: {
                    readonly title: "Item link";
                    readonly type: "string";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "No Temp Mail";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "There is no temp mail for this account. Call GET /goods/add to receive temp mail.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PurchasingCheck: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["status", "item", "requireVideoRecording", "system_info"];
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                };
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly category_title: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly category_url: {
                            readonly title: "Category";
                            readonly type: "string";
                        };
                        readonly require_temp_email: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly available_temp_email: {
                            readonly title: "Available";
                            readonly type: "integer";
                        };
                        readonly check_button_enabled: {
                            readonly title: "Check";
                            readonly type: "integer";
                        };
                        readonly checker_enabled: {
                            readonly title: "Checker";
                            readonly type: "integer";
                        };
                        readonly buy_without_validation: {
                            readonly title: "Buy";
                            readonly type: "integer";
                        };
                        readonly has_guarantee: {
                            readonly title: "Has";
                            readonly type: "integer";
                        };
                        readonly require_video_recording: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly can_be_resold: {
                            readonly title: "Can";
                            readonly type: "integer";
                        };
                        readonly login_type: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly require_email_login_data: {
                            readonly title: "Require";
                            readonly type: "integer";
                        };
                        readonly category_prefix_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly ask_user_id: {
                            readonly title: "Ask";
                        };
                        readonly ask_item_id: {
                            readonly title: "Ask";
                        };
                        readonly ask_date: {
                            readonly title: "Ask";
                        };
                        readonly discount_price: {
                            readonly title: "Discount";
                        };
                        readonly discount_accepted: {
                            readonly title: "Discount";
                        };
                        readonly user_alerted: {
                            readonly title: "User";
                        };
                        readonly message: {
                            readonly title: "Message";
                        };
                        readonly min_price: {
                            readonly title: "Min";
                            readonly type: "integer";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "integer";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly isSmallExf: {
                            readonly title: "Is Small Exf";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly emailLoginUrl: {
                            readonly title: "Email Login Url";
                            readonly type: "string";
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["currency", "price"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "restore_percents", "isOnline"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "view_count", "is_sticky", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "category_title", "category_url", "require_temp_email", "available_temp_email", "check_button_enabled", "checker_enabled", "buy_without_validation", "has_guarantee", "require_video_recording", "can_be_resold", "login_type", "require_email_login_data", "category_prefix_id", "ask_user_id", "ask_item_id", "ask_date", "discount_price", "discount_accepted", "user_alerted", "message", "min_price", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "canViewEmailLoginData", "showGetEmailCodeButton", "isPersonalAccount", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "isSmallExf", "account_last_activity", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "needToRequireVideoToViewLoginData", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly requireVideoRecording: {
                    readonly title: "Require Video Recording";
                    readonly type: "boolean";
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Market Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "default";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PurchasingConfirm: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly price: {
                    readonly title: "Price";
                    readonly type: "integer";
                    readonly description: "Current price of account in your currency.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "ConfirmBuyModel";
            readonly required: readonly ["item", "system_info"];
            readonly type: "object";
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                    readonly default: "ok";
                };
                readonly item: {
                    readonly title: "ItemLoginData";
                    readonly required: readonly ["loginData"];
                    readonly type: "object";
                    readonly properties: {
                        readonly loginData: {
                            readonly title: "LoginData";
                            readonly required: readonly ["adviceToChangePassword", "encodedOldPassword", "encodedPassword", "encodedRaw", "login", "oldPassword", "password", "raw"];
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encodedraw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encodedpassword";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Oldpassword";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encodedoldpassword";
                                    readonly type: "string";
                                };
                                readonly adviceToChangePassword: {
                                    readonly title: "Advicetochangepassword";
                                    readonly type: "boolean";
                                };
                            };
                        };
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Market Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "default";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
declare const PurchasingFastBuy: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly item_id: {
                    readonly title: "Itemid";
                    readonly type: "integer";
                    readonly description: "Item id.";
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly ["item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly price: {
                    readonly title: "Price";
                    readonly type: "number";
                    readonly description: "Current price of account in your currency.";
                    readonly minimum: 1;
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly required: readonly ["status", "item", "system_info"];
            readonly properties: {
                readonly status: {
                    readonly title: "Status";
                    readonly type: "string";
                };
                readonly item: {
                    readonly title: "Item";
                    readonly type: "object";
                    readonly properties: {
                        readonly item_id: {
                            readonly title: "Item";
                            readonly type: "integer";
                        };
                        readonly item_state: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly category_id: {
                            readonly title: "Category";
                            readonly type: "integer";
                        };
                        readonly published_date: {
                            readonly title: "Published";
                            readonly type: "integer";
                        };
                        readonly title: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly price: {
                            readonly title: "Price";
                            readonly type: "integer";
                        };
                        readonly update_stat_date: {
                            readonly title: "Update";
                            readonly type: "integer";
                        };
                        readonly refreshed_date: {
                            readonly title: "Refreshed";
                            readonly type: "integer";
                        };
                        readonly edit_date: {
                            readonly title: "Edit";
                            readonly type: "integer";
                        };
                        readonly login: {
                            readonly title: "Login";
                            readonly type: "string";
                        };
                        readonly temp_email: {
                            readonly title: "Temp";
                            readonly type: "string";
                        };
                        readonly view_count: {
                            readonly title: "View";
                            readonly type: "integer";
                        };
                        readonly is_sticky: {
                            readonly title: "Is";
                            readonly type: "integer";
                        };
                        readonly information: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly item_origin: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly extended_guarantee: {
                            readonly title: "Extended";
                            readonly type: "integer";
                        };
                        readonly nsb: {
                            readonly title: "Nsb";
                            readonly type: "integer";
                        };
                        readonly allow_ask_discount: {
                            readonly title: "Allow";
                            readonly type: "integer";
                        };
                        readonly title_en: {
                            readonly title: "Title";
                            readonly type: "string";
                        };
                        readonly description_en: {
                            readonly title: "Description";
                            readonly type: "string";
                        };
                        readonly information_en: {
                            readonly title: "Information";
                            readonly type: "string";
                        };
                        readonly email_type: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly email_provider: {
                            readonly title: "Email";
                            readonly type: "string";
                        };
                        readonly item_domain: {
                            readonly title: "Item";
                            readonly type: "string";
                        };
                        readonly resale_item_origin: {
                            readonly title: "Resale";
                            readonly type: "string";
                        };
                        readonly user_allow_ask_discount: {
                            readonly title: "User";
                            readonly type: "integer";
                        };
                        readonly max_discount_percent: {
                            readonly title: "Max";
                            readonly type: "integer";
                        };
                        readonly market_custom_title: {
                            readonly title: "Market";
                            readonly type: "string";
                        };
                        readonly feedback_data: {
                            readonly title: "Feedback";
                            readonly type: "string";
                        };
                        readonly buyer_avatar_date: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly buyer_user_group_id: {
                            readonly title: "Buyer";
                            readonly type: "integer";
                        };
                        readonly priceWithSellerFee: {
                            readonly title: "Price With Seller Fee";
                            readonly type: "integer";
                        };
                        readonly guarantee: {
                            readonly title: "Guarantee";
                            readonly type: "object";
                            readonly properties: {
                                readonly duration: {
                                    readonly title: "Duration";
                                    readonly type: "integer";
                                };
                                readonly class: {
                                    readonly title: "Class";
                                    readonly type: "string";
                                };
                                readonly durationPhrase: {
                                    readonly title: "Duration Phrase";
                                    readonly type: "string";
                                };
                                readonly endDate: {
                                    readonly title: "End Date";
                                    readonly type: "integer";
                                };
                                readonly active: {
                                    readonly title: "Active";
                                    readonly type: "boolean";
                                };
                                readonly cancelled: {
                                    readonly title: "Cancelled";
                                    readonly type: "boolean";
                                };
                                readonly remainingTime: {
                                    readonly title: "Remaining Time";
                                    readonly type: "integer";
                                };
                                readonly remainingTimePhrase: {
                                    readonly title: "Remaining Time Phrase";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["duration", "class", "durationPhrase", "endDate", "active", "cancelled", "remainingTime", "remainingTimePhrase"];
                        };
                        readonly canViewLoginData: {
                            readonly title: "Can View Login Data";
                            readonly type: "boolean";
                        };
                        readonly canUpdateItemStats: {
                            readonly title: "Can Update Item Stats";
                            readonly type: "boolean";
                        };
                        readonly canReportItem: {
                            readonly title: "Can Report Item";
                            readonly type: "boolean";
                        };
                        readonly loginData: {
                            readonly title: "Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly canViewEmailLoginData: {
                            readonly title: "Can View Email Login Data";
                            readonly type: "boolean";
                        };
                        readonly emailLoginData: {
                            readonly title: "Email Login Data";
                            readonly type: "object";
                            readonly properties: {
                                readonly raw: {
                                    readonly title: "Raw";
                                    readonly type: "string";
                                };
                                readonly encodedRaw: {
                                    readonly title: "Encoded Raw";
                                    readonly type: "string";
                                };
                                readonly login: {
                                    readonly title: "Login";
                                    readonly type: "string";
                                };
                                readonly password: {
                                    readonly title: "Password";
                                    readonly type: "string";
                                };
                                readonly encodedPassword: {
                                    readonly title: "Encoded Password";
                                    readonly type: "string";
                                };
                                readonly oldPassword: {
                                    readonly title: "Old Password";
                                    readonly type: "string";
                                };
                                readonly encodedOldPassword: {
                                    readonly title: "Encoded Old Password";
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["raw", "encodedRaw", "login", "password", "encodedPassword", "oldPassword", "encodedOldPassword"];
                        };
                        readonly showGetEmailCodeButton: {
                            readonly title: "Show Get Email Code Button";
                            readonly type: "boolean";
                        };
                        readonly getEmailCodeDisplayLogin: {
                            readonly title: "Get Email Code Display Login";
                            readonly type: "string";
                        };
                        readonly buyer: {
                            readonly title: "Buyer";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly operation_date: {
                                    readonly title: "Operation";
                                    readonly type: "integer";
                                };
                                readonly visitorIsBuyer: {
                                    readonly title: "Visitor Is Buyer";
                                    readonly type: "boolean";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly uniq_username_css: {
                                    readonly title: "Uniq";
                                    readonly type: "string";
                                };
                                readonly user_group_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                            };
                            readonly required: readonly ["user_id", "operation_date", "visitorIsBuyer", "username", "is_banned", "display_style_group_id", "uniq_username_css", "user_group_id"];
                        };
                        readonly isPersonalAccount: {
                            readonly title: "Is Personal Account";
                            readonly type: "boolean";
                        };
                        readonly sold_items_category_count: {
                            readonly title: "Sold";
                            readonly type: "integer";
                        };
                        readonly restore_items_category_count: {
                            readonly title: "Restore";
                            readonly type: "integer";
                        };
                        readonly rub_price: {
                            readonly title: "Rub";
                            readonly type: "integer";
                        };
                        readonly price_currency: {
                            readonly title: "Price";
                            readonly type: "string";
                        };
                        readonly canValidateAccount: {
                            readonly title: "Can Validate Account";
                            readonly type: "boolean";
                        };
                        readonly canResellItemAfterPurchase: {
                            readonly title: "Can Resell Item After Purchase";
                            readonly type: "boolean";
                        };
                        readonly account_last_activity: {
                            readonly title: "Account";
                            readonly type: "integer";
                        };
                        readonly displayConvertedBalance: {
                            readonly title: "Display Converted Balance";
                            readonly type: "boolean";
                        };
                        readonly canViewAccountLink: {
                            readonly title: "Can View Account Link";
                            readonly type: "boolean";
                        };
                        readonly accountLinks: {
                            readonly title: "Account Links";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly link: {
                                        readonly title: "Link";
                                        readonly type: "string";
                                    };
                                    readonly text: {
                                        readonly title: "Text";
                                        readonly type: "string";
                                    };
                                    readonly iconClass: {
                                        readonly title: "Icon Class";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["link", "text", "iconClass"];
                            };
                        };
                        readonly accountLink: {
                            readonly title: "Account Link";
                            readonly type: "string";
                        };
                        readonly emailLoginUrl: {
                            readonly title: "Email Login Url";
                            readonly type: "string";
                        };
                        readonly canChangePassword: {
                            readonly title: "Can Change Password";
                            readonly type: "boolean";
                        };
                        readonly itemOriginPhrase: {
                            readonly title: "Item Origin Phrase";
                            readonly type: "string";
                        };
                        readonly visitorIsAuthor: {
                            readonly title: "Visitor Is Author";
                            readonly type: "boolean";
                        };
                        readonly canAskDiscount: {
                            readonly title: "Can Ask Discount";
                            readonly type: "boolean";
                        };
                        readonly tags: {
                            readonly title: "Tags";
                            readonly type: "object";
                            readonly properties: {
                                readonly "1": {
                                    readonly title: "";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly tag_id: {
                                            readonly title: "Tag";
                                            readonly type: "integer";
                                        };
                                        readonly title: {
                                            readonly title: "Title";
                                            readonly type: "string";
                                        };
                                        readonly isDefault: {
                                            readonly title: "Is Default";
                                            readonly type: "boolean";
                                        };
                                        readonly forOwnedAccountsOnly: {
                                            readonly title: "For Owned Accounts Only";
                                            readonly type: "boolean";
                                        };
                                        readonly bc: {
                                            readonly title: "Bc";
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["tag_id", "title", "isDefault", "forOwnedAccountsOnly", "bc"];
                                };
                            };
                            readonly required: readonly ["1"];
                        };
                        readonly customFields: {
                            readonly title: "Custom Fields";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly externalAuth: {
                            readonly title: "External Auth";
                            readonly type: "array";
                            readonly items: {};
                        };
                        readonly isTrusted: {
                            readonly title: "Is Trusted";
                            readonly type: "boolean";
                        };
                        readonly isBirthdayToday: {
                            readonly title: "Is Birthday Today";
                            readonly type: "boolean";
                        };
                        readonly isIgnored: {
                            readonly title: "Is Ignored";
                            readonly type: "boolean";
                        };
                        readonly deposit: {
                            readonly title: "Deposit";
                            readonly type: "integer";
                        };
                        readonly extraPrices: {
                            readonly title: "Extra Prices";
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly currency: {
                                        readonly title: "Currency";
                                        readonly type: "string";
                                    };
                                    readonly price: {
                                        readonly title: "Price";
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["currency", "price"];
                            };
                        };
                        readonly canViewAccountLoginAndTempEmail: {
                            readonly title: "Can View Account Login And Temp Email";
                            readonly type: "boolean";
                        };
                        readonly bumpSettings: {
                            readonly title: "Bump Settings";
                            readonly type: "object";
                            readonly properties: {
                                readonly canBumpItem: {
                                    readonly title: "Can Bump Item";
                                    readonly type: "boolean";
                                };
                                readonly canBumpItemGlobally: {
                                    readonly title: "Can Bump Item Globally";
                                    readonly type: "boolean";
                                };
                                readonly shortErrorPhrase: {
                                    readonly title: "Short Error Phrase";
                                };
                                readonly errorPhrase: {
                                    readonly title: "Error Phrase";
                                };
                            };
                            readonly required: readonly ["canBumpItem", "canBumpItemGlobally", "shortErrorPhrase", "errorPhrase"];
                        };
                        readonly canCheckGuarantee: {
                            readonly title: "Can Check Guarantee";
                            readonly type: "boolean";
                        };
                        readonly needToRequireVideoToViewLoginData: {
                            readonly title: "Need To Require Video To View Login Data";
                            readonly type: "boolean";
                        };
                        readonly descriptionHtml: {
                            readonly title: "Description Html";
                            readonly type: "string";
                        };
                        readonly descriptionEnHtml: {
                            readonly title: "Description En Html";
                            readonly type: "string";
                        };
                        readonly descriptionPlain: {
                            readonly title: "Description Plain";
                            readonly type: "string";
                        };
                        readonly descriptionEnPlain: {
                            readonly title: "Description En Plain";
                            readonly type: "string";
                        };
                        readonly seller: {
                            readonly title: "Seller";
                            readonly type: "object";
                            readonly properties: {
                                readonly user_id: {
                                    readonly title: "User";
                                    readonly type: "integer";
                                };
                                readonly username: {
                                    readonly title: "Username";
                                    readonly type: "string";
                                };
                                readonly avatar_date: {
                                    readonly title: "Avatar";
                                    readonly type: "integer";
                                };
                                readonly is_banned: {
                                    readonly title: "Is";
                                    readonly type: "integer";
                                };
                                readonly display_style_group_id: {
                                    readonly title: "Display";
                                    readonly type: "integer";
                                };
                                readonly joined_date: {
                                    readonly title: "Joined";
                                    readonly type: "integer";
                                };
                                readonly sold_items_count: {
                                    readonly title: "Sold";
                                    readonly type: "integer";
                                };
                                readonly active_items_count: {
                                    readonly title: "Active";
                                    readonly type: "integer";
                                };
                                readonly restore_data: {
                                    readonly title: "Restore";
                                    readonly type: "string";
                                };
                                readonly restore_percents: {
                                    readonly title: "Restore";
                                    readonly type: "integer";
                                };
                                readonly isOnline: {
                                    readonly title: "Is Online";
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["user_id", "username", "avatar_date", "is_banned", "display_style_group_id", "joined_date", "sold_items_count", "active_items_count", "restore_data", "restore_percents", "isOnline"];
                        };
                    };
                    readonly required: readonly ["item_id", "item_state", "category_id", "published_date", "title", "description", "price", "update_stat_date", "refreshed_date", "edit_date", "login", "temp_email", "view_count", "is_sticky", "information", "item_origin", "extended_guarantee", "nsb", "allow_ask_discount", "title_en", "description_en", "information_en", "email_type", "email_provider", "item_domain", "resale_item_origin", "user_allow_ask_discount", "max_discount_percent", "market_custom_title", "feedback_data", "buyer_avatar_date", "buyer_user_group_id", "priceWithSellerFee", "guarantee", "canViewLoginData", "canUpdateItemStats", "canReportItem", "loginData", "canViewEmailLoginData", "emailLoginData", "showGetEmailCodeButton", "getEmailCodeDisplayLogin", "buyer", "isPersonalAccount", "sold_items_category_count", "restore_items_category_count", "rub_price", "price_currency", "canValidateAccount", "canResellItemAfterPurchase", "account_last_activity", "displayConvertedBalance", "canViewAccountLink", "accountLinks", "accountLink", "emailLoginUrl", "canChangePassword", "itemOriginPhrase", "visitorIsAuthor", "canAskDiscount", "tags", "customFields", "externalAuth", "isTrusted", "isBirthdayToday", "isIgnored", "deposit", "extraPrices", "canViewAccountLoginAndTempEmail", "bumpSettings", "canCheckGuarantee", "needToRequireVideoToViewLoginData", "descriptionHtml", "descriptionEnHtml", "descriptionPlain", "descriptionEnPlain", "seller"];
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "401": {
            readonly title: "Unauthorized";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "403": {
            readonly title: "Market Error";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "default";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
        readonly "404": {
            readonly title: "Ad Not Found";
            readonly type: "object";
            readonly properties: {
                readonly errors: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly default: "Ad not found.";
                    };
                };
                readonly system_info: {
                    readonly required: readonly ["visitor_id", "time"];
                    readonly properties: {
                        readonly visitor_id: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                        readonly time: {
                            readonly type: "integer";
                            readonly default: 0;
                        };
                    };
                    readonly type: "object";
                };
            };
            readonly $schema: "https://json-schema.org/draft/2020-12/schema#";
        };
    };
};
export { AutoPaymentsCreate, AutoPaymentsDelete, AutoPaymentsList, Batch, CartAdd, CartDelete, CategoryAll, CategoryBattleNet, CategoryChatGpt, CategoryDiscord, CategoryEa, CategoryEpicGames, CategoryEscapeFromTarkov, CategoryFortnite, CategoryGames, CategoryGifts, CategoryInstagram, CategoryList, CategoryMihoyo, CategoryMinecraft, CategoryParams, CategoryRiot, CategoryRoblox, CategorySocialClub, CategorySteam, CategorySupercell, CategoryTelegram, CategoryTikTok, CategoryUplay, CategoryVpn, CategoryWarThunder, CategoryWarface, CategoryWot, CategoryWotBlitz, ListFavorites, ListOrders, ListUser, ListViewed, ManagingAiPrice, ManagingAutoBuyPrice, ManagingBulkGet, ManagingBump, ManagingChangePassword, ManagingCheckGuarantee, ManagingClose, ManagingCreateClaim, ManagingEdit, ManagingEmailCode, ManagingFavorite, ManagingGet, ManagingGetLetters2, ManagingImage, ManagingNote, ManagingOpen, ManagingRefuseGuarantee, ManagingSteamInventoryValue, ManagingSteamMafile, ManagingSteamMafileCode, ManagingSteamPreview, ManagingSteamRemoveMafile, ManagingSteamSda, ManagingSteamUpdateValue, ManagingSteamValue, ManagingStick, ManagingTag, ManagingTelegramCode, ManagingTelegramResetAuth, ManagingTempEmailPassword, ManagingTransfer, ManagingUnfavorite, ManagingUnstick, ManagingUntag, MangingDelete, PaymentsCancel, PaymentsCurrency, PaymentsFee, PaymentsHistory, PaymentsInvoiceCreate, PaymentsInvoiceGet, PaymentsInvoiceList, PaymentsPayout, PaymentsPayoutServices, PaymentsTransfer, ProfileClaims, ProfileEdit, ProfileGet, ProxyAdd, ProxyDelete, ProxyGet, PublishingAdd, PublishingCheck, PublishingFastSell, PurchasingCheck, PurchasingConfirm, PurchasingFastBuy };
